import{aj as u,V as f,bR as w,Q as n,a6 as p,dt as h,a8 as y,v as _,J as V}from"./main-6quFNups.js";import{S as v}from"./LayerView2D-BvwNnK_4.js";import{t as g}from"./GraphicContainer-DF2Z3c23.js";import{A as c}from"./GraphicsView2D-As3JruVT.js";import{y as C}from"./LayerView-dhjy9Q3O.js";import"./preload-helper-ExcqyqRp.js";import"./utils-BQBvadb7.js";import"./Container-Wt7Eofc2.js";import"./MapView-D6JxKHsk.js";import"./globalCss-C4MV-dFx.js";import"./Queue-C89HhVJm.js";import"./signal-BQC6Vdrb.js";import"./Version-CoyC2tgY.js";import"./CollectionFlattener-DAhdUqkJ.js";import"./workers-C2CNcAmR.js";import"./intl-AgB03gne.js";import"./projection-DqXfl-Vo.js";import"./TileInfo-DvSeUvHN.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-C-ojz6ZC.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-ChhgSV9z.js";import"./Map-CAHx89Fp.js";import"./Basemap-C9UiNqB6.js";import"./loadAll-BZVPBRgW.js";import"./PortalItem-Bu_JIDdc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-C5nbHoGE.js";import"./common-DQOJ18NT.js";import"./Layer-BO-54PU5.js";import"./TimeExtent-DzeR00n-.js";import"./GraphicsCollection-96dRpTEG.js";import"./HeightModelInfo-DCMwS1uc.js";import"./timeZoneUtils-DWgWPlk8.js";import"./ReactiveMap-9U9R9mmN.js";import"./Query-BMbdToTX.js";import"./Field-CoXg2Ffq.js";import"./fieldType-DXs8Zb8b.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-CY1o7i8Z.js";import"./a11yUtils-CRzEKdrE.js";import"./heightModelInfoUtils-DmfFQIbH.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-CEZHBUPE.js";import"./utils-50ACXivP.js";import"./utils-DoHHh0aQ.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-CGs3vqLA.js";import"./vec32-xW7S-hCa.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-iNF7sB7Q.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DEwFxB4M.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-BVPGnyKk.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-Cob8POor.js";import"./EffectView-BUZQoRFr.js";import"./parser-B5NINrTS.js";import"./layerViewUtils-CV7lmwHY.js";import"./AGraphicContainer-BmrRk7QQ.js";import"./TechniqueInstance-DoPwVqEp.js";import"./UpdateTracking2D-CnRFbfGB.js";import"./dataViewUtils-vipej-kK.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-C9mHCG0I.js";import"./VertexArrayObject-CKJWtwFN.js";import"./memoryEstimations-BxOZ4r8L.js";import"./TileContainer-DoifbFof.js";import"./WGLContainer-BIcFQrYK.js";import"./ProgramTemplate-DRUuRm_m.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-CvJmAoRi.js";import"./OptimizedFeatureSet-C-jNiUSk.js";import"./OptimizedGeometry-BuHcxlp9.js";import"./FeatureCommandQueue-DdmoUaP6.js";import"./CIMSymbolHelper-CHB_SGJd.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-_HBfSKPq.js";import"./Rect-BPZqtwUW.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-BFMcZzyz.js";import"./floatRGBA-yrFAp4es.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CemBcww_.js";import"./ShaderBuilder-CLXObBdq.js";import"./BindType-BBwFZqyN.js";import"./lengthUtils-BTGF2ler.js";import"./QueueProcessor-BVNjf26Y.js";import"./FieldsIndex-D1boLpiw.js";import"./OverrideHelper-DUdTbzpQ.js";import"./colorUtils-DPaHwmQW.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./callExpressionWithFeature-OcsIROdV.js";import"./quantizationUtils-CJIa_aSr.js";import"./FeatureMetadata-DHk92tjm.js";import"./diffUtils-b8I5DNqw.js";import"./queryUtils-DnAfb-4A.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BRyX_SRO.js";import"./TimeOnly-BW3nNsnO.js";import"./labelUtils-C3o9ykO3.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-Yak1PjmR.js";import"./dehydratedFeatures-Cu_KLXG8.js";const d="sublayers",m="layerView",b=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(t);for(const s of e)!s.popupTemplate&&o.popupTemplate&&(s.popupTemplate=o.popupTemplate),s.sourceLayer=s.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(o=>o&&o.uid):f.isCollection(i)&&(t=i.map(o=>o&&o.uid).toArray());const e=t?.filter(w);return e?.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const o=new g(this.view.featuresTilingScheme),s=new c({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:o});this._graphicsViewsFeatureCollectionMap.set(s,e),this.container.addChild(s.container),this.addHandles([p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const o=new g(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new c({view:r,graphics:e.graphics,requestUpdateCallback:t,container:o});this.addHandles([e.on("graphic-update",s.graphicUpdateHandler),p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(s.container),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(b.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=_([V("esri.views.2d.layers.MapNotesLayerView2D")],l);const qt=l;export{qt as default};
