import{$ as N,cG as s}from"./main-v58lMUCa.js";import"./mat4-DAFNYuRY.js";import"./mat4f64-q_b6UJoq.js";import"./vec32-D1oAcXxi.js";import"./projectionUtils-DntLqo15.js";import"./projectVectorToVector-BuHIXxHV.js";import"./sphere-EV5DQLat.js";import"./Query-DLI5s2kX.js";import{D as C,C as D}from"./I3SBinaryReader-B_l2W-Le.js";import{g as _}from"./edgeUtils-Me8zZerc.js";import"./NormalAttribute.glsl-nHD1n-gY.js";import{I as R}from"./orientedBoundingBox-CXBOBNZE.js";s();var f;async function x(o,m,I,p,S,T,c,u){const a=[];for(const t of m)if(t&&S.includes(t.name)){const r=`${o}/nodes/${I}/attributes/${t.key}/0`;a.push({url:r,storageInfo:t})}const i=await Promise.allSettled(a.map(t=>N(t.url,{responseType:"array-buffer",query:{...c,token:T},signal:u?.signal}).then(r=>C(t.storageInfo,r.data)))),E=[];for(const t of p){const r={};for(let n=0;n<i.length;n++){const e=i[n];if(e.status==="fulfilled"){const l=e.value;r[a[n].storageInfo.name]=D(l,t)}}E.push(r)}return E}(function(o){o[o.OUTSIDE=0]="OUTSIDE",o[o.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",o[o.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",o[o.INSIDE=3]="INSIDE"})(f||(f={}));_({color:[0,0,0,0],opacity:0});s();s();new R;new Array(72);export{x as B};
