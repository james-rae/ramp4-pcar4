import{q as r,u as o,C as a,V as m}from"./main-Di-bOCuA.js";import{j as s,y as n}from"./LayerView-GrSN6wTb.js";import"./preload-helper-ExcqyqRp.js";import"./Container-BfiwZwV4.js";import"./MapView-C6GGMYE0.js";import"./Cyclical--WiUyAkf.js";import"./CollectionFlattener-Cv2nGhVG.js";import"./workers-C0nIihOb.js";import"./projection-6zei9__D.js";import"./projectBuffer-zW0fznMI.js";import"./TileInfo-Cg7h7e3u.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-Ydi9wqyj.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-BstPEOC7.js";import"./signal-B0Pynhk9.js";import"./Map-ZEnUQ4CV.js";import"./Basemap-BJRQPaAt.js";import"./loadAll-Bt5W1Cde.js";import"./PortalItem-BqP7YbM0.js";import"./writeUtils-BhH96wqU.js";import"./compilerUtils-Lb1u8UDd.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BOemVfAI.js";import"./common-DQOJ18NT.js";import"./TablesMixin-B3dkkN4u.js";import"./Layer-DNuoMfIP.js";import"./TimeExtent-BYXPhCzz.js";import"./GraphicsCollection-DXm2gEy6.js";import"./HeightModelInfo-W7vbQKWI.js";import"./ReactiveMap-Bb-1XDB7.js";import"./Query-C2tOndKd.js";import"./Field-Cx3XPIXK.js";import"./fieldType-CUTvT_11.js";import"./arcgisLayerUrl-5ZMrHAAS.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-BCxL4NcG.js";import"./TileKey-c9XUGtSx.js";import"./QueueProcessor-D5kdHaR0.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-B6wAzA18.js";import"./normalizeUtilsCommon-BFceyE76.js";import"./utils-5HwSTgmX.js";import"./utils-DvJQQGjA.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-D-6s814U.js";import"./vec32-BS8FjKab.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-CVOCxYHL.js";import"./imageUtils-C1HPcYb4.js";import"./capabilities-A2uoe7dc.js";import"./Version-DS-7Hl8e.js";import"./ColorBackground-CBq0LRtK.js";import"./parser-RQAA4whx.js";import"./layerViewUtils-BiPT0Kwr.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
