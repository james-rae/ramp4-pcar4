import{q as i,u as n,C as c,aG as m,s as u,f3 as d,aJ as l}from"./main-CUxU9bWS.js";import{d as h}from"./FeatureSet-DfeeRncM.js";import{n as y,r as _}from"./FeatureLayerView2D-Cwf1W9lf.js";import g from"./FeatureFilter-dAu7YW85.js";import"./preload-helper-ExcqyqRp.js";import"./Field-7yKaqquJ.js";import"./fieldType-RAe-KhZA.js";import"./compilerUtils-MfGGJ6jp.js";import"./Container-C7mjs0vM.js";import"./MapView-C80OvaVE.js";import"./Cyclical-BRtivmO1.js";import"./CollectionFlattener-CE6YYo8f.js";import"./workers-7zdfU5xG.js";import"./projection-BIYcHcNR.js";import"./projectBuffer-B22kEXxF.js";import"./TileInfo-DJ4jjAIs.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-DFPvIuq9.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-DKBfkAng.js";import"./signal-C5ejA8hs.js";import"./Map-B4HXk9gg.js";import"./Basemap-CQf1Qo_D.js";import"./loadAll-BdmQpFfa.js";import"./PortalItem-Ch5wKdnK.js";import"./writeUtils-C8gXbBL-.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DSQ66VqF.js";import"./common-DQOJ18NT.js";import"./TablesMixin-CisELdLf.js";import"./Layer-VQ4_KGgj.js";import"./GraphicsCollection-dYEmqNuB.js";import"./HeightModelInfo-Bs21Ef5D.js";import"./ReactiveMap-DinfbfJz.js";import"./Query-gAxGVVkN.js";import"./arcgisLayerUrl-Dpu7DwcZ.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-DOtUVU7h.js";import"./TileKey-Dkvv_foX.js";import"./QueueProcessor-CPy5oGqB.js";import"./quickselect-QQC62dOK.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-C8rSErFt.js";import"./vec32-BFI0q0ON.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-DNIxGOOy.js";import"./imageUtils-CHVqqeVq.js";import"./capabilities-A2uoe7dc.js";import"./Version-CNYnG8Q4.js";import"./ColorBackground-CZD_imWe.js";import"./parser-D_L7gZcx.js";import"./featureConversionUtils-gwo6XIWk.js";import"./OptimizedFeature-CIptWNVu.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./timeSupport-CsEFfjDj.js";import"./LayerView-D_4KcN__.js";import"./layerViewUtils-CMSpQZ1g.js";import"./TechniqueInstance-CrXFqeep.js";import"./UpdateTracking2D-CrJ_ss8x.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-EAvci0xo.js";import"./enums-CmIX1y88.js";import"./utils-QWndGYJy.js";import"./Rect-CUzevAry.js";import"./LabelMetric-CbEgObZ0.js";import"./Program-DwY7YdDp.js";import"./BufferObject-DEySkd40.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-C4yWdKVH.js";import"./vec42-CKs01hkn.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-Dq3keeaN.js";import"./WGLContainer-Cb7DfFRU.js";import"./VertexArrayObject-DyW2Rd4i.js";import"./ProgramTemplate-BX-q2_CH.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BvKNg9dQ.js";import"./constants-F8oTIn7N.js";import"./lengthUtils-D1bX0TD8.js";import"./CircularArray-CujHzHWW.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./OrderByInfo-B5ab0BgK.js";import"./labelingInfo-sXCz7XmM.js";import"./labelUtils-CnZtiCO7.js";import"./heatmapUtils-DUymcvS2.js";import"./SDFHelper-MbYQoFyK.js";import"./floatRGBA--1_ajEe6.js";import"./HighlightCounter-Czi-fdpx.js";import"./FeatureEffect-Dd4zOEJp.js";import"./jsonUtils-aqm3pfo-.js";import"./popupUtils-GSlPvKwG.js";import"./RefreshableLayerView-DVI0I4JP.js";const f=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:g})],e.prototype,"filter",void 0),e=i([c("esri.views.layers.StreamLayerView")],e),e};let o=class extends f(_){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([m(()=>this.layer.customParameters,async t=>{(await this.getWorker()).streamMessenger.updateCustomParameters(t)}),this.layer.on("send-message-to-socket",async t=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(t)}),this.layer.on("send-message-to-client",async t=>{(await this.getWorker()).streamMessenger.sendMessageToClient(t),this._isUserPaused&&"type"in t&&t.type==="clear"&&this.incrementSourceRefreshVersion()}),m(()=>this.layer.purgeOptions,()=>this._update()),m(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new u("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return d(t.map(s=>this.on(s,e)));const r=["data-received","message-received"].includes(t);r&&this.getWorker().then(s=>s.streamMessenger.enableEvent(t,!0));const a=super.on(t,e),p=this;return l(()=>{a.remove(),r&&(p._workerProxy.closed||p.hasEventListener(t)||p.getWorker().then(s=>s.streamMessenger.enableEvent(t,!1)))})}async queryLatestObservations(t,e){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return y(r.features.executeQueryForLatestObservations(this._cleanUpQuery(t),e).then(a=>{const p=h.fromJSON(a);return p.features.forEach(s=>{s.layer=this.layer,s.sourceLayer=this.layer}),p}),new h({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(t=>t.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(t=>t.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(t=>t.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const t=super._createClientOptions(),e=this;return{...t,get container(){return e.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};i([n()],o.prototype,"pipelineConnectionStatus",void 0),i([n()],o.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],o.prototype,"connectionError",null),i([n({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=i([c("esri.views.2d.layers.StreamLayerView2D")],o);const ce=o;export{ce as default};
