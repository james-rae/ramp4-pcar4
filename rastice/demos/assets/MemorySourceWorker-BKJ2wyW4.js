import{s as I,ch as Q,am as Z,an as A,bD as b,cg as S,aa as v}from"./main-CUxU9bWS.js";import{e as O,n as C,t as $}from"./featureConversionUtils-gwo6XIWk.js";import{t as k,n as P}from"./objectIdUtils-BmFjqQA3.js";import{m as G}from"./FeatureStore-CorytYLU.js";import{x as E,j as _}from"./queryUtils-x_fRYjy-.js";import{V as L}from"./QueryEngine-DQ7z3y_G.js";import{a as W,u as z,l as H}from"./clientSideDefaults-DBiU2bAB.js";import{j as U,f as g,p as T,d as j,y as w}from"./sourceUtils-Oie22WEM.js";import{Z as D}from"./FieldsIndex-DosTqN4i.js";import{i as B}from"./fieldType-RAe-KhZA.js";import"./preload-helper-ExcqyqRp.js";import"./OptimizedFeature-CIptWNVu.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-DbCyvS8z.js";import"./PooledRBush-DrMVpAU3.js";import"./quickselect-QQC62dOK.js";import"./timeSupport-BiBsHvcr.js";import"./optimizedFeatureQueryEngineAdapter-ChLj1W59.js";import"./projection-BIYcHcNR.js";import"./projectBuffer-B22kEXxF.js";import"./json-Wa8cmqdu.js";import"./LRUCache-uHJJcn0o.js";import"./WhereClause-nf6bISOt.js";import"./TimeOnly-UPu6MbGY.js";import"./UnknownTimeZone-3zgfWq7J.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./quantizationUtils-4P_ZGotl.js";import"./utils-SP5aKYe_.js";import"./heatmapUtils-DUymcvS2.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-CMoMXWBi.js";import"./utils-DzN_gSG_.js";import"./Basemap-CQf1Qo_D.js";import"./loadAll-BdmQpFfa.js";import"./PortalItem-Ch5wKdnK.js";import"./writeUtils-C8gXbBL-.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DSQ66VqF.js";import"./utils-Cdlebn9w.js";import"./ClassBreaksDefinition-Dx-OmJxw.js";import"./Scheduler-C8rSErFt.js";import"./signal-C5ejA8hs.js";import"./capabilities-Y9lFlGVh.js";import"./date-Dw3OHnFv.js";const N=S,V={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:S},J={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0}};function K(h){return v(h)?h.z!=null:!!h.hasZ}function X(h){return v(h)?h.m!=null:!!h.hasM}class ze{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const s=[],{features:a}=e,n=this._inferLayerProperties(a,e.fields),l=e.fields||[],d=e.hasM!=null?e.hasM:!!n.hasM,c=e.hasZ!=null?e.hasZ:!!n.hasZ,p=!e.spatialReference&&!n.spatialReference,u=p?N:e.spatialReference||n.spatialReference,y=p?V:null,f=e.geometryType||n.geometryType,o=!f;let t=e.objectIdField||n.objectIdField,r=e.timeInfo;const m=new D(l);if(!o&&(p&&s.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!f))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(n.objectIdField&&t!==n.objectIdField&&(s.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${n.objectIdField}", found in the provided fields`}),t=n.objectIdField),t&&!n.objectIdField){const i=m.get(t);i?(t=i.name,i.type="esriFieldTypeOID",i.editable=!1,i.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const i of l){if(i.name==null&&(i.name=i.alias),i.alias==null&&(i.alias=i.name),!i.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:i});if(i.name===t&&(i.type="esriFieldTypeOID"),!B.jsonValues.includes(i.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${i.name}"`,{field:i});i.length==null&&(i.length=Q(i))}const F={};for(const i of l)if(i.type!=="esriFieldTypeOID"&&i.type!=="esriFieldTypeGlobalID"){const q=Z(i);q!==void 0&&(F[i.name]=q)}if(r){if(r.startTimeField){const i=m.get(r.startTimeField);i?(r.startTimeField=i.name,i.type="esriFieldTypeDate"):r.startTimeField=null}if(r.endTimeField){const i=m.get(r.endTimeField);i?(r.endTimeField=i.name,i.type="esriFieldTypeDate"):r.endTimeField=null}if(r.trackIdField){const i=m.get(r.trackIdField);i?r.trackIdField=i.name:(r.trackIdField=null,s.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:r}}))}r.startTimeField||r.endTimeField||(s.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:r}}),r=null)}const x=m.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??A}:null;this._createDefaultAttributes=W(F,t);const R={warnings:s,featureErrors:[],layerDefinition:{...J,drawingInfo:z(f),templates:H(F),extent:y,geometryType:f,objectIdField:t,fields:l,hasZ:c,hasM:d,timeInfo:r,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new L({fieldsIndex:D.fromLayerJSON({fields:l,timeInfo:r,dateFieldsTimeReference:x}),geometryType:f,hasM:d,hasZ:c,objectIdField:t,spatialReference:u,featureStore:new G({geometryType:f,hasM:d,hasZ:c}),timeInfo:r}),!a?.length)return this._nextObjectId=k,R;const M=P(t,a);return this._nextObjectId=M+1,await E(a,u),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:s,geometryType:a}=this._queryEngine;return await Promise.all([U(s,a),E(e.adds,s),E(e.updates,s)]),this._applyEdits(e)}queryFeatures(e,s={}){return this._queryEngine.executeQuery(e,s.signal)}queryFeatureCount(e,s={}){return this._queryEngine.executeQueryForCount(e,s.signal)}queryObjectIds(e,s={}){return this._queryEngine.executeQueryForIds(e,s.signal)}queryExtent(e,s={}){return this._queryEngine.executeQueryForExtent(e,s.signal)}querySnapping(e,s={}){return this._queryEngine.executeQueryForSnapping(e,s.signal)}_inferLayerProperties(e,s){let a,n,l=null,d=null,c=null;for(const p of e){const u=p.geometry;if(u!=null&&(l||(l=b(u)),d||(d=u.spatialReference),a==null&&(a=K(u)),n==null&&(n=X(u)),l&&d&&a!=null&&n!=null))break}if(s&&s.length){let p=null;s.some(u=>{const y=u.type==="esriFieldTypeOID",f=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return p=u,y||f})&&(c=p.name)}return{geometryType:l,spatialReference:d,objectIdField:c,hasM:n,hasZ:a}}async _loadInitialFeatures(e,s){const{geometryType:a,hasM:n,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine,y=[];for(const t of s){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==b(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const r=this._createDefaultAttributes(),m=T(u,r,t.attributes,!0);m?e.featureErrors.push(m):(this._assignObjectId(r,t.attributes,!0),t.attributes=r,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[d]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}p.addMany(O([],y,a,l,n,d));const{fullExtent:f,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=f,o){const{start:t,end:r}=o;e.layerDefinition.timeInfo.timeExtent=[t,r]}return e}async _applyEdits(e){const{adds:s,updates:a,deletes:n}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(s?.length&&this._applyAddEdits(l,s),a?.length&&this._applyUpdateEdits(l,a),n?.length){for(const p of n)l.deleteResults.push(j(p));this._queryEngine.featureStore.removeManyById(n)}const{fullExtent:d,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:d,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,s){const{addResults:a}=e,{geometryType:n,hasM:l,hasZ:d,objectIdField:c,spatialReference:p,featureStore:u,fieldsIndex:y}=this._queryEngine,f=[];for(const o of s){if(o.geometry&&n!==b(o.geometry)){a.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=T(y,t,o.attributes);if(r)a.push(r);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,o.uid!=null){const m=o.attributes[c];e.uidToObjectId[o.uid]=m}if(o.geometry!=null){const m=o.geometry.spatialReference??p;o.geometry=_(w(o.geometry,m),m,p)}f.push(o),a.push(j(o.attributes[c]))}}u.addMany(O([],f,n,d,l,c))}_applyUpdateEdits({updateResults:e},s){const{geometryType:a,hasM:n,hasZ:l,objectIdField:d,spatialReference:c,featureStore:p,fieldsIndex:u}=this._queryEngine;for(const y of s){const{attributes:f,geometry:o}=y,t=f?.[d];if(t==null){e.push(g(`Identifier field ${d} missing`));continue}if(!p.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const r=C(p.getFeature(t),a,l,n);if(o!=null){if(a!==b(o)){e.push(g("Incorrect geometry type."));continue}const m=o.spatialReference??c;r.geometry=_(w(o,m),m,c)}if(f){const m=T(u,r.attributes,f);if(m){e.push(m);continue}}p.add($(r,a,l,n,d)),e.push(j(t))}}_assignObjectId(e,s,a=!1){const n=this._queryEngine.objectIdField;a&&s&&isFinite(s[n])?e[n]=s[n]:e[n]=this._nextObjectId++}}export{ze as default};
