import{I as s,bC as p,U as f,a1 as y,bq as m,bD as c,bh as S,bk as l}from"./main-CUxU9bWS.js";import{t as R}from"./query-ScoHz3Q8.js";import g from"./BinsQuery-PECoucZ9.js";import{d as b}from"./FeatureSet-DfeeRncM.js";import"./preload-helper-ExcqyqRp.js";import"./pbfQueryUtils-D_M4Y8xK.js";import"./pbf-QXd8vFhO.js";import"./OptimizedFeature-CIptWNVu.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-B0hWeZIg.js";import"./projection-BIYcHcNR.js";import"./projectBuffer-B22kEXxF.js";import"./queryUtils-x_fRYjy-.js";import"./json-Wa8cmqdu.js";import"./Query-gAxGVVkN.js";import"./Field-7yKaqquJ.js";import"./fieldType-RAe-KhZA.js";function q(r){const e=r.geometry,i=r.toJSON(),t=i;let n,o,a;return e!=null&&(o=e.spatialReference,a=m(o),t.geometryType=c(e),t.geometry=JSON.stringify(e),t.inSR=a),i.outSR?(t.outSR=m(i.outSR),n=r.outSpatialReference):e&&(t.outSR=t.inSR,n=o),t.bin&&=JSON.stringify(t.bin),t.quantizationParameters&&=JSON.stringify(t.quantizationParameters),t.outStatistics&&=JSON.stringify(t.outStatistics),t.outTimeReference&&=JSON.stringify(t.outTimeReference),r.defaultSpatialReference&&S(o,n)&&(t.defaultSR=t.inSR,delete t.inSR,delete t.outSR),t}async function J(r,e,i){return N(r,e,i)}async function N(r,e,i={}){const t=typeof r=="string"?s(r):r,n=e.geometry?[e.geometry]:[],o=await p(n,null,{signal:i.signal}),a=o?.[0];a!=null&&((e=e.clone()).geometry=a);const u=R({...t.query,f:"json",...q(e)});return f(y(t.path,"queryBins"),{...i,query:{...u,...i.query}})}async function V(r,e,i){const{data:t}=await J(l(r),g.from(e),i);return b.fromJSON(t)}export{V as executeBinsQuery};
