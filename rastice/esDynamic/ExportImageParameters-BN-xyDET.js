import{k as i,o as l,A as u,aD as c,br as o,bs as m,bt as p,bu as b}from"./main-CvsyIoCL.js";const d={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let r=class extends c{constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map(s=>{const t=o(this.floors,s);return s.toExportImageJSON(t)});return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&m(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.removeHandles("layer"),e&&this.addHandles([e.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("sublayer-update",s=>this.notifyChange(d[s.propertyName]))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map(s=>s.id).join(","):"show:-1":null}get layerDefs(){const e=!!this.floors?.length,s=this.visibleSublayers.filter(t=>t.definitionExpression!=null||e&&t.floorInfo!=null);return s.length?JSON.stringify(s.reduce((t,n)=>{const y=o(this.floors,n),a=p(y,n.definitionExpression);return a!=null&&(t[n.id]=a),t},{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const s=this.layer.sublayers,t=this.scale,n=a=>{a.visible&&(t===0||b(t,a.minScale,a.maxScale))&&(a.sublayers?a.sublayers.forEach(n):e.unshift(a))};s&&s.forEach(n);const y=this._get("visibleSublayers");return!y||y.length!==e.length||y.some((a,h)=>e[h]!==a)?e:y}toJSON(){const e=this.layer;let s={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?s.dynamicLayers=this.dynamicLayers:s={...s,layers:this.layers,layerDefs:this.layerDefs},s}};i([l({readOnly:!0})],r.prototype,"dynamicLayers",null),i([l()],r.prototype,"floors",void 0),i([l({readOnly:!0})],r.prototype,"hasDynamicLayers",null),i([l()],r.prototype,"layer",null),i([l({readOnly:!0})],r.prototype,"layers",null),i([l({readOnly:!0})],r.prototype,"layerDefs",null),i([l({type:Number})],r.prototype,"scale",void 0),i([l({readOnly:!0})],r.prototype,"version",null),i([l({readOnly:!0})],r.prototype,"visibleSublayers",null),r=i([u("esri.layers.support.ExportImageParameters")],r);export{r as y};
