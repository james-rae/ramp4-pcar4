import{n as d}from"./date-Cqvy-TgA.js";import{ch as h,ci as g,ah as m,cj as p,ag as y,ck as w,cl as a}from"./main-CvsyIoCL.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(s){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=s}}function c(n){return new b(n)}class j{constructor(s){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=s}}function q(n){return new j(n)}const l=new Set;function F(n,s,r,f=!1){l.clear();for(const t in r){const e=n.get(t);if(!e)continue;const o=S(e,r[t]);if(l.add(e.name),e&&(f||e.editable)){const u=h(e,o);if(u)return c(g(u,e,o));s[e.name]=o}}for(const t of n.requiredFields??[])if(!l.has(t.name))return c(`missing required field "${t.name}"`);return null}function S(n,s){let r=s;return m(n)&&typeof s=="string"?r=parseFloat(s):p(n)&&s!=null&&typeof s!="string"?r=String(s):y(n)&&typeof s=="string"&&(r=d(s)),w(r)}let i;function k(n,s){if(!n||!a(s))return n;if("rings"in n||"paths"in n){if(i==null)throw new TypeError("geometry engine not loaded");return i.simplify(s,n)}return n}async function x(){return i==null&&(i=await import("./geometryEngineJSON-CGn_tfx8.js").then(n=>n.g)),i}async function G(n,s){!a(n)||s!=="esriGeometryPolygon"&&s!=="esriGeometryPolyline"||await x()}export{q as d,c as f,G as j,F as p,k as y};
