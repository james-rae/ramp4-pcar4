import{bu as _,s as P,Y as N,bx as ee,c9 as L,i as U,f as te}from"./main-BBr-PSD-.js";import{r as G,i as B,h as O}from"./TimeOnly-C3i8Z7NO.js";import{t as re}from"./ImmutableArray-BPVd6ESQ.js";import ae from"./FeatureLayer-D4bg3qzt.js";import{g as oe}from"./FeatureSet-DvQy4XAF.js";import"./preload-helper-B76NpbEU.js";import"./enum-KdbueJV6.js";import"./UnknownTimeZone-Ca1nDbBC.js";import"./MultiOriginJSONSupport-Vj9NS1eg.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureLayerBase-B4Rtf7Zq.js";import"./Field-pLVK6yld.js";import"./fieldType-D4MHZHDA.js";import"./HeightModelInfo-CGYZyrMQ.js";import"./OperationalLayer-C3IXO1Wv.js";import"./ElevationInfo-DRXRHzjq.js";import"./lengthUtils-CrC7NMXz.js";import"./TimeExtent-DcfGfIEp.js";import"./timeZoneUtils-C7fqg4nj.js";import"./labelingInfo-BMQcuz_0.js";import"./asyncUtils-DntTXFsl.js";import"./uuid-Cl5lrJ4c.js";import"./Query-BaYaROcf.js";import"./SimpleRenderer-BbjYbYKC.js";import"./commonProperties-DFqRG3W_.js";import"./colorRamps-C49qmvt6.js";import"./ColorStop-9vL3kIYz.js";import"./visualVariableUtils-2KDs4BQz.js";import"./UniqueValueRenderer-BB27G7NO.js";import"./diffUtils-MMYJN98N.js";import"./RendererLegendOptions-BD_9VfWt.js";import"./styleUtils-PMgHmwHx.js";import"./RelationshipQuery-BWufEX6r.js";import"./NormalizationBinParametersMixin-uuSDn6ER.js";import"./labelUtils-DYigswdU.js";import"./LayerFloorInfo-CaGWZpVN.js";import"./Relationship-CrZFM6GT.js";import"./serviceCapabilitiesUtils-Cqys2BFD.js";import"./infoFor3D-DhzudQro.js";import"./portalItemUtils-Cjlals2b.js";import"./projectionUtils-BOihCovb.js";import"./Layer-5T97SLi9.js";import"./workers-Cbq5WBB4.js";import"./Queue-CvcrFBy3.js";import"./intl-Bh1Fp39e.js";import"./editsZScale-JN5E5g3p.js";import"./queryZScale-C4i9vLLq.js";import"./APIKeyMixin-D1YPH2tf.js";import"./ArcGISService-DkKvmoxg.js";import"./BlendLayer-BRY7pl6B.js";import"./jsonUtils-CjxxWDew.js";import"./parser-B0CEcIXX.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-UUa7Y9ew.js";import"./common-DQOJ18NT.js";import"./CustomParametersMixin-DvOPoIJX.js";import"./DisplayFilteredLayer-Ddfw7-aM.js";import"./scaleUtils-DlptsVLZ.js";import"./displayFilterUtils-DUPvrW3_.js";import"./EditBusLayer-WJn-WMOU.js";import"./FeatureEffectLayer-MyUG8n8R.js";import"./FeatureEffect-E-Sf4iPF.js";import"./FeatureFilter-CSttwSkV.js";import"./FeatureReductionLayer-BBXUAJy8.js";import"./FeatureReductionSelection-BA_kcOo3.js";import"./jsonUtils-DfE1Z0VK.js";import"./typeUtils-CNN__xnd.js";import"./ClassBreaksRenderer-Cs0IR6Vn.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./DictionaryScriptEvaluator-BvsFXYOe.js";import"./Version-xJSCI_v8.js";import"./FieldsIndex-DuKrAwAZ.js";import"./ArcadeExpression-CqyvGjoE.js";import"./utils-BV7DBUkI.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./heatmapUtils-D35eaff2.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./MD5-MtSiOt06.js";import"./OrderedLayer-DgaBZHpB.js";import"./OrderByInfo-CEwVshcI.js";import"./PortalLayer-DgK2kKY8.js";import"./PortalItem-D0vGDdGn.js";import"./RefreshableLayer-kimwjkS4.js";import"./ScaleRangeLayer-DawYHpzK.js";import"./TemporalLayer-a3F44iZg.js";import"./TimeInfo-E4rUPQKR.js";import"./TrackableLayer-DWghieTD.js";import"./FeatureTemplate-vVQd5w6h.js";import"./FeatureType-8vBonJwk.js";import"./fieldProperties-D2G8nGVR.js";import"./TitleCreator-DoFghwpb.js";import"./versionUtils-CKm3FdAG.js";import"./styleUtils-DDaEgXzs.js";import"./popupUtils-7JAgBcZx.js";import"./interfaces-CL2NbQte.js";let v=null;function ne(e,o,a,n={}){const r=o.elementType,i="value",s=r.type==="array"?[{name:i,type:r.type,elementType:r.elementType}]:r.type==="dictionary"?[{name:i,type:r.type,properties:r.properties}]:[{name:i,type:r.type}];return new re(e.map(p=>{const t={};return R(t,s,{[i]:p},a,n),t[i]}))}function ie(e,o,a={}){const n=e instanceof oe?new ae({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return o.constructFeatureSet(n,a.spatialReference,null,!0,a.lruCache,a.interceptor)}function pe(e,o,a={}){const{spatialReference:n,interceptor:r,lruCache:i}=a;return typeof e=="string"?o.createFeatureSetCollectionFromService(e,n,i,r):o.createFeatureSetCollectionFromMap(e,n,i,r)}function ce(e,o,a,n={}){const r=Object.create(null);return R(r,o.properties,e,a,n),new v.Dictionary(r)}function R(e,o,a,n,r={}){const i={};for(const s of Object.keys(a))i[s.toLowerCase()]=a[s];for(const s of o){const p=s.name.toLowerCase();if(r.variablesPreProcessed)e[p]=i[p];else switch(s.type){case"array":{const t=i[p];e[p]=t==null?null:ne(t,s,n,r);break}case"feature":{const t=i[p];e[p]=t==null?null:v.Feature.createFromGraphic(t,r?.timeZone);break}case"featureSet":{const t=i[p];e[p]=t==null?null:n?ie(t,n,r):null;break}case"featureSetCollection":{const t=i[p];e[p]=t==null?null:n?pe(t,n,r):null;break}case"dictionary":{const t=i[p];e[p]=t==null?null:ce(t,s,n,r);break}case"date":{const t=i[p];e[p]=t?t instanceof O?t:r?.timeZone?O.dateJSAndZoneToArcadeDate(t,r?.timeZone):O.dateJSToArcadeDate(t):null;break}case"dateOnly":{const t=i[p];e[p]=t?t instanceof B?t:B.fromReader(t):null;break}case"time":{const t=i[p];e[p]=t?t instanceof G?t:G.fromReader(t):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[p]=i[p];break;case"voxel":{const t=i[p];e[p]=t==null?null:new v.Voxel(t,r?.timeZone);break}}}}function V(e,o){for(const a of e)o.push(a),a.type==="dictionary"&&V(a.properties,o);return o}function D(e,o,a,n,r){const{spatialReference:i,interceptor:s,lruCache:p,console:t,abortSignal:x,timeZone:C,services:S={portal:N.getDefault()}}=a,f={vars:{},spatialReference:i,interceptor:s,timeZone:C,lrucache:p,useAsync:r,services:S,console:t,abortSignal:x};return o&&R(f.vars,e.variables,o,n,a),f}function w(e,o){switch(o.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const a=(e.type,e),n="geometry"in a?a.geometry():null,r="readAttributes"in a?a.readAttributes():a.attributes;return new ee({geometry:n,attributes:r})}case"dictionary":{const a=e,n=a.attributes,r={};for(const i of Object.keys(n))r[i]=w(a.field(i),o);return r}case"array":return("toArray"in e?e.toArray():e).map(a=>w(a,o))}return e}const J={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},M={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},z={variables:[{name:"$voxel",type:"voxel"}]},Y=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",J],["popup-element",J],["popup-feature-reduction",M],["popup-element-feature-reduction",M],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",z],["popup-element-voxel",z]]);function rr(e){e==="feature-reduction-popup"?(L(U.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):e==="feature-reduction-popup-element"&&(L(U.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const o=Y.get(e);if(!o){const a=Array.from(Y.keys()).map(n=>`'${n}'`).join(", ");throw new P("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${a}`)}return te(o)}async function ar(e,o,a={}){v||(v=await _());const{arcade:n,arcadeUtils:r,batchExec:{createBatchExecutor:i},aiServices:{BatchTranslationServiceFactory:s,PortalTranslationService:p}}=v,{loadScriptDependencies:t,referencesMember:x,scriptIsAsync:C}=n,S=V(o.variables,[]),f=S.filter(c=>c.type==="featureSet"||c.type==="featureSetCollection").map(c=>c.name.toLowerCase()),l=n.parseScript(e,f);if(!l)throw new P("arcade:invalid-script","Unable to create SyntaxTree");const X=r.extractFieldNames(l),q=n.scriptTouchesGeometry(l),j=S.map(c=>c.name.toLowerCase()).filter(c=>x(l,c)),d=C(l,f);await t(l,d,f);const E={vars:{},useAsync:d};for(const c of j)E.vars[c]="any";const{lruCache:A,services:k}=a,T=n.compileScript(l,E),I=n.featureSetUtils();return{execute:(c,u={})=>{if(d)throw new P("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const m={...k,...u.services},b={lruCache:A,...u,services:m},y=T(D(o,c,b,I,d));return u.rawOutput?y:w(y,r)},executeAsync:async(c,u={})=>{const m={...k,...u.services},b={lruCache:A,...u,services:m},y=await T(D(o,c,b,I,d));return u.rawOutput?y:w(y,r)},executeAsyncBatch:async(c,u,m={})=>{const b=[],y=i(c,async(g,$)=>{const K=u(g);try{const h={...F,translation:H.create($)},Q={lruCache:A,...m,services:h},Z=await T(D(o,K,Q,I,d)),W=m.rawOutput?Z:w(Z,r);b.push({id:$.id,result:{status:"fulfilled",value:W}})}catch(h){throw b.push({id:$.id,result:{status:"rejected",reason:h}}),h}},m.maxConcurrency??64,m.abortSignal),F={...k,...m.services},H=new s(y,F.translation??new p(F.portal??N.getDefault(),m.console));return await y.run(),b.sort(({id:g},{id:$})=>g-$).map(({result:g})=>g)},isAsync:d,variablesUsed:j,fieldsUsed:X,geometryUsed:q,syntaxTree:l}}export{ar as createArcadeExecutor,rr as createArcadeProfile};
