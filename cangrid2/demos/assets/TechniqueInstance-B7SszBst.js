import { N as has, s, G as n$1 } from './main-CGBWc59Z.js';
import { L, k, q, E, y, z, B, C } from './definitions-BdwlvHBE.js';
import { f } from './UpdateTracking2D-tfVHyc-s.js';
import { d, c as c$1 } from './LabelMetric-DeEwVo6w.js';
import { D, L as L$1 } from './enums-CwcDCDam.js';
import { E as E$1 } from './Program-DgbP8X_l.js';
import { e, c } from './Texture-C4ft8TUm.js';
import { i as i$1 } from './TileContainer-Bi7pVBFp.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const b=()=>n$1.getLogger("esri.views.2d.engine.webgl.AttributeStoreView");class T{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:a}=t,n=d(r);this.blockIndex=i,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new n(s)),this._resetRange();}destroy(){this._texture?.dispose();for(const t in this._fbos){const e=this._fbos[t];e&&("0"===t&&e.detachColorTexture(),e.dispose()),this._fbos[t]=null;}this._texture=null;}get _textureDesc(){const t=new e;return t.wrapMode=D.CLAMP_TO_EDGE,t.samplingMode=L$1.NEAREST,t.dataType=this.pixelType,t.width=this.size,t.height=this.size,t}setData(t,e,i){const s=f(t),r=this.data,a=s*this.texelSize+e;!r||a>=r.length||(r[a]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s));}getData(t,e){if(null==this.data)return null;const i=f(t)*this.texelSize+e;return !this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return this._texture??this._initTexture(t)}getFBO(t,e=0){if(!this._fbos[e]){const i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new E$1(t,i);}return this._fbos[e]}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(e,i){try{const s$1=this.dirtyStart,r=this.dirtyEnd;if(!this.hasDirty)return;has("esri-2d-update-debug")&&console.debug(`Version[${i}] AttributeStoreView.updateTexture`,{start:s$1,end:r,firstBytes:new Uint8Array(this.data.buffer.slice(0,16)),block:this}),this._resetRange();const a=this.data.buffer,n=this.getTexture(e),u=4,h=(s$1-s$1%this.size)/this.size,o=(r-r%this.size)/this.size,d$1=h,p=this.size,_=o,g=h*this.size*u,c=(p+_*this.size)*u-g,x=d(this.pixelType),f=new x(a,g*x.BYTES_PER_ELEMENT,c),T=this.size,m=_-d$1+1;if(m>this.size)return void b().error(new s("mapview-webgl","Out-of-bounds index when updating AttributeData"));n.updateData(0,0,d$1,T,m,f);}catch(s){}}update(t){const{data:e,start:i,end:s}=t;if(null!=e&&null!=this.data){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const a=1<<i%this.texelSize;t.layout&a&&(s[r+i]=e[i]);}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s);}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=d(this.pixelType);this.destroy(),this.data=new s(t.buffer);}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0;}_initTexture(t){const e=new c(t,this._textureDesc,this.data??void 0);if(null!=this._lastTexture&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(t),u=c$1(r),h=new(d(r))(new ArrayBuffer(i*s*u*this.texelSize)),o=t.getBoundFramebufferObject(),{x:d$1,y:_,width:g,height:c}=t.getViewport();t.bindFramebuffer(n),n.readPixels(0,0,i,s,a,r,h),e.updateData(0,0,0,2*i,s/2,h),t.setViewport(d$1,_,g,c),t.bindFramebuffer(o);}return this.destroy(),this._texture=e,this._texture}}class m{constructor(){this.size=0,this._pendingAttributeUpdates=[],this._version=0,this._epoch=0,this._locked=!1;}_initialize(t){if(!t)throw new Error("InternalError: initArgs must be defined");const e=t.blockDescriptors;if(this.size=t.blockSize,has("esri-2d-update-debug")&&console.debug("AttributeStoreView.initialize",{message:t}),null==this._data)this._data=e.map(((t,e)=>null!=t?new T(t,this.size,e):null));else for(let i=0;i<this._data.length;i++){const t=this._data[i],s=e[i];null!=s&&(null==t?this._data[i]=new T(s,this.size,i):t.resize(s,this.size));}}destroy(){for(const t of this._data??[])t?.destroy();this._defaultTexture?.dispose(),this._defaultTexture=null,this._pendingAttributeUpdates=[];}isEmpty(){return null==this._data}getBlock(t){if(null==this._data)return null;return this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e);}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,L.VV,0,0)}getData(t,e,i,s){if(!this._data)return 0;const r=this._data[e];if(null==r)return 0;const a=r.getData(t,i);return null!=a?a:s}setData(t,e,i,s){this._data[e].setData(t,i,s);}lockTextureUploads(){this._locked=!0;}unlockTextureUploads(){this._locked=!1,this.update();}requestUpdate(t){this._version=t.version,this._pendingAttributeUpdates.push(t),has("esri-2d-update-debug")&&console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`,{message:t});}get currentEpoch(){return this._epoch}update(){if(this._locked)return;const t=this._pendingAttributeUpdates;this._pendingAttributeUpdates=[];for(const e of t){const{blockData:t,initArgs:i,sendUpdateEpoch:s,version:r}=e;has("esri-2d-update-debug")&&console.debug(`Version[${this._version}] Epoch[${s}] AttributeStoreView.applyUpdate`),this._version=r,this._epoch=s,null!=i&&this._initialize(i);const a=this._data;for(let e=0;e<t.length;e++){const i=t[e],s=a[e];null!=s&&null!=i&&(has("esri-2d-update-debug")&&console.debug(`Version[${this._version}] CpuBlock[${e}] AttributeStoreView.update`,{block:i}),s.update(i));}}}getUniforms(t){return {filterFlags:{texture:this._getTexture(t,L.FilterFlags),unit:k},animation:{texture:this._getTexture(t,L.Animation),unit:q},gpgpu:{texture:this._getTexture(t,L.GPGPU),unit:E},visualVariableData:{texture:this._getTexture(t,L.VV),unit:y},dataDriven0:{texture:this._getTexture(t,L.DD0),unit:z},dataDriven1:{texture:this._getTexture(t,L.DD1),unit:B},dataDriven2:{texture:this._getTexture(t,L.DD2),unit:C},size:this.size}}_getTexture(t,e){const i=this._data?.[e];return i?(i.updateTexture(t,this._version),i.getTexture(t)):this._getDefaultTexture(t)}_getDefaultTexture(t){if(null==this._defaultTexture){const e$1=new e;e$1.wrapMode=D.CLAMP_TO_EDGE,e$1.samplingMode=L$1.NEAREST,e$1.width=1,e$1.height=1,this._defaultTexture=new c(t,e$1,new Uint8Array(4));}return this._defaultTexture}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let r$1 = class r extends i$1{constructor(t){super(t),this._statisticsByLevel=new Map,this.attributeView=new m;}destroy(){this.children.forEach((e=>e.destroy())),this.removeAllChildren(),this.attributeView.destroy();}doRender(e){e.context.capabilities.enable("textureFloatLinear"),super.doRender(e);}createRenderParams(e){const t=super.createRenderParams(e);return t.attributeView=this.attributeView,t.instanceStore=this._instanceStore,t.statisticsByLevel=this._statisticsByLevel,t}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
function n(n){return n}function r(n){return n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
class i{constructor(t,i,e){this._instanceId=t,this.techniqueRef=i,this._input=e;}get instanceId(){return n(this._instanceId)}createMeshInfo(i){return {id:n(this._instanceId),techniqueType:this.techniqueRef.type,inputParams:i,optionalAttributes:this._input.optionalAttributes}}getInput(){return this._input}setInput(t){this._input=t;}}

export { r$1 as a, i, r };
