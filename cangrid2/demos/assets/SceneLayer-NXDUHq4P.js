const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./editingSupport-BLvfwsfD.js","./main-CGBWc59Z.js","./preload-helper-dJJaZANz.js","./main-CY4W0263.css"])))=>i.map(i=>d[i]);
import { _ as __vitePreload } from './preload-helper-dJJaZANz.js';
import { bd as e$2, be as y, bf as a$1, hx as d, fj as c$2, l4 as l$1, b_ as f$1, gD as g$1, e4 as u$1, a0 as V, aX as j, bu as J, dO as s$1, iy as on, ed as o, bg as v, fA as C, p as p$1, U, P as a$2, s as s$2, aT as V$1, hg as F, en as l$2, e9 as b, ea as j$2, eb as t$1, ec as S, eo as e$3, ep as i$1, bZ as i$2, di as Z, hh as v$1, gC as p$3, l5 as n, G as n$1, A as a$3, t as t$2, fo as b$1, l6 as x, a1 as d$1, gE as p$5, fk as g$2, l7 as J$1, l8 as r, _ as _$1, l9 as t$3, gW as t$4, eJ as e$4, ax as b$2, gY as w$1, la as t$5, lb as p$6, lc as p$7, ev as d$2, gG as l$3, gH as C$2, gI as l$4, ef as y$2, ld as r$1, gM as u$2, gK as s$4, bm as k, gN as t$6, kJ as f, gP as s$5, em as f$2 } from './main-CGBWc59Z.js';
import { $ as $$1 } from './Mesh-C42QsON7.js';
import { i as i$3, m } from './uploadAssetErrors-DHHvt8Dp.js';
import { L, C as C$1 } from './SceneService-CnG6i_h9.js';
import { s as s$3 } from './associatedFeatureServiceUtils-1k47Utu4.js';
import { s as s$6 } from './capabilities-By_jXHUb.js';
import { p as p$2, a as a$5, y as y$1, m as m$1 } from './I3SLayerDefinitions-Bdb7Vb-j.js';
import { a as a$4 } from './fetchService-BSiheFNT.js';
import { j as j$1 } from './persistable-Ba831MDq.js';
import { $ as $$2, P, w } from './elevationInfoUtils-DMrqpNRa.js';
import { $ } from './I3SUtil-BkdfRKCO.js';
import { n as n$2, p as p$4 } from './popupUtils-5nWm5qmp.js';
import './MeshTransform-B_ziJhBi.js';
import './mat4f64-UGgSIQpQ.js';
import './quat-DLeKk01g.js';
import './mat3f64-BNcPSU_3.js';
import './quatf64-C3zJJInI.js';
import './imageUtils-DNTNJcW1.js';
import './MeshVertexAttributes-B0EBN-p-.js';
import './MeshLocalVertexSpace-yWnyenS-.js';
import './meshVertexSpaceUtils-Do5BvCCu.js';
import './earcut-BQ3wmzD6.js';
import './DoubleArray-SfjR8s0J.js';
import './Indices-rp446347.js';
import './plane-B3sIpAfD.js';
import './deduplicate-Cylmsrvu.js';
import './projection-Do8NJvYY.js';
import './spatialReferenceEllipsoidUtils-CSBdmRmv.js';
import './computeTranslationToOriginAndRotation-DPVyOv1o.js';
import './BufferView-Bzzf7vi9.js';
import './vec3-BxZ5yrM4.js';
import './vec4-DpWUWysZ.js';
import './vertexSpaceConversion-Bt8i3J0F.js';
import './originUtils-Do2K3Z97.js';
import './multiOriginJSONSupportUtils-C5oGZ9U0.js';
import './jsonContext-CLNEFAHJ.js';
import './resourceUtils-CR08Kwrh.js';
import './resourceUtils-DJn3jrs0.js';
import './saveAPIKeyUtils-EUYYaWcY.js';
import './saveUtils-BK0O4joz.js';
import './resourceExtension-qA-EBkbW.js';
import './sphere-zVa6F6fq.js';
import './I3SBinaryReader-C4poc74r.js';
import './VertexAttribute-CwgXid27.js';
import './floatRGBA-D_j_VhU9.js';
import './NormalAttribute.glsl-CsmR3a3j.js';
import './interfaces-MbpZrcgP.js';
import './BindType-DQnxDFt3.js';
import './orientedBoundingBox-CJeIpVUr.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
function e$1({associatedLayer:e,serviceUpdateTimeStamp:t}){const n=e?.editingInfo?.lastEditDate,r=e?.serverGens,a=null!=n,i=null!=t,s=a&&i&&t.lastUpdate!==n.getTime();return a&&(s||!i&&r?.minServerGen!==r?.serverGen)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const a=i=>{let a=class extends i{constructor(){super(...arguments),this.serviceTimeInfo=null;}get timeInfo(){const e=this.associatedLayer?.timeInfo;if(null==e)return null;const t=e.clone();return g$1(t,this.fieldsIndex),t}set timeInfo(e){g$1(e,this.fieldsIndex),this._override("timeInfo",e);}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(e){this._override("timeExtent",e);}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(e){this._override("timeOffset",e);}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(e){this._override("datesInUnknownTimezone",e);}async loadTimeInfoFromService(e){const{serviceTimeInfo:r}=this;if(null==r)return;const{startTimeField:i,endTimeField:s}=r;if(null==i&&null==s)return;if(e$1({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const n=async t=>{let r=null;try{const i=await(this.fetchStatistics?.(t,e));r=i?.stats;}catch{}if(null==r)return null;const{minTimeStr:s,min:n,maxTimeStr:o,max:l}=r,m=t===i?s??n:o??l;return null!=m?new Date(m):null},[o,a]=await Promise.all([n(i),n(s)]);if(null!=i&&null==o||null!=s&&null==a)return;const c=new c$2({start:o,end:a});this.setAtOrigin("timeInfo",new d({endField:s,startField:i,fullTimeExtent:c}),"service");}};return e$2([y({type:d,json:{read:!1,write:!1}})],a.prototype,"timeInfo",null),e$2([y({type:c$2,json:{read:!1,write:!1}})],a.prototype,"timeExtent",null),e$2([y({type:l$1,json:{read:!1,write:!1}})],a.prototype,"timeOffset",null),e$2([y({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],a.prototype,"datesInUnknownTimezone",null),e$2([y({type:c$1,readOnly:!0,json:{read:{source:"timeInfo"}}})],a.prototype,"serviceTimeInfo",void 0),a=e$2([a$1("esri.layers.mixins.TemporalSceneLayer")],a),a};let c$1=class c extends f$1{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null;}};e$2([y({type:String})],c$1.prototype,"endTimeField",void 0),e$2([y({type:String})],c$1.prototype,"startTimeField",void 0),c$1=e$2([a$1("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],c$1);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let s=class extends f$1{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo";}};e$2([y({type:String,json:{read:!0,write:!0}})],s.prototype,"name",void 0),e$2([y({type:String,json:{read:!0,write:!0}})],s.prototype,"field",void 0),e$2([y({type:[Number],json:{read:!0,write:!0}})],s.prototype,"currentRangeExtent",void 0),e$2([y({type:[Number],json:{read:!0,write:!0}})],s.prototype,"fullRangeExtent",void 0),e$2([y({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],s.prototype,"type",void 0),s=e$2([a$1("esri.layers.support.RangeInfo")],s);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var c;let p=c=class extends(u$1(V.ofType(j))){constructor(e){super(e);}clone(){return new c(this.items.map((e=>e.clone())))}write(e,r){return this.toJSON(r)}toJSON(e){const r=e?.layer?.spatialReference;return r?this.toArray().map((t=>{if(!r.equals(t.spatialReference)){if(!J(t.spatialReference,r))return e?.messages&&e.messages.push(new s$1("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const s=new j;on(t,s,r),t=s;}const s=t.toJSON(e);return delete s.spatialReference,s})).filter((e=>null!=e)):(e?.messages&&e.messages.push(new s$1("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map((r=>r.toJSON(e))))}static fromJSON(e,r){const t=new c;return e.forEach((e=>t.add(j.fromJSON(e,r)))),t}};p=c=e$2([a$1("esri.layers.support.PolygonCollection")],p);const l=p;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var u;let g=u=class extends f$1{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new l,this._geometriesSource=null;}initialize(){this.addHandles(v((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),C));}readGeometries(e,r,o){Array.isArray(e)?this.geometries=l.fromJSON(e,o):this._geometriesSource={url:p$1(e,o),context:o};}async loadGeometries(e,o){if(null==this._geometriesSource)return;const{url:s,context:t}=this._geometriesSource,i=await U(s,{responseType:"json",signal:o?.signal}),a=e.toJSON(),p=i.data.map((e=>({...e,spatialReference:a})));this.geometries=l.fromJSON(p,t),this._geometriesSource=null;}clone(){const e=new u({geometries:a$2(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};e$2([y({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],g.prototype,"spatialRelationship",void 0),e$2([y({type:l,nonNullable:!0,json:{write:!0}}),j$1({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],g.prototype,"geometries",void 0),e$2([o(["web-scene","portal-item"],"geometries")],g.prototype,"readGeometries",null),g=u=e$2([a$1("esri.layers.support.SceneFilter")],g);const h=g;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
async function i({fieldName:i,statisticsInfo:a,errorContext:o,fieldsIndex:r,path:n,customParameters:l,apiKey:c,signal:f}){if(null==a)throw new s$2(`${o}:no-cached-statistics`,"Cached statistics are not available for this layer");const d=r.get(i);if(null==d)throw new s$2(`${o}:field-unexisting`,`Field '${i}' does not exist on the layer`);const h=a.find((t=>t.name===d.name));if(null==h)throw new s$2(`${o}:no-cached-statistics`,"Cached statistics for this attribute are not available");const m=V$1(n,h.href),{data:u}=await U(m,{query:{f:"json",...l,token:c},responseType:"json",signal:f});return u}

async function e(e){const r=[];for(const n of e)n.name.toLowerCase().endsWith(".zip")?r.push(t(n)):r.push(Promise.resolve(n));return (await Promise.all(r)).flat()}async function t(e){const{BlobReader:t,ZipReader:r,BlobWriter:n}=await __vitePreload(() => import('./zipjs-wrapper-Cev9IRg5.js'),true?[]:void 0,import.meta.url),a=[],i=new r(new t(e));return (await i.getEntries()).forEach((e=>{if(e.directory||/^__MACOS/i.test(e.filename))return;const t=new n,r=e.getData?.(t).then((t=>new File([t],e.filename)));r&&a.push(r);})),Promise.all(a)}

const Ie=new Set(["3DObject","Point"]),Le=s$5();let je=class extends(a(F(L(l$2(b(j$2(t$1(S(e$3(i$1(i$2(f$2)))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new V,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0;}normalizeCtorArgs(e,t){return "string"==typeof e?{url:e,...t}:e}destroy(){this._set("renderer",null);}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getFeatureType(t?.feature)?.domains?.[e];return r&&"inherited"!==r.type?r:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new Z(this.fields)}readNodePages(e,t,r){return "Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:p$2.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo();}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return null!=this.associatedLayer&&v$1(this.associatedLayer)}get geometryType(){return Se[this.profile]||"mesh"}set renderer(e){p$3(e,this.fieldsIndex),this._set("renderer",e);}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=null!=e?e:s$6;const{query:t,queryRelated:r,editing:{supportsGlobalId:i,supportsRollbackOnFailure:s,supportsUploadWithItemId:o,supportsGeometryUpdate:a,supportsReturnServiceEditsInSourceSpatialReference:n$1},data:{supportsZ:l,supportsM:p,isVersioned:d,supportsAttachment:u},operations:{supportsEditing:y,supportsAdd:c,supportsUpdate:h,supportsDelete:m,supportsQuery:f,supportsQueryAttachments:g,supportsAsyncConvert3D:v}}=e,b=e.operations.supportsChangeTracking,w=!!this.associatedLayer?.infoFor3D&&n();return {query:t,queryRelated:r,editing:{supportsGlobalId:i,supportsReturnServiceEditsInSourceSpatialReference:n$1,supportsRollbackOnFailure:s,supportsGeometryUpdate:w&&a,supportsUploadWithItemId:o},data:{supportsAttachment:u,supportsZ:l,supportsM:p,isVersioned:d},operations:{supportsQuery:f,supportsQueryAttachments:g,supportsEditing:y&&b,supportsAdd:w&&c&&b,supportsDelete:w&&m&&b,supportsUpdate:h&&b,supportsAsyncConvert3D:v}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e);}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return !e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return !e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return null!=r&&Fe[r]?Fe[r]:(n$1.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e);}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=null!=e?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(a$3),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await t$2(this,{origin:"service"},t),p$3(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e);}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load());}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference);}catch(e){n$1.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null;}}createQuery(){const e=new b$1;return "mesh"===this.geometryType?this.associatedLayer?.infoFor3D&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new s$2("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new s$2("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=x(this.fieldsIndex,await n$2(this,p$4(this)));return $(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,r){const i=await this.queryCachedAttributes(e,[r]);if(!i||0===i.length)throw new s$2("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const s=new d$1;return s.attributes=i[0],s.layer=this,s.sourceLayer=this,s}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(n$1.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return p$5(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new s$2("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load();}catch(e){throw new s$2("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(C$1.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(C$1.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await __vitePreload(() => import('./editingSupport-BLvfwsfD.js'),true?__vite__mapDeps([0,1,2,3]):void 0,import.meta.url);let i=t;await this.load();const s=this.associatedLayer;if(!s)throw new s$2(`${this.type}-layer:not-editable`,"Service is not editable");await s.load();const{globalIdField:o}=s,n=!!s.infoFor3D,l=i?.globalIdUsed??!0;if(n&&null==o)throw new s$2(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(n&&!l)throw new s$2(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return g$2(s.url)&&n&&null!=e.deleteFeatures&&null!=o&&(i={...i,globalIdToObjectId:await J$1(s,e.deleteFeatures,o)}),r(this,s.source,e,i)}async uploadAssets(e,t){if(await this.load(),null==this.associatedLayer)throw new s$2(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){const r$1=e=>{throw n$1.getLogger(this).error(".convertMesh()",e.message),e};await this.load(),this.infoFor3D||r$1(new s$2("invalid:layer","SceneLayer has no capability for mesh conversion"));const i=await this.extractAndFilterFiles(e),s=i.reduce(((e,t)=>r(this.infoFor3D,t)?e+1:e),0);0===s&&r$1(new i$3),s>1&&r$1(new m);const o=this.spatialReference,l=t?.location??new _$1({x:0,y:0,z:0,spatialReference:o}),p=l.spatialReference.isGeographic?"local":"georeferenced",d=$$1.createWithExternalSource(l,i,{vertexSpace:p}),[u]=await this.uploadAssets([d],t);return u}async extractAndFilterFiles(e$1){await this.load();const t=this.infoFor3D;if(!t)return e$1;return (await e(e$1)).filter((e=>t$3(t,e)))}validateLayer(e){if(e.layerType&&!Ie.has(e.layerType))throw new s$2("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new s$2("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new s$2("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else {const s=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=s;break;case"vertex-reference-frame":r=!0,i=!s;break;default:r=!1;}}if(!r)throw new s$2("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new s$2("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference);}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else {if("mesh-pyramids"!==this.profile)throw new s$2("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject");}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some((t=>t.name===e.name)),r=!!this.associatedLayer?.fields?.some((t=>t&&e.name===t.name)),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=i;}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges();}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()));}e&&this._set("fields",e);}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=t$4(this);for(let r=0;r<e.length;r++){const i=e[r],s=this.originIdOf(i),o=this.associatedLayer.originIdOf(i);s<o&&(o===e$4.SERVICE||o===e$4.PORTAL_ITEM)&&t.setAtOrigin(i,this.associatedLayer[i],o);}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");if(!(n()&&null!=this.associatedLayer?.infoFor3D&&e&&g$2(this.associatedLayer?.url)&&e$1(this)))return;t$4(this).setAtOrigin("fullExtent",e.clone(),e$4.SERVICE);}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges));}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:i}=await s$3(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),s=await a$4.FeatureLayer();this.associatedLayer=new s({url:t,customParameters:this.customParameters,layerId:r,portalItem:i}),await this.associatedLayer.load();}catch(t){b$2(t)||this._logWarningOnPopupEnabled();}}async _logWarningOnPopupEnabled(){await w$1((()=>this.popupEnabled&&null!=this.popupTemplate));const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?n$1.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):n$1.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`);}_validateElevationInfo(){const e=this.elevationInfo;"mesh-pyramids"===this.profile&&$$2(n$1.getLogger(this),P("Mesh scene layers","relative-to-scene",e)),$$2(n$1.getLogger(this),w("Scene layers",e));}async fetchStatistics(e,t){return await i({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};e$2([y({types:{key:"type",base:t$5,typeMap:{selection:p$6}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],je.prototype,"featureReduction",void 0),e$2([y({type:[s],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],je.prototype,"rangeInfos",void 0),e$2([y({json:{read:!1}})],je.prototype,"associatedLayer",void 0),e$2([y({type:["show","hide"]})],je.prototype,"listMode",void 0),e$2([y({type:["ArcGISSceneServiceLayer"]})],je.prototype,"operationalLayerType",void 0),e$2([y({json:{read:!1},readOnly:!0})],je.prototype,"type",void 0),e$2([y({...Le.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],je.prototype,"fields",void 0),e$2([y()],je.prototype,"types",null),e$2([y()],je.prototype,"typeIdField",null),e$2([y()],je.prototype,"templates",null),e$2([y()],je.prototype,"formTemplate",null),e$2([y({readOnly:!0,clonable:!1})],je.prototype,"fieldsIndex",null),e$2([y({type:p$7,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],je.prototype,"floorInfo",void 0),e$2([y(Le.outFields)],je.prototype,"outFields",void 0),e$2([y({type:p$2,readOnly:!0,json:{read:!1}})],je.prototype,"nodePages",void 0),e$2([o("service","nodePages",["nodePages","pointNodePages"])],je.prototype,"readNodePages",null),e$2([y({type:[a$5],readOnly:!0})],je.prototype,"materialDefinitions",void 0),e$2([y({type:[y$1],readOnly:!0})],je.prototype,"textureSetDefinitions",void 0),e$2([y({type:[m$1],readOnly:!0})],je.prototype,"geometryDefinitions",void 0),e$2([y({readOnly:!0})],je.prototype,"serviceUpdateTimeStamp",void 0),e$2([y({readOnly:!0})],je.prototype,"attributeStorageInfo",void 0),e$2([y({readOnly:!0})],je.prototype,"statisticsInfo",void 0),e$2([y({type:V.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],je.prototype,"excludeObjectIds",void 0),e$2([y({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],je.prototype,"definitionExpression",void 0),e$2([y({type:h,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],je.prototype,"filter",void 0),e$2([y({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],je.prototype,"path",void 0),e$2([y(d$2)],je.prototype,"elevationInfo",null),e$2([y({readOnly:!0,json:{read:!1}})],je.prototype,"effectiveCapabilities",null),e$2([y({readOnly:!0})],je.prototype,"effectiveEditingEnabled",null),e$2([y({type:String})],je.prototype,"geometryType",null),e$2([y(l$3)],je.prototype,"labelsVisible",void 0),e$2([y({type:[C$2],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:l$4},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:l$4},write:!0}})],je.prototype,"labelingInfo",void 0),e$2([y(y$2)],je.prototype,"legendEnabled",void 0),e$2([y({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return void 0!==r?r$1(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],je.prototype,"opacity",void 0),e$2([y({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],je.prototype,"priority",void 0),e$2([y({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],je.prototype,"semantic",void 0),e$2([y({types:u$2,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],je.prototype,"renderer",null),e$2([y({json:{read:!1}})],je.prototype,"cachedDrawingInfo",void 0),e$2([o("service","cachedDrawingInfo")],je.prototype,"readCachedDrawingInfo",null),e$2([y({readOnly:!0,json:{read:!1}})],je.prototype,"capabilities",null),e$2([y({type:Boolean,json:{read:!1}})],je.prototype,"editingEnabled",null),e$2([y({readOnly:!0,json:{write:!1,read:!1}})],je.prototype,"infoFor3D",null),e$2([y({readOnly:!0,json:{write:!1,read:!1}})],je.prototype,"relationships",null),e$2([y(s$4)],je.prototype,"popupEnabled",void 0),e$2([y({type:k,json:{name:"popupInfo",write:!0}})],je.prototype,"popupTemplate",void 0),e$2([y({readOnly:!0,json:{read:!1}})],je.prototype,"defaultPopupTemplate",null),e$2([y({type:String,json:{read:!1}})],je.prototype,"objectIdField",void 0),e$2([o("service","objectIdField",["objectIdField","fields"])],je.prototype,"readObjectIdField",null),e$2([y({type:String,json:{read:!1}})],je.prototype,"globalIdField",void 0),e$2([o("service","globalIdField",["globalIdField","fields"])],je.prototype,"readGlobalIdField",null),e$2([y({readOnly:!0,type:String,json:{read:!1}})],je.prototype,"displayField",null),e$2([y({type:String,json:{read:!1}})],je.prototype,"profile",void 0),e$2([o("service","profile",["store.profile"])],je.prototype,"readProfile",null),e$2([y({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],je.prototype,"normalReferenceFrame",void 0),e$2([y(t$6)],je.prototype,"screenSizePerspectiveEnabled",void 0),e$2([y({json:{read:!1,origins:{service:{read:!0}}}})],je.prototype,"serviceItemId",void 0),e$2([y(f)],je.prototype,"useViewTime",null),je=e$2([a$1("esri.layers.SceneLayer")],je);const Fe={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Se={"mesh-pyramids":"mesh",points:"point"},_e=je;

export { _e as default };
