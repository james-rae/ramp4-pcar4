import { s, t, r as s$1, C as C$1, d } from './main-CGBWc59Z.js';
import { b as t$1, a as a$1, t as t$3 } from './fetchService-BSiheFNT.js';
import { s as s$2, a, o, u, t as t$2, c, n, i, e as e$1 } from './portalLayers-B6NCTP6z.js';
import { populateGroupLayer as w } from './layersCreator-D1nAvCDG.js';
import { e } from './jsonContext-CLNEFAHJ.js';
import './preload-helper-dJJaZANz.js';
import './associatedFeatureServiceUtils-1k47Utu4.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
async function g(e,t){const r=e.instance.portalItem;if(r?.id)return await r.load(t),b(e),e.validateItem&&e.validateItem(r),L(e,t)}function b(t){const r=t.instance.portalItem;if(!r?.type||!t.supportedTypes.includes(r.type))throw new s("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:r?.type,expectedType:t.supportedTypes.join(", ")})}async function L(e$2,t$1){const r=e$2.instance,o=r.portalItem;if(!o)return;const{url:n,title:s}=o,l=e(o,"portal-item");if("group"===r.type)return S(r,l,e$2);n&&"media"!==r.type&&r.read({url:n},l);const c=new e$1,u=await M(e$2,c,t$1);return u&&r.read(u,l),r.resourceReferences={portalItem:o,paths:l.readResourcePaths??[]},"subtype-group"!==r.type&&r.read({title:s},l),t(r,l)}async function S(t,r,a){const o=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:n,type:s$2}=o;if("Group Layer"===s$2){if(!s$1(o,"Map"))throw new s("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return T(t)}return t.read({title:n},r),v(t,a)}async function T(e$1){const t=e$1.portalItem,r=await t.fetchData("json");if(!r)return;const a=e(t,"web-map");e$1.read(r,a),await w(e$1,r,{context:a}),e$1.resourceReferences={portalItem:t,paths:a.readResourcePaths??[]};}async function v(t,r){let o$1;const{portalItem:n}=t;if(!n)return;const s$1=n.type,i=r.layerModuleTypeMap;switch(s$1){case"Feature Service":case"Feature Collection":o$1=i.FeatureLayer;break;case"Stream Service":o$1=i.StreamLayer;break;case"Scene Service":o$1=i.SceneLayer;break;default:throw new s("portal:unsupported-item-type-as-group",`The item type '${s$1}' is not supported as a 'IGroupLayer'`)}const y=new e$1;let[f,m]=await Promise.all([o$1(),M(r,y)]),d=()=>f;if("Feature Service"===s$1){const e=s$2(m)?.customParameters;m=n.url?await a(m,n.url,y):{},d=await E(m,i)||d;const r=await k(n.url,{customParameters:e,loadContext:y});return await F(t,d,m,r)}return "Scene Service"===s$1&&n.url&&(m=await o(n,m,y)),u(m)>0?await F(t,d,m):await j(t,d)}async function j(e,t){const{portalItem:r}=e;if(!r?.url)return;const a=await t$1(r.url);a&&F(e,t,{layers:a.layers?.map(t$2),tables:a.tables?.map(t$2)});}async function F(e,t,r,a){let o=r.layers||[];const s=r.tables||[];if("Feature Collection"===e.portalItem?.type?(o.forEach(((e,t)=>{e.id=t,"Table"===e?.layerDefinition?.type&&s.push(e);})),o=o.filter((e=>"Table"!==e?.layerDefinition?.type))):(o.reverse(),s.reverse()),o.forEach((o=>{const n=a?.(o);if(n||!a){const a=P(e,t(o),r,o,n);e.add(a);}})),s.length){const t=await a$1.FeatureLayer();s.forEach((o=>{const n=a?.(o);if(n||!a){const a=P(e,t,r,o,n);e.tables.add(a);}}));}}function P(e,t,r,a,o){const n=e.portalItem,i={portalItem:n.clone(),layerId:a.id};null!=a.url&&(i.url=a.url);const l=new t(i);if("sourceJSON"in l&&(l.sourceJSON=o),"subtype-group"!==l.type&&"catalog"!==l.type&&(l.sublayerTitleMode="service-name"),"Feature Collection"===n.type){const e={origin:"portal-item",portal:n.portal||C$1.getDefault()};l.read(a,e);const t=r.showLegend;null!=t&&l.read({showLegend:t},e);}return l}async function M(e,t,r){if(!1===e.supportsData)return;const a=e.instance,o=a.portalItem;if(!o)return;let n$1=null;try{n$1=await o.fetchData("json",r);}catch(s){}if(D(a)){let e=null;const r=await x(o,n$1,t);if((n$1?.layers||n$1?.tables)&&r>0){if(null==a.layerId){const e=c(a.type),t=e?n(n$1,e)[0]:s$2(n$1);t&&(a.layerId=t.id);}e=C(n$1,a),"OrientedImageryLayer"===e?.layerType&&"oriented-imagery"===a.type&&a.supportedSourceTypes.add("Feature Layer"),e&&null!=n$1.showLegend&&(e.showLegend=n$1.showLegend);}return r>1&&"sublayerTitleMode"in a&&"service-name"!==a.sublayerTitleMode&&(a.sublayerTitleMode="item-title-and-service-name"),e}return n$1}async function x(e,r,a){if(r?.layers&&r?.tables)return u(r);const o=d(e.url);if(!o)return 1;const n=await a.fetchServiceMetadata(o.url.path,{customParameters:s$2(r)?.customParameters}).catch((()=>null));return (r?.layers?.length??n?.layers?.length??0)+(r?.tables?.length??n?.tables?.length??0)}function C(e,t){const{layerId:r}=t,a=e.layers?.find((e=>e.id===r))||e.tables?.find((e=>e.id===r));return a&&G(a,t)?a:null}function D(e){return "stream"!==e.type&&"layerId"in e}function G(e,t){const r="layerType"in e&&e.layerType,{type:a}=t;return !("feature"===a&&r&&"ArcGISFeatureLayer"!==e.layerType||"catalog"===a&&!r||"oriented-imagery"===a&&!r||"subtype-group"===a&&!r)}async function k(e,t){const{layersJSON:a}=await t$3(e,t);if(!a)return null;const o=[...a.layers,...a.tables];return e=>o.find((t=>t.id===e.id))}async function E(e,t){const{layers:r}=e;if(!r?.length)return;const a=new Set,o=[];for(const{layerType:i$1}of r){const e=i$1??"ArcGISFeatureLayer";if(a.has(e))continue;a.add(e);const r=t[i(e)];o.push(r());}const n=await Promise.all(o),s=new Map;return Array.from(a).forEach(((e,t)=>{s.set(e,n[t]);})),({layerType:e})=>{const t=e??"ArcGISFeatureLayer";return s.get(t)}}

export { g as load };
