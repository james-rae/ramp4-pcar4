const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngine-_yTykaYs.js","./geometryEngineBase-CfyzjpMT.js","./main-CGBWc59Z.js","./preload-helper-dJJaZANz.js","./main-CY4W0263.css","./hydrated-Bv9VIO04.js","./imageryUtils-Cudh1xeA.js","./utils-DbnOqzmT.js","./originUtils-Do2K3Z97.js","./multiOriginJSONSupportUtils-C5oGZ9U0.js","./jsonContext-CLNEFAHJ.js","./saveAPIKeyUtils-EUYYaWcY.js","./saveUtils-BK0O4joz.js"])))=>i.map(i=>d[i]);
import { _ as __vitePreload } from './preload-helper-dJJaZANz.js';
import { kc as n$3, n1 as _$1, fw as z, n2 as y$1, G as n$4, s, cs as g$2, _ as _$2, n3 as h$4, a_ as w$1, ig as U$1, ia as j$1, U as U$2, n4 as D$2, gw as p$3, n5 as n$5, bA as f$3, ih as D$3, ii as R, ij as u$5, jW as m$5, n6 as l$1, n7 as i$3, n8 as a$1, n9 as l$2, na as p$4, bd as e$1, be as y$2, eg as p$5, bf as a$2, b_ as f$4, i7 as g$3, bt as W, bl as d$3, aX as j$2, nb as c$2, nc as N, nd as l$3, ne as d$4, ed as o$3, nf as i$4, ng as c$3, i8 as f$5, nh as h$6, i9 as m$6, ik as s$2, ni as d$5, nj as o$4, nk as f$6, nl as $$1, nm as W$1, aE as s$3, nn as g$4, no as q, np as U$4, nq as E, nr as L, ib as L$1, ns as t$2, aA as u$6, nt as u$7, nu as a$3, nv as m$7, ie as E$1, id as W$2, ic as h$7, e3 as v$2, nw as c$4, O, nx as g$5, ny as P$1, N as has, mg as u$8, nz as c$5, iK as n$6, I as I$2, lD as j$3, nA as T$1, nB as f$7, nC as r$3, nD as r$4, nE as F$1, nF as U$5, nG as N$1, nH as n$7, nI as B, nJ as L$2, nK as D$4, nL as R$1, e7 as l$4, eb as t$3, e9 as b$1, ea as j$4, eo as e$2, gB as l$5, en as l$6, e8 as f$8, ec as S$3, bZ as i$5, fb as k$1, A as a$4, dV as y$4, gE as p$6, gV as A, bj as d$6, h3 as N$2, e0 as o$5, nM as a$5, ef as y$5, bm as k$2, em as f$9 } from './main-CGBWc59Z.js';
import { i as i$2, m as m$4, x as x$2, h as h$5, s as s$1 } from './RawBlockCache-CL9ghcDL.js';
import { T, D as D$1, j, r as re, o as oe, V as V$2, J, e as ee, Z, C as C$1, U as U$3 } from './rasterProjectionHelper-BwBrJ5rI.js';
import { S as S$2, y as y$3, c as c$6, R as R$2 } from './PolynomialTransform-uet4uxyS.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const V$1=8,U=256;let $=0,Q=class extends(n$3(f$4)){constructor(){super(...arguments),this._tileFetchQueue=new _$1({concurrency:32,process:(e,t)=>this._fetchRawTile(e.pyramidLevel,e.row,e.col,{...e.options,signal:t})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"};}async init(){const e=T();this.addResolvingPromise(e),await this.when();}normalizeCtorArgs(e){return e?.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:z.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=D$1(e.spatialReference);return null!=t&&e.extent.width>=t/2}get _hasNoneOrGCSShiftTransform(){const{transform:e}=this.rasterInfo;return null==e||"gcs-shift"===e.type}set rasterJobHandler(e){this._set("rasterJobHandler",e),"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach((t=>t.rasterJobHandler=e));}get rasterId(){return this.url||"rasterId-"+$++}set url(e){this._set("url",y$1(e,n$4.getLogger(this)));}async open(e){throw new s("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,o={}){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,t,i,r);return o={noClip:!0,...o},this.fetchPixels(n,r.size[0],r.size[1],o)}async identify(e,t={}){e=g$2(_$2,e).clone().normalize();const{multidimensionalDefinition:i,timeExtent:o}=t,{rasterInfo:r}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:s}=r;let{transposedVariableName:l}=t;const c=null!=s&&n&&(null!=o||h$4(i));if(c&&!l){l=null!=i&&i.length>0?i[0].variableName??void 0:s.variables[0].name,t={...t,transposedVariableName:l};}t=this._getRequestOptionsWithSliceId(t);const{spatialReference:m,extent:f}=r,{datumTransformation:u}=t;let h=j(e,m,u);if(!f.intersects(h))return {location:h,value:null};if(null!=r.transform){const e=r.transform.inverseTransform(h);if(!r.nativeExtent.intersects(e))return {location:e,value:null};h=e;}let p=0;const d=null!=l&&null!=s&&r.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(d)return e.identify(h,t);const{pixelSize:o}=r,n=3,s=o.x*n/2,l=o.y*n/2,a=new w$1({xmin:h.x-s,xmax:h.x+s,ymin:h.y-l,ymax:h.y+l,spatialReference:m}),c={interpolation:"nearest",multidimensionalDefinition:i,sliceId:t.sliceId},{pixelBlock:f}=await e.fetchPixels(a,n,n,c),{pixelBlock:u}=await this.fetchPixels(a,n,n,c);if(null==f)return {location:h,value:null};const p=Math.floor(n*n*.5),x=!f.mask||f.mask[p]?f.pixels.map((e=>e[p])):null;let y;return null!=u&&(y=!u.mask||u.mask[p]?u.pixels.map((e=>e[p])):void 0),{location:h,value:x,processedValue:y,pyramidLevel:0}}if(!d)if(t.srcResolution){p=re(t.srcResolution,r,this.ioConfig.sampling).pyramidLevel;}else if(p=await this.computeBestPyramidLevelForLocation(e,t),null==p)return {location:h,value:null};const y=this.identifyPixelLocation(h,p,null,d);if(null===y)return {location:h,value:null};const{row:g,col:I,rowOffset:k,colOffset:v,blockWidth:T}=y,b=l??t.sliceId,P=i$2(this.rasterId,b),B=`${p}/${g}/${I}`;let M=m$4(P,null,B);null==M&&(M=this.fetchRawTile(p,g,I,t),x$2(P,null,B,M));const _=await M;if(!_?.pixels?.length)return {location:h,value:null};const C=k*T+v;return this._processIdentifyResult(_,{srcLocation:h,position:C,pyramidLevel:p,useTransposedTile:!!d,requestSomeSlices:c,identifyOptions:t})}async fetchPixels(e,t,i,o={}){e=oe(e),o=this._getRequestOptionsWithSliceId(o);const{_hasNoneOrGCSShiftTransform:r}=this;if(o.requestRawData&&r)return this._fetchPixels(e,t,i,o);const n=D$1(e.spatialReference),s=V$2(e);if(null==n||0===s||1===s&&this._isGlobalWrappableSource&&r)return this._fetchPixels(e,t,i,o);if(s>=3)return {extent:e,pixelBlock:null};const l=[],{xmin:a,xmax:c}=e,m=Math.round(n/(c-a)*t),f=m-Math.round((n/2-a)/(c-a)*t);let u=0;const h=[];for(let y=0;y<=s;y++){const r=new w$1({xmin:0===y?a:-n/2,xmax:y===s?c-n*y:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===y?m-f:y===s?t-u:m;u+=p,h.push(p);const d=o.disableWrapAround&&y>0?null:this._fetchPixels(r,p,i,o);l.push(d);}const p=(await Promise.all(l)).map((e=>e?.pixelBlock));let d=null;const x={width:t,height:i};if(this.rasterJobHandler){d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:h},o)).pixelBlock;}else d=U$1(p,x,{blockWidths:h});return {extent:e,srcExtent:J(e,this.rasterInfo.spatialReference,o.datumTransformation),pixelBlock:d}}async fetchRawPixels(e,t,i,o={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,o),{nativeExtent:n,nativePixelSize:s,storageInfo:l}=this.rasterInfo,a=2**e,c=s.x*a,m=s.y*a,f=new w$1({xmin:n.xmin+c*t.x,xmax:n.xmin+c*(t.x+i.width-1),ymin:n.ymax-m*(t.y+i.height-1),ymax:n.ymax-m*t.y,spatialReference:n.spatialReference});if(!r)return {extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:u,mosaicSize:h}=r;if(1===u.length&&null!=u[0]&&u[0].width===i.width&&u[0].height===i.height)return {extent:f,srcExtent:f,pixelBlock:r.pixelBlocks[0]};const p=e>0?l.pyramidBlockWidth:l.blockWidth,d=e>0?l.pyramidBlockHeight:l.blockHeight,x={x:t.x%p,y:t.y%d};let y;if(this.rasterJobHandler){y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:h,destDimension:i,clipOffset:x,clipSize:i,coefs:null,sampleSpacing:null,interpolation:o.interpolation,alignmentInfo:null,blockWidths:null},o)).pixelBlock;}else y=U$1(u,h,{clipOffset:x,clipSize:i});return {extent:f,srcExtent:f,pixelBlock:y}}fetchRawTile(e,t,o,r){throw new s("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return J(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return !this.rasterJobHandler||t.useCanvas?j$1(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,i,o=0){const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:l}=i;o=o??i.retryCount??this.ioConfig.retryCount;const a=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await U$2(e,{...i,query:{...s,...r},headers:{...l,...a}})}catch(c){if(o>0)return o--,this.request(e,i,o);throw c}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return null==t||null==e||0===e.length?null:D$2(e,t)}getTileExtentFromTileInfo(e,t,i,o){const r=o.lodAt(e);return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,o.origin,o.spatialReference,o.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:o}=this.rasterInfo,{pyramidResolutions:r}=e;if(!e.tileInfo){const n=[],s=e.maximumPyramidLevel||0;let l=(o.x+o.y)/2,a=1/.0254*96*l;for(let e=0;e<=s&&(n.unshift(new p$3({level:s-e,resolution:l,scale:a})),e!==s);e++)if(r){const t=(r[e].x+r[e].y)/2;a*=t/l,l=t;}else l*=2,a*=2;const c=new _$2({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new z({origin:c,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0;}}createRemoteDatasetStorageInfo(e,t=512,i=512,o){const{width:r,height:n,nativeExtent:s,pixelSize:l,spatialReference:a}=e,c=new _$2({x:s.xmin,y:s.ymax,spatialReference:a});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const m=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[l],o);e.storageInfo=new n$5({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m});}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,o,r,n=0,s=2){if(1===r.length&&n>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<n;i++)e*=s,t*=s,r.push({x:e,y:t});}const l=[],{x:a,y:c}=o;for(let m=0;m<r.length;m++){const{x:o,y:n}=r[m];l.push({minCol:Math.floor((e.xmin-a+.1*o)/t/o),maxCol:Math.floor((e.xmax-a-.1*o)/t/o),minRow:Math.floor((c-e.ymax+.1*n)/i/n),maxRow:Math.floor((c-e.ymin-.1*n)/i/n)});}return l}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===e)return t;if(null!=i&&i.length)return i[e-1];const r=o**e;return {x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,o){const{spatialReference:r,nativeExtent:n,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:l,origin:a,transposeInfo:c}=s,m=o&&null!=c?c.tileSize[0]:s.blockWidth,f=o&&null!=c?c.tileSize[1]:s.blockHeight,u=j(e,r,i);if(!n.intersects(u))return null;if(t<0||t>l)return null;const h=this.getPyramidPixelSize(t),{x:p,y:d}=h,x=(a.y-u.y)/d/f,y=(u.x-a.x)/p/m,g=Math.min(f-1,Math.floor((x-Math.floor(x))*f)),I=Math.min(m-1,Math.floor((y-Math.floor(y))*m));return {pyramidLevel:t,row:Math.floor(x),col:Math.floor(y),rowOffset:g,colOffset:I,blockWidth:m,srcLocation:u}}getTileExtent(e,t,i,o,r,n){const[s,l]=n,a=o.x+i*s*e.x,c=a+s*e.x,m=o.y-t*l*e.y,f=m-l*e.y;return new w$1({xmin:a,xmax:c,ymin:f,ymax:m,spatialReference:r})}getBlockWidthHeight(e){return {blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const o=this.rasterInfo.storageInfo.blockBoundary[e];return !o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i}updateImageSpaceRasterInfo(e){const{extent:t,pixelSize:i}=e;if(-.5===t.xmin&&.5===t.ymax&&1===i.x&&1===i.y&&null==e.transform)return;const{width:o,height:r}=e,n=f$3.WebMercator;e.spatialReference=n,e.extent=e.nativeExtent=new w$1({xmin:-.5,ymax:.5,xmax:o-.5,ymin:.5-r,spatialReference:n}),e.isPseudoSpatialReference=!0,e.transform=null,e.pixelSize=new _$2({x:1,y:1,spatialReference:n});const{extent:s,storageInfo:l}=e;if(l){l.origin=new _$2({x:s.xmin,y:s.ymax,spatialReference:n});const{pyramidResolutions:t,tileInfo:o}=l;if(t&&t.forEach((e=>{e.x/=i.x,e.y/=i.y;})),o){o.origin=l.origin;const t=(e.nativePixelSize.x+e.nativePixelSize.y)/2;o.lods.forEach(((e,i)=>{e.resolution=t*2**i,e.scale=96*e.resolution/.0254;}));}}}async _fetchPixels(e,t,i,o={}){let r=V$2(e);if(r>=2)return {extent:e,pixelBlock:null};const n=this._getSourceDataInfo(e,t,i,o),{pyramidLevel:s,srcResolution:l,srcExtent:a,srcWidth:c,srcHeight:m,ul:f}=n;if(0===c||0===m)return {extent:e,srcExtent:a,pixelBlock:null};const{rasterInfo:u}=this,h=u.transform,p="gcs-shift"===h?.type,d=null!=D$1(e.spatialReference);!p&&d||(r=V$2(n.srcExtent,p));const x=await this._fetchRawTiles(s,f,{width:c,height:m,wrapCount:r},o);if(!x)return {extent:e,srcExtent:a,pixelBlock:null};const y=u.storageInfo,g=s>0?y.pyramidBlockWidth:y.blockWidth,I=s>0?y.pyramidBlockHeight:y.blockHeight;let{x:R$1,y:w}=u.pixelSize;if(s>0){const{pyramidResolutions:e,pyramidScalingFactor:t}=y;if(null!=e&&e[s-1])({x:R$1,y:w}=e[s-1]);else {const e=t**s;R$1*=e,w*=e;}}const S=u.spatialReference,k=new _$2({x:R$1,y:w,spatialReference:S}),v=g===c&&I===m&&f.x%g==0&&f.y%I==0,T$1=new _$2({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),b=!e.spatialReference.equals(S),W=S.isGeographic?1e-9:1e-4,{datumTransformation:j}=o;if(!b&&v&&1===x.pixelBlocks.length&&g===t&&I===i&&X(l,T$1,W))return {extent:e,srcExtent:a,srcTilePixelSize:k,pixelBlock:x.pixelBlocks[0]};const z=d&&null!=D$1(a.spatialReference)&&this._hasNoneOrGCSShiftTransform,L=o.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");L&&!this.rasterJobHandler&&await T();const D=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:T$1.toJSON(),datumTransformation:j,rasterTransform:h,hasWrapAround:r>0||z,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:L},o):ee({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:T$1,datumTransformation:j,rasterTransform:h,hasWrapAround:r>0||z,isAdaptive:!1,includeGCSGrid:L});let F;const A=!o.requestRawData,G={rows:D.spacing[0],cols:D.spacing[1]},q=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(s,x.extent.xmin):void 0,{pixelBlocks:N,mosaicSize:V,isPartiallyFilled:U}=x;let $=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:N,srcMosaicSize:V,destDimension:A?{width:t,height:i}:null,coefs:A?D.coefficients:null,sampleSpacing:A?G:null,projectDirections:L,gcsGrid:L?D.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:o.interpolation,alignmentInfo:q,blockWidths:null},o);({pixelBlock:F,localNorthDirections:$}=e);}else {const e=U$1(N,V,{alignmentInfo:q});F=A?D$3(e,{width:t,height:i},D.coefficients,G,o.interpolation):e,L&&D.gcsGrid&&($=R({width:t,height:i},D.gcsGrid),F=u$5(F,this.rasterInfo.dataType,$));}return o.requestRawData||L?{extent:e,srcExtent:a,srcTilePixelSize:k,pixelBlock:F,transformGrid:D,localNorthDirections:$,isPartiallyFilled:U}:{extent:e,srcExtent:a,srcTilePixelSize:k,pixelBlock:F}}async _fetchRawTiles(e,t,i,o){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:l}=this.getBlockWidthHeight(e);let{x:a,y:c}=t,{width:m,height:f,wrapCount:u}=i;const h=this._getRasterTileAlignmentInfo(e,0);o.buffer&&(a-=o.buffer.cols,c-=o.buffer.rows,m+=2*o.buffer.cols,f+=2*o.buffer.rows);let p=0,d=0,x=0;if(u&&null!=h){({worldColumnCountFromOrigin:d,originColumnOffset:x,rightPadding:p}=h);d*h.blockWidth-p>=a+m&&(p=0);}const y=Math.floor(a/s),g=Math.floor(c/l),I=Math.floor((a+m+p-1)/s),R=Math.floor((c+f+p-1)/l),w=n[e];if(!w)return null;const{minRow:S,minCol:k,maxCol:v,maxRow:T}=w;if(0===u&&(R<S||I<k||g>T||y>v))return null;const b=new Array;let P=!1;const B=null==this.ioConfig.allowPartialFill?o.allowPartialFill:this.ioConfig.allowPartialFill;for(let H=g;H<=R;H++)for(let t=y;t<=I;t++){let i=t;if(!o.disableWrapAround&&u&&null!=h&&d<=t&&(i=t-d-x),H>=S&&i>=k&&T>=H&&v>=i){const t=this._tileFetchQueue.push({pyramidLevel:e,row:H,col:i,options:o},{signal:o.signal});B?b.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{P=!0,e(null);}));}))):b.push(t);}else b.push(Promise.resolve(null));}if(0===b.length)return null;const M=await Promise.all(b),_={height:(R-g+1)*l,width:(I-y+1)*s},{spatialReference:C}=this.rasterInfo,W=this.getPyramidPixelSize(e),{x:j,y:z}=W;return {extent:new w$1({xmin:r.x+y*s*j,xmax:r.x+(I+1)*s*j,ymin:r.y-(R+1)*l*z,ymax:r.y-g*l*z,spatialReference:C}),pixelBlocks:M,mosaicSize:_,isPartiallyFilled:P}}_fetchRawTile(e,t,i,o){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:n,minCol:l,maxCol:a,maxRow:c}=r;if(t<n||i<l||t>c||i>a)return Promise.resolve(null);const m=i$2(this.rasterId,o.sliceId),f=`${e}/${t}/${i}`;let u=m$4(m,o.registryId,f);if(null==u){const r=new AbortController;u=this.fetchRawTile(e,t,i,{...o,signal:r.signal}),x$2(m,o.registryId,f,u,r),u.catch((()=>h$5(m,o.registryId,f)));}return o.signal&&m$5(o,(()=>{s$1(m,o.registryId,f);})),u}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if(!(2===t&&"vector-magdir"===i||"vector-uv"===i)||2!==e?.length||!e[0]?.length)return null;const o=e[0].length;if("vector-magdir"===i){const t=e[1].map((e=>(e+360)%360));return [e[0],t]}const[r,n]=e,s=[],l=[];for(let a=0;a<o;a++){const[e,t]=l$1([r[a],n[a]]);s.push(e),l.push(t);}return [s,l]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlignmentInfo&&(this._rasterTileAlignmentInfo=Z(this.rasterInfo)),null==this._rasterTileAlignmentInfo.pyramidsInfo?null:{startX:t,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,o={}){const r={datumTransformation:o.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};o.srcResolution&&(r.srcResolution=o.srcResolution,this._updateSourceDataInfo(e,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:l,pyramidLevel:a}=r,c=s/t,m=l/i,f=a<n&&c*m>=16,u=a===n&&this._requireTooManySrcTiles(s,l,t,i);if(f||u||(0===s||0===l)){const s=new _$2({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let l=C$1(s,this.rasterInfo.spatialReference,e,r.datumTransformation);const u=!l||o.srcResolution&&l.x+l.y<o.srcResolution.x+o.srcResolution.y;if(f&&o.srcResolution&&u){const e=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(n-a+3>=e){const t=2**e;l={x:o.srcResolution.x*t,y:o.srcResolution.y*t};}}l&&(r.srcResolution=l,this._updateSourceDataInfo(e,r));}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,t,i)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(e,t,i,o){const{tileInfo:r}=this.rasterInfo.storageInfo,n=Math.ceil(e/r.size[0])*Math.ceil(t/r.size[1]),s=e/i,l=t/o,a=Math.max(1,(i+o)/1024);return n>=U*a||s>V$1||l>V$1}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const{rasterInfo:i}=this,o=i.spatialReference,{srcResolution:r,datumTransformation:n}=t,{pyramidLevel:s,pyramidResolution:l,excessiveReading:a}=re(r,i,this.ioConfig.sampling);if(a)return;let c=t.srcExtent||J(e,o,n);if(null==c)return;const m=i.transform;m&&(c=m.inverseTransform(c)),t.srcExtent=c;const{x:f,y:u}=i.storageInfo.origin,h=Math.floor((c.xmin-f)/l.x+.1),p=Math.floor((u-c.ymax)/l.y+.1),d=Math.floor((c.xmax-f)/l.x-.1),x=Math.floor((u-c.ymin)/l.y-.1),y=c.width<.1*l.x?0:d-h+1,g=c.height<.1*l.y?0:x-p+1;t.pyramidLevel=s,t.pyramidResolution=l,t.srcWidth=y,t.srcHeight=g,t.ul={x:h,y:p};}_getRequestOptionsWithSliceId(e){return null!=this.rasterInfo.multidimensionalInfo&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:o,pyramidLevel:r,useTransposedTile:n}=t,s=e.pixels[0].length/e.width/e.height;if(!(!e.mask||e.mask[o]))return {location:i,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(null==l||!n){const t=e.pixels.map((e=>e[o])),n={location:i,value:t,pyramidLevel:r},s=this._computeMagDirValues(t.map((e=>[e])));return s?.length&&(n.magdirValue=s.map((e=>e[0]))),n}let a=e.pixels.map((e=>e.slice(o*s,o*s+s))),c=this._computeMagDirValues(a);const{requestSomeSlices:m,identifyOptions:f}=t;let h=i$3(l,f.transposedVariableName);if(m){const e=a$1(h,f.multidimensionalDefinition,f.timeExtent);a=a.map((t=>e.map((e=>t[e])))),c=c?.map((t=>e.map((e=>t[e])))),h=e.map((e=>h[e]));}const p=e.noDataValues||this.rasterInfo.noDataValue,d={pixels:a,pixelType:e.pixelType};let x;null!=p&&(l$2(d,p),x=d.mask);return {location:i,value:null,dataSeries:h.map(((e,t)=>{const i={value:0===x?.[t]?null:a.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new p$4({...e,isSlice:!0})))};return c?.length&&(i.magdirValue=[c[0][t],c[1][t]]),i})),pyramidLevel:r}}};function X(e,t,i){return Math.abs(e.x-t.x)<i&&Math.abs(e.y-t.y)<i}e$1([y$2()],Q.prototype,"_rasterTileAlignmentInfo",void 0),e$1([y$2()],Q.prototype,"_tileFetchQueue",void 0),e$1([y$2({readOnly:!0})],Q.prototype,"_isGlobalWrappableSource",null),e$1([y$2({readOnly:!0})],Q.prototype,"_hasNoneOrGCSShiftTransform",null),e$1([y$2()],Q.prototype,"rasterJobHandler",null),e$1([y$2({readOnly:!0})],Q.prototype,"rasterId",null),e$1([y$2(p$5)],Q.prototype,"url",null),e$1([y$2({type:String,json:{write:!0}})],Q.prototype,"datasetName",void 0),e$1([y$2({type:String,json:{write:!0}})],Q.prototype,"datasetFormat",void 0),e$1([y$2()],Q.prototype,"hasUniqueSourceStorageInfo",void 0),e$1([y$2()],Q.prototype,"rasterInfo",void 0),e$1([y$2()],Q.prototype,"ioConfig",void 0),e$1([y$2()],Q.prototype,"sourceJSON",void 0),Q=e$1([a$2("esri.layers.support.rasterDatasets.BaseRaster")],Q);const K=Q;

function n$2(e,i){if(e.spatialReference.equals(i))return e;const n=W(e.spatialReference),a=W(i);if(n===a)return e;const h=n/a;return {x:e.x*h,y:e.y*h}}async function a(t,e,n){if("extent"===n.type)return o$2(t,e,n);const{width:a,height:x}=t,l=new Uint8Array(a*x),{contains:m,intersects:s}=await __vitePreload(async () => { const {contains:m,intersects:s} = await import('./geometryEngine-_yTykaYs.js');return {contains:m,intersects:s}},true?__vite__mapDeps([0,1,2,3,4,5]):void 0,import.meta.url);return s(e,n)?"polyline"===n.type?r$2(t,e,n):m(n,e)?t:h$3(t,e,n):new g$3({pixelType:t.pixelType,width:a,height:x,mask:l,maskIsAlpha:!1,pixels:[...t.pixels]})}function h$3(t,e,n){if(!t)return t;const{width:a,height:h}=t,o=e.width/a,r=e.height/h,{xmin:x,ymax:l}=e;let m;if("extent"===n.type){const t=(n.xmin-x)/o,e=(n.xmax-x)/o,i=(l-n.ymax)/r,a=(l-n.ymin)/r;m=[[[t,i],[t,a],[e,a],[e,i],[t,i]]];}else m=n.rings.map((t=>t.map((([t,e])=>[(t-x)/o,(l-e)/r]))));const s=document.createElement("canvas");s.width=a,s.height=h;const p=s.getContext("2d");p.fillStyle="#f00",p.beginPath(),m.forEach((t=>{p.moveTo(t[0][0],t[0][1]);for(let e=0;e<t.length;e++)p.lineTo(t[e][0],t[e][1]);p.closePath();})),p.fill();const f=p.getImageData(0,0,a,h).data,y=t.mask,c=a*h,M=new Uint8Array(c);for(let i=0;i<c;i++)y&&!y[i]||(M[i]=f[4*i+3]>127?255:0);return new g$3({pixelType:t.pixelType,width:a,height:h,mask:M,maskIsAlpha:!1,pixels:[...t.pixels]})}function o$2(t,e,n){const{width:a,height:h}=t,o=new Uint8Array(a*h),r=e.width/a,x=e.height/h;if(n.width/r<.5||n.height/x<.5)return new g$3({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]});const{xmin:l,xmax:m,ymin:s,ymax:p}=e,{xmin:f,xmax:y,ymin:c,ymax:M}=n,u=Math.max(l,f),w=Math.min(m,y),d=Math.max(s,c),g=Math.min(p,M),T=.5*r,k=.5*x;if(w-u<T||g-d<k||w<l+T||u>m-T||d>p-k||g<s+k)return new g$3({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]});const A=Math.max(0,(u-l)/r),R=Math.min(a,Math.max(0,(w-l)/r)),U=Math.max(0,(p-g)/x),j=Math.min(h,Math.max(0,(p-d)/x)),E=Math.round(A),I=Math.round(R)-1,P=Math.round(U),v=Math.round(j)-1;if(E===I&&A%1>.5&&R%1<.5||P===v&&U%1>.5&&j%1<.5)return new g$3({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]});if(0===E&&0===P&&I===a&&v===h)return t;const b=t.mask;for(let i=P;i<=v;i++)for(let t=E;t<=I;t++){const e=i*a+t;o[e]=b?b[e]:255;}return new g$3({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]})}function r$2(t,e,n){const{width:a,height:h}=t,o=new Uint8Array(a*h),r=e.width/a,x=e.height/h,{xmin:l,ymax:m}=e,{paths:s}=n,p=t.mask;for(let i=0;i<s.length;i++){const t=s[i];for(let e=0;e<t.length-1;e++){const[i,n]=t[e],[s,f]=t[e+1];let y=Math.floor((m-n)/x),c=Math.floor((m-f)/x);if(c<y){const t=y;y=c,c=t;}y=Math.max(0,y),c=Math.min(h-1,c);const M=(s-i)/(f-n);for(let t=y;t<=c;t++){const e=t===y?Math.max(n,f):(h+1-t)*x,m=t===c?Math.min(n,f):e-x;let u=f===n?Math.floor((i-l)/r):Math.floor((M*(e-n)+i-l)/r),w=f===n?Math.floor((s-l)/r):Math.floor((M*(m-n)+i-l)/r);if(w<u){const t=u;u=w,w=t;}const d=t*a;u=Math.max(0,u),w=Math.min(a-1,w);for(let t=d+u;t<=d+w;t++)o[t]=p?p[t]:255;}}}return new g$3({pixelType:t.pixelType,width:a,height:h,mask:o,pixels:[...t.pixels]})}function x$1(t,i,a,h=!0){const{spatialReference:o}=t,{x:r,y:x}=n$2(a,o);let l,m,s;const p="extent"===i.type?i:i.extent;let{xmin:f,xmax:y,ymax:c,ymin:M}=p;const{xmin:u,ymax:w}=t.extent;return h?(f=u+(f>u?r*Math.round((f-u)/r):0),c=w-(c<w?x*Math.round((w-c)/x):0),y=u+(y>u?r*Math.round((y-u)/r):0),M=w-(M<w?x*Math.round((w-M)/x):0),l=new w$1({xmin:f,ymax:c,xmax:y,ymin:M,spatialReference:o}),m=Math.round(l.width/r),s=Math.round(l.height/x)):(m=Math.floor((y-f)/r+.8),s=Math.floor((c-M)/x+.8),f=u+(f>u?r*Math.floor((f-u)/r+.1):0),c=w-(c<w?x*Math.floor((w-c)/x+.1):0),y=f+m*r,M=c-s*x,l=new w$1({xmin:f,ymax:c,xmax:y,ymin:M,spatialReference:o})),{extent:l,width:m,height:s}}

const p$2=40;let m$3=class m extends K{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map;}async open(t){await this.init();const{rasterFunction:r}=this;this.primaryRasters?.rasters?.length?r.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach((t=>t.rasterJobHandler=this.rasterJobHandler)));const{rasters:s$1,rasterIds:i}=this.primaryRasters,o=s$1.map((e=>e.rasterInfo?void 0:e.open(t)));await Promise.all(o);const n=s$1.map((({rasterInfo:t})=>t)),a=r.bind({rasterInfos:n,rasterIds:i});if(r.rawSourceRasterInfos=n,!a.success||0===n.length)throw new s("raster-function:open",`cannot bind the function: ${a.error??""}`);const l="Table"===r.functionName?r:r.functionArguments?.raster;"Table"===l?.functionName&&(r.rasterInfo.attributeTable=d$3.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const p=n[0];this.hasUniqueSourceStorageInfo=1===n.length||n.slice(1).every((t=>h$2(t,p))),this.set("sourceJSON",s$1[0].sourceJSON),this.set("rasterInfo",r.rasterInfo),await this._updateClipGeometry();}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(t,e,r,s={}){const{rasters:i,rasterIds:o}=this.primaryRasters;let l=!1;const{interpolation:c}=s,p=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!s.requestRawData&&p&&(l=1===i.length&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:l});const m=i.map((i=>i.fetchPixels(t,e,r,s))),u=await Promise.all(m),h=u.map((t=>t.pixelBlock)),f=l||s.requestRawData?u.map((t=>t.srcTilePixelSize)):null;if(s.skipRasterFunction||h.every((t=>null==t)))return u[0];const d=u.find((t=>null!=t.pixelBlock))?.extent??t;let y=this.rasterJobHandler?await this.rasterJobHandler.process({extent:d,primaryPixelBlocks:h,primaryPixelSizes:f,primaryRasterIds:o}):this.rasterFunction.process({extent:d,primaryPixelBlocks:h,primaryPixelSizes:f,primaryRasterIds:o});const{transformGrid:g}=u[0];if(!l||null==y||null==g){const t=s.noClip?null:this.getClippingGeometry(d.spatialReference);return s.noClip||s.requestRawData||null==y||!t||(y=await a(y,d,t)),{...u[0],pixelBlock:y}}const x={rows:g.spacing[0],cols:g.spacing[1]};let R;if(this.rasterJobHandler){R=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[y],srcMosaicSize:{width:y.width,height:y.height},destDimension:{width:e,height:r},coefs:g.coefficients,sampleSpacing:x,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:c,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock;}else R=D$3(y,{width:e,height:r},g.coefficients,x,c);const w=s.noClip?null:this.getClippingGeometry(t.spatialReference);return s.noClip||s.requestRawData||null==R||null==w||(R=await a(R,t,w)),{extent:t,srcExtent:u[0].srcExtent,pixelBlock:R}}getClippingGeometry(t){const e=this._clippingGeometry.get("0");if(!t||!e)return e;const r=f$2(t);let s=this._clippingGeometry.get(r);return null!=s||(s=t.equals(e.spatialReference)?e:U$3(e,t),this._clippingGeometry.set(r,s)),s}async _updateClipGeometry(){const t=this.rasterFunction.getClippingGeometries()[0];let e=t?.clippingGeometry;if(e&&"inside"===t.clippingType){const{extent:t}=this.rasterInfo,{difference:r,densify:s}=await __vitePreload(async () => { const {difference:r,densify:s} = await import('./geometryEngine-_yTykaYs.js');return {difference:r,densify:s}},true?__vite__mapDeps([0,1,2,3,4,5]):void 0,import.meta.url);let o=s(j$2.fromExtent(t),2*(t.width+t.height)/p$2);o=U$3(o,e.spatialReference),e=r(o,e);}this._clippingGeometry.clear(),e&&this._clippingGeometry.set("0",e);}};e$1([y$2({type:String,json:{write:!0}})],m$3.prototype,"datasetFormat",void 0),e$1([y$2()],m$3.prototype,"tileType",void 0),e$1([y$2()],m$3.prototype,"rasterFunction",void 0),e$1([y$2()],m$3.prototype,"primaryRasters",void 0),m$3=e$1([a$2("esri.layers.support.rasterDatasets.FunctionRaster")],m$3);const u$4=m$3;function h$2(t,e){const{storageInfo:r,pixelSize:s,spatialReference:i,extent:o}=t,{storageInfo:n,pixelSize:a,spatialReference:l,extent:c}=e;return s.x===a.x&&s.y===a.y&&i.equals(l)&&o.equals(c)&&r.blockHeight===n.blockHeight&&r.blockWidth===n.blockWidth&&r.maximumPyramidLevel===n.maximumPyramidLevel}function f$2(t){return String(t.wkid??t.wkt??t.wkt2)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const V=V=>{let $=class extends V{constructor(...e){super(...e),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===e[0]?.raster?.datasetFormat;}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer();}set rasterFunction(e){"none"===e?.functionName?.toLowerCase()&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction();}get rasterInfo(){return i$4(n$4.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(e){this._set("url",y$1(e,n$4.getLogger(this)));}set renderer(e){null==e&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",e),this.updateRenderer());}readRenderer(e,t,r){const s=t?.layerDefinition?.drawingInfo?.renderer;return c$3(s,r)||void 0}async convertVectorFieldData(e,t){const{serviceRasterInfo:r}=this;if(null==e||!r)return null;const i=this._rasterJobHandler.instance,s=r.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:s},t):f$5(e,s)}async computeStatisticsHistograms(e,t){await this.load(t),e=g$2(h$6,e).clone();const{serviceRasterInfo:r}=this;if(null==r)throw new s("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:i}=e;if(null==i)throw new s("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let s$1=i;const{spatialReference:n}=r;i.spatialReference.equals(n)||(await T(),s$1="extent"===i.type?J(i,n):U$3(i,n));const a$1=e.pixelSize??new _$2({x:r.pixelSize.x,y:r.pixelSize.y,spatialReference:n}),{extent:l,width:c,height:m}=x$1(r,s$1,a$1),d=await this.fetchPixels(l,c,m,{...t,interpolation:"nearest"});if(null==d.pixelBlock)throw new s("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const h=await a(d.pixelBlock,l,s$1),p=this._rasterJobHandler.instance;return p?p.computeStatisticsHistograms({pixelBlock:h},t):m$6(h)}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):s$2(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.serviceRasterInfo??{};if(null==t)return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;r?.length||(r=d$5(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const i=e.timeExtent||this.timeExtent;if(null!=r&&null!=i&&(null!=i.start||null!=i.end)){r=r.map((e=>e.clone()));const s=t.variables.find((({name:e})=>e===r[0].variableName))?.dimensions?.find((({name:e})=>"StdTime"===e)),n=r.find((({dimensionName:e})=>"StdTime"===e));if(!s||!n)return {...e,multidimensionalDefinition:null};const{start:o,end:a}=i,l=null==o?null:o.getTime(),u=null==a?null:a.getTime(),c=l??u,m=u??l;if(null!=s.values){const e=s.values.filter((e=>{if(Array.isArray(e)){if(c===m)return e[0]<=c&&e[1]>=c;const t=e[0]<=c&&e[1]>c||e[0]<m&&e[1]>=m,r=e[0]>=c&&e[1]<=m||e[0]<c&&e[1]>m;return t||r}return c===m?e===c:e>=c&&e<=m}));if(e.length){const t=e.sort(((e,t)=>{const r=Array.isArray(e)?e[0]:e,i=Array.isArray(e)?e[1]:e,s=Array.isArray(t)?t[0]:t,n=Array.isArray(t)?t[1]:t;if(c===m)return r-s;return Math.abs(i-m)-Math.abs(n-m)}))[0];n.values=[t];}else r=null;}else if(s.hasRegularIntervals&&s.extent){const[e,t]=s.extent;c>t||m<e?r=null:n.values=c===m?[c]:[Math.max(e,c),Math.min(t,m)];}}return null!=r&&o$4(r,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:r}}async updateRasterFunction(){if(!this.loaded||"imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){const e=this.raster.rasterFunction.toJSON();return !this.rasterFunction&&e&&this._set("rasterFunction",N.fromJSON(e)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let e,t=this.raster,r=!1;"Function"===t.datasetFormat?(e=t.primaryRasters.rasters,t=e[0],r=!0):e=[t];const{rasterFunction:i}=this;if(i){const r={raster:t};e.length>1&&e.forEach((e=>r[e.url]=e));const s=S$2(i.functionDefinition?.toJSON()??i.toJSON(),r),n=new u$4({rasterFunction:s});n.rasterJobHandler=this._rasterJobHandler.instance,await n.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=n;}else this.raster=t,this._cachedRasterFunctionJson=null,await t.when();if(this._cachedRendererJson=null,!r&&!i)return;const{bandIds:s}=this,{bandCount:n}=this.raster.rasterInfo,o=s?.length?s.some((e=>e>=n)):n>=3;s&&(o||this.renderer&&"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto");}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t||!this.renderer)return;const{rasterInfo:r}=this.raster,i=f$6(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),s=i?.name,n=$$1({...this.renderer.toJSON(),variableName:s});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(n))return;const o=this._rasterJobHandler.instance;o&&(t.rasterInfo=W$1(r,s),t.rendererJSON=n,t.bind(),await o.updateSymbolizer(t),this._cachedRendererJson=n);}async applyRenderer(e,t){const r=e?.pixelBlock;if(!(null!=r&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const s=this._rasterJobHandler.instance,n=this.bandIds??[];return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),i}getTileUrl(e,t,r){return "RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""}getCompatibleTileInfo(e,t,r=!1){if(!this.loaded||null==t)return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const i=s$3(e);return z.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,i={}){if(G(this),i.requestAsImageElement){const n=this.getTileUrl(e,t,r);return U$2(n,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:i.signal}).then((e=>e.data))}const{serviceRasterInfo:n}=this;if(null!=n.multidimensionalInfo&&null==(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition){const s=i.tileInfo||n.storageInfo.tileInfo;return {extent:this.raster.getTileExtentFromTileInfo(e,t,r,s),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),"raster-shaded-relief"===this.renderer?.type&&(i={...i,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,r,i)}async fetchPixels(e,t,r,i={}){return null!=this.serviceRasterInfo.multidimensionalInfo&&null==(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),t=Math.round(t),r=Math.round(r),this.raster.fetchPixels(e,t,r,i))}async identify(e,t={}){await this.load();const{raster:r,serviceRasterInfo:i}=this;if(null!=i?.multidimensionalInfo){if(!(i.hasMultidimensionalTranspose&&!!(h$4(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&null==(t=this.normalizeRasterFetchOptions(t)).multidimensionalDefinition)return {location:e,value:null}}const s$1=this.multidimensionalSubset?.areaOfInterest;if(s$1&&!s$1.contains(e))throw new s("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return r.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++;}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler();}hasStandardTime(){const e=this.serviceRasterInfo?.multidimensionalInfo;if(null==e||"standard-time"!==this.serviceRasterInfo?.dataType)return !1;const t=this.multidimensionalDefinition,r=t?.[0]?.variableName;return e.variables.some((e=>e.name===r&&(!t?.[0].dimensionName||e.dimensions.some((e=>"StdTime"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo?.multidimensionalInfo;return g$4(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=d$5(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer();}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new t$2;return this._rasterJobHandler.connectionPromise=e.initialize().then((async()=>{G(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch((()=>{})),this.renderer&&this.updateRenderer();})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null);}_configDefaultInterpolation(){if(null==this.interpolation){G(this);const{raster:e}=this,t=q(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",t);}}_configDefaultRenderer(e="no"){G(this);const{rasterInfo:t}=this.raster;!this.bandIds&&t.bandCount>1&&(this.bandIds=U$4(t));const r=f$6(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),i=r?.name,s=E(this.raster);if(!this.renderer||"override"===e){const e=L(t,{bandIds:this.bandIds,variableName:i,rasterFunctionColorRamp:s}),r=t.statistics,n=r&&r.length>0?r[0]:null,o=n?.max??0,a=n?.min??0;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===e.type&&(o>1e24||a<-1e24)&&(e.dynamicRangeAdjustment=!0,e.statistics=null,"none"===e.stretchType&&(e.stretchType="min-max")),this.renderer=e;}const n=$$1({...this.renderer.toJSON(),variableName:i}),o=W$1(t,i);this.symbolizer?(this.symbolizer.rendererJSON=n,this.symbolizer.rasterInfo=o):this.symbolizer=new L$1({rendererJSON:n,rasterInfo:o});const l=this.symbolizer.bind();if(l.success){if("auto"===e){const{colormap:e}=this.raster.rasterInfo,t=this.renderer;if(null!=e&&"raster-colormap"===t.type){const e=L(this.raster.rasterInfo);JSON.stringify(e)!==JSON.stringify(t)&&this._configDefaultRenderer("override");}else if("raster-stretch"===t.type){const e=this.bandIds?.length,r=t.statistics?.length;!t.dynamicRangeAdjustment&&r&&e&&r!==e&&this._configDefaultRenderer("override");}}}else n$4.getLogger(this).warn("imagery-tile-mixin",l.error||"The given renderer is not supported by the layer."),"auto"===e&&this._configDefaultRenderer("override");}};function G(e){if(!e.raster||!e.serviceRasterInfo)throw new s("imagery-tile","no raster")}return e$1([y$2({clonable:!1})],$.prototype,"_cachedRendererJson",void 0),e$1([y$2({clonable:!1})],$.prototype,"_cachedRasterFunctionJson",void 0),e$1([y$2({clonable:!1})],$.prototype,"_compatibleFullExtent",void 0),e$1([y$2({clonable:!1})],$.prototype,"_isConstructedFromFunctionRaster",void 0),e$1([y$2({clonable:!1})],$.prototype,"_rasterJobHandler",void 0),e$1([y$2()],$.prototype,"bandIds",void 0),e$1([y$2({json:{origins:{service:{read:{source:"copyrightText"}}}}})],$.prototype,"copyright",void 0),e$1([y$2({json:{read:!1}})],$.prototype,"fullExtent",null),e$1([y$2()],$.prototype,"interpolation",void 0),e$1([y$2()],$.prototype,"ioConfig",void 0),e$1([y$2({type:[p$4],json:{write:!0}})],$.prototype,"multidimensionalDefinition",null),e$1([y$2({type:c$2,json:{write:!0}})],$.prototype,"multidimensionalSubset",void 0),e$1([y$2()],$.prototype,"raster",void 0),e$1([y$2({type:N,json:{name:"renderingRule",write:!0}})],$.prototype,"rasterFunction",null),e$1([y$2({readOnly:!0})],$.prototype,"rasterInfo",null),e$1([y$2()],$.prototype,"serviceRasterInfo",void 0),e$1([y$2()],$.prototype,"sourceJSON",void 0),e$1([y$2({readOnly:!0,type:f$3,json:{read:!1}})],$.prototype,"spatialReference",void 0),e$1([y$2({type:z})],$.prototype,"tileInfo",void 0),e$1([y$2(p$5)],$.prototype,"url",null),e$1([y$2({types:l$3,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return {enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:d$4,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],$.prototype,"renderer",null),e$1([o$3("renderer")],$.prototype,"readRenderer",null),e$1([y$2({clonable:!1})],$.prototype,"symbolizer",void 0),$=e$1([a$2("esri.layers.mixins.ImageryTileMixin")],$),$};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
function i$1(e){return ["x","e","east","long","longitude"].includes(e.toLowerCase())}function r$1(e){return ["y","n","west","lat","latitude"].includes(e.toLowerCase())}function o$1(e){const{axes:n}=e.domain,l=Object.keys(n),s=[],o=[];let u=-1,m=-1,c=[];for(let t=0;t<l.length;t++){const e=l[t];i$1(e)?u=t:r$1(e)&&(m=t);const a=n[e],d=[];if("values"in a){a.values.forEach((e=>d.push("string"==typeof e?new Date(e).getTime():e)));const e=d[1]-d[0];s.push([d[0]-.5*e,d[d.length-1]+.5*e]),o.push(e);}else {const{start:e,stop:t,num:n}=a,l=(t-e)/(n-1);s.push([e-.5*l,t+.5*l]),o.push(l);for(let s=0;s<n;s++)d.push(e+l*s);}c.push({name:e,values:d,extent:[d[0],d[d.length-1]]});}u>-1&&-1===m?m=0===u?1:0:m>-1&&-1===u?u=0===m?1:0:-1===m&&-1===u&&(u=0,m=1),c=c.filter(((e,t)=>!(t===u||t===m)));const{referencing:d}=e.domain,f=d.find((e=>e.coordinates.includes(l[u]))).system.id,p=f?.slice(f.lastIndexOf("/")+1),h=null==p||"CRS84"===p?4326:Number(p),g=new f$3({wkid:h}),[b,y]=s[u],[x,j]=s[m],v=new w$1({xmin:b,xmax:y,ymin:x,ymax:j,spatialReference:g});return {width:Math.round(v.width/o[u]),height:Math.round(v.height/o[m]),extent:v,dimensions:c}}function u$3(e){const t=a$3();return t?e[t]??Object.values(e)[0]:Object.values(e)[0]}function m$2(){return Math.round(255*Math.random())}function c$1(t){const n={},{parameters:l}=t;if(!l)return n;for(const[s,a]of Object.entries(l)){const{type:t,description:l,unit:i,categoryEncoding:r,observedProperty:o}=a;if("Parameter"===t&&(n[s]={},l&&(n[s].description=u$3(l)),i&&(n[s].unit=i.label?u$3(i.label):null,n[s].symbol=i.symbol?.value),r)){const t=Object.entries(r).map(((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1})));let l=!1;o?.categories?.length&&(o.categories.forEach((n=>{if(!n.id)return;const s=n.id.slice(n.id.lastIndexOf("/")+1),a=t.find((e=>e.ClassName===s));if(!a)return;const i=n.label?u$3(n.label):null;if(a.Label=i,n.preferredColor){const t=u$6.fromHex(n.preferredColor);t&&(l=!0,a.Red=t.r,a.Green=t.g,a.Blue=t.b);}})),l&&t.forEach((e=>{null==e.Red&&(e.Red=m$2(),e.Green=m$2(),e.Blue=m$2());})));const a={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:t.map((e=>({attributes:e})))};l&&a.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),n[s].attributeTable=a;}}return n}function d$2(e){let t=Number.MAX_VALUE,n=-Number.MAX_VALUE;for(let l=0;l<e.length;l++){const s=e[l];null!=s&&(s<t&&(t=s),s>n&&(n=s));}return u$7(t,n)}function f$1(e,t,n){const l=e.map(((e,n)=>({name:e,count:t[n]}))).sort(((e,t)=>e.name>t.name?-1:1)),s=(a=1,e=>a*=e.count);var a;const i=[...l.slice(1),{name:"",count:1}].reverse().map(s).reverse();let r=0;for(let o=e.length-1;o>=0;o--){r+=i[l.findIndex((({name:t})=>t===e[o]))]*(n%t[o]),n=Math.floor(n/t[o]);}return r}function p$1(e){const{width:t,height:n,extent:s,dimensions:a}=o$1(e),{ranges:i}=e,r=Object.keys(i).sort(((e,t)=>e<t?-1:1)),u=[];for(let l=0;l<r.length;l++){const e=r[l];a?.length&&u.push({name:e,dimensions:a});}const m=c$1(e);u.forEach((e=>m[e.name]&&Object.assign(e,m[e.name])));const p=u.length?{variables:u}:void 0,h=[];for(let o=0;o<r.length;o++){const e=r[o],{values:s,dataType:u,axisNames:m,shape:c}=i[e],p=c.length>2?o*c.slice(0,-2).reduce(((e,t)=>e*t)):0,g=m.slice(0,-2),b=c.slice(0,-2),y="float"===u?"f32":d$2(s),x=t*n,j=s.length/x;for(let i=0;i<j;i++){const e=g$3.createEmptyBand(y,x),r=new Uint8Array(x).fill(255);let u=!1;const m=i*x;for(let t=0;t<x;t++){const n=s[m+t];null==n?(r[t]=0,u=!0):e[t]=n;}if(0===o||a?.length){const s=new g$3({width:t,height:n,mask:u?r:null,pixels:[e],pixelType:y});if(s.updateStatistics(),a?.length){h[f$1(g,b,i)+p]=s;}else h.push(s);}else {const t=h[i];t.pixels.push(e),u?t.mask&&(t.mask=g$3.combineBandMasks([t.mask,r])):t.mask=u?r:null;}}}const g=Object.values(m).find((e=>e.attributeTable))?.attributeTable;return {extent:s,pixelBlocks:h,multidimensionalInfo:p,attributeTable:g,bandNames:p?void 0:r}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let f=class extends K{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null;}get url(){return ""}async open(t){await this.init();const e=this.source,{pixelBlocks:s,attributeTable:i,statistics:r,histograms:o,name:l,nativeExtent:n,transform:m}=e,c=s[0],{width:p,height:u,pixelType:f}=c,g=e.extent??new w$1({xmin:-.5,ymin:.5,xmax:p-.5,ymax:u-.5,spatialReference:new f$3({wkid:3857})}),x=e.isPseudoSpatialReference??!e.extent,y={x:g.width/p,y:g.height/u},b={...e.keyProperties};i&&(b.DataType="Thematic");const v=new m$7({width:p,height:u,pixelType:f,extent:g,nativeExtent:n,attributeTable:i,transform:m,pixelSize:y,spatialReference:g.spatialReference,bandCount:c.pixels.length,keyProperties:b,multidimensionalInfo:e.multidimensionalInfo,statistics:r,isPseudoSpatialReference:x,histograms:o});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(v),this.createRemoteDatasetStorageInfo(v,512,512),this._set("rasterInfo",v),this.updateTileInfo(),v.multidimensionalInfo?await this._buildMDimStats(e.pixelBlocks,v.multidimensionalInfo):await this._buildInMemoryRaster(c,{width:512,height:512},t),v.multidimensionalInfo||(this.source=null),this.datasetName=l;}fetchRawTile(t,e,s,i={}){if(!this._pixelBlockTiles){const{rasterInfo:r}=this,[o,a]=r.storageInfo.tileInfo.size,{sliceId:l}=i,{pixelBlocks:n}=this.source,c={pixelBlock:null==l?n[0]:n[l],useBilinear:"thematic"!==r.dataType,tileSize:{width:o,height:a},level:t,row:e,col:s},p=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,i):E$1(c);return Promise.resolve(p)}const r=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(r)}async _buildInMemoryRaster(t,i,r){const{rasterInfo:o}=this,a=o.storageInfo.maximumPyramidLevel??0,l="thematic"!==o.dataType,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:i,maximumPyramidLevel:a,useBilinear:l},r):Promise.resolve(W$2(t,i,a,l)),m=null!=o.statistics,u=null!=o.histograms,h=this.ioConfig.skipStatistics||m?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve(h$7(t)),d=await v$2([n,h]);if(!d[0].value&&d[1].value)throw new s("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=d[0].value,m||(o.statistics=d[1].value?.statistics),u||(o.histograms=d[1].value?.histograms);}async _buildMDimStats(t,e,s){for(let i=0;i<e.variables.length;i++){const r=e.variables[i];if(r.statistics)continue;const a=r.dimensions.map((t=>new p$4({variableName:r.name,dimensionName:t.name,values:[t.values?.[0]??t.extent?.[0]],isSlice:!0}))),l=D$2(a,e),m=null==l?null:t[l];if(null==m)continue;const c=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:m},s):m$6(m);r.statistics=c.statistics,r.histograms||(r.histograms=c.histograms);}}};e$1([y$2({type:String,json:{write:!0}})],f.prototype,"datasetFormat",void 0),e$1([y$2()],f.prototype,"source",void 0),e$1([y$2()],f.prototype,"url",null),f=e$1([a$2("esri.layers.support.rasterDatasets.InMemoryRaster")],f);const g$1=f;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let m$1=class m extends K{constructor(){super(...arguments),this.datasetFormat="CovJSON";}async open(e){await this.init();const{extent:t,pixelBlocks:r,multidimensionalInfo:s,attributeTable:a,bandNames:o}=await this._fetchData(e),{statistics:i,histograms:n}=m$6(r[0]),m=o?.map((e=>({BandName:e}))),h={DataType:a?"Thematic":s?"Scientific":"Generic",BandProperties:m},d=new g$1({source:{extent:t,pixelBlocks:r,attributeTable:a?d$3.fromJSON(a):null,multidimensionalInfo:s,statistics:i,histograms:n,keyProperties:h,isPseudoSpatialReference:!1}});await d.open(),this._inMemoryRaster=d;const u=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",u.slice(0,u.indexOf("."))),this._set("rasterInfo",d.rasterInfo);}fetchRawTile(e,t,r,s={}){return this._inMemoryRaster.fetchRawTile(e,t,r,s)}async _fetchData(e){const r=this.source??(await this.request(this.url,{signal:e?.signal})).data,s$1="imagery-tile-layer:open-coverage-json";if("coverage"!==r.type?.toLowerCase()||"grid"!==r.domain?.domainType?.toLowerCase())throw new s(s$1,"Only coverage with Grid domain type is supported");if(!r.ranges)throw new s(s$1,"Missing ranges in the grid coverage data");if(!r.domain.referencing?.length)throw new s(s$1,"Missing domain referencing in the grid coverage data");const a=Object.values(r.ranges);for(let n=0;n<a.length;n++){const{axisNames:e,shape:r,type:c,values:l}=a[n];if(!("ndarray"===c.toLowerCase()&&l?.length&&e?.length&&r?.length))throw new s(s$1,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(i$1(e[e.length-1])&&r$1(e[e.length-2])))throw new s(s$1,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return p$1(r)}};e$1([y$2({type:String,json:{write:!0}})],m$1.prototype,"datasetFormat",void 0),e$1([y$2({constructOnly:!0})],m$1.prototype,"source",void 0),m$1=e$1([a$2("esri.layers.support.rasterDatasets.CovJSONRaster")],m$1);const h$1=m$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
function n$1(e,t){if(!e||!t)return [];let l=t;t.includes("/")?(l=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const u=n$1(e,l);for(let e=0;e<u.length;e++){n$1(u[e],t).forEach((n=>r.push(n)));}return r}const u=e.getElementsByTagNameNS("*",l);if(!u||0===u.length)return [];for(let n=0;n<u.length;n++)r.push(u[n]||u.item(n));return r}function e(t,l){if(!t||!l)return null;let r=l;l.includes("/")?(r=l.slice(0,l.indexOf("/")),l=l.slice(l.indexOf("/")+1)):l="";const u=n$1(t,r);return u.length>0?l?e(u[0],l):u[0]:null}function t$1(n,t=null){const l=t?e(n,t):n;let r;return l?(r=l.textContent||l.nodeValue,r?r.trim():null):null}function l(e,t){const l=n$1(e,t),r=[];let u;for(let n=0;n<l.length;n++)u=l[n].textContent||l[n].nodeValue,u&&(u=u.trim(),""!==u&&r.push(u));return r}function u$2(n,e){return l(n,e).map((n=>Number(n)))}function o(n,e){const l=t$1(n,e);return Number(l)}function i(n,e){const t=n?.nodeName?.toLowerCase(),l=e.toLowerCase();return t.slice(t.lastIndexOf(":")+1)===l}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
function u$1(e,t){if(!e||!t)return null;const n=[];for(let r=0;r<e.length;r++)n.push(e[r]),n.push(t[r]);return n}function c(e$1){const t=e(e$1,"GeodataXform"),n=d$1(o(t,"SpatialReference/WKID")||t$1(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return {spatialReference:n,transform:null};const s=o(t,"PolynomialOrder")??1,f=u$2(t,"CoeffX/Double"),c=u$2(t,"CoeffY/Double"),m=u$2(t,"InverseCoeffX/Double"),p=u$2(t,"InverseCoeffY/Double"),S=u$1(f,c),C=u$1(m,p);return {spatialReference:n,transform:S&&C&&S.length&&C.length?new y$3({spatialReference:n,polynomialOrder:s,forwardCoefficients:S,inverseCoefficients:C}):null}}function m(e$1){const t=o(e$1,"NoDataValue"),n=e(e$1,"Histograms/HistItem"),l=o(n,"HistMin"),o$1=o(n,"HistMax"),f=o(n,"BucketCount"),u=t$1(n,"HistCounts")?.split("|").map((e=>Number(e)));let c,m,d,p;n$1(e$1,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":c=t;break;case"STATISTICS_MAXIMUM":m=t;break;case"STATISTICS_MEAN":d=t;break;case"STATISTICS_STDDEV":p=t;}}));const S=o(e$1,"Metadata/SourceBandIndex");return {noDataValue:t,histogram:u?.length&&null!=l&&null!=o$1?{min:l,max:o$1,size:f||u.length,counts:u}:null,sourceBandIndex:S,statistics:null!=c&&null!=m?{min:c,max:m,avg:d,stddev:p}:null}}function d$1(e){if(!e)return null;let n=Number(e);if(!isNaN(n)&&0!==n)return new f$3({wkid:n});if(e=String(e).trim(),c$4(e))return new f$3({wkt2:e});const r=e.toUpperCase();if(r.startsWith("COMPD_CS")){if(!r.includes("VERTCS")||!r.includes("GEOGCS")&&!r.startsWith("PROJCS"))return null;const t=r.indexOf("VERTCS"),s=r.indexOf("PROJCS"),a=s>-1?s:r.indexOf("GEOGCS");if(-1===a)return null;const i=e.slice(a,e.lastIndexOf("]",t)+1).trim(),l=e.slice(t,e.lastIndexOf("]")).trim();n=p(i);const o=new f$3(n?{wkid:n}:{wkt:i}),u=p(l);return u&&(o.vcsWkid=u),o}return r.startsWith("GEOGCS")||r.startsWith("PROJCS")?(n=p(e),new f$3(0!==n?{wkid:n}:{wkt:e})):null}function p(e){const t=e.replaceAll("]","[").replaceAll('"',"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=t[t.length-1].split(","),r=n[0]?.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function S$1(t){if("pamdataset"!==t?.documentElement.tagName?.toLowerCase())return {};const a={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(i(e,"SRS")){if(!a.spatialReference){const t=t$1(e);a.spatialReference=d$1(t);}}else if(i(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=c(e);a.transform=n,a.spatialReference||(a.spatialReference=t);}else {n$1(e,"MDI").forEach((e=>a.metadata[e.getAttribute("key")]=t$1(e)));}else if(i(e,"PAMRasterBand")){const t=m(e);null!=t.sourceBandIndex&&null==a.rasterBands[t.sourceBandIndex]?a.rasterBands[t.sourceBandIndex]=t:a.rasterBands.push(t);}}));const i$1=a.rasterBands;if(i$1.length){const t=!!i$1[0].statistics;a.statistics=t?i$1.map((e=>e.statistics)).filter(O):null;const n=!!i$1[0].histogram;a.histograms=n?i$1.map((e=>e.histogram)).filter(O):null;}return a}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let h=class extends K{async open(t){await this.init();const s=await this._fetchData(t);let{spatialReference:e,statistics:r,histograms:a,transform:o}=await this._fetchAuxiliaryData(t);const i=!e;i&&(e=new f$3({wkid:3857})),a?.length&&null==r&&(r=g$5(a));const{width:m,height:l}=s;let c=new w$1({xmin:-.5,ymin:.5-l,xmax:m-.5,ymax:.5,spatialReference:e});const h=o?o.forwardTransform(c):c;let d=!0;if(o){const t=o.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(o=null,c=h);}const w=new g$1({source:{extent:h,nativeExtent:c,transform:o,pixelBlocks:[s],statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:i},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(w.ioConfig.skipMapInfo=!0),await w.open(),w.source=null,this._set("rasterInfo",w.rasterInfo),this._inMemoryRaster=w;}fetchRawTile(t,s,e,r={}){return this._inMemoryRaster.fetchRawTile(t,s,e,r)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t?.signal}),r=P$1(e).toUpperCase();if("JPG"!==r&&"PNG"!==r&&"GIF"!==r&&"BMP"!==r)throw new s("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const a=r.toLowerCase(),o="gif"===a||"bmp"===a||!has("ios"),i=await this.decodePixelBlock(e,{format:a,useCanvas:o,hasNoZlibMask:!0});if(null==i)throw new s("image-aux-raster:open","the data cannot be decoded");return i}async _fetchAuxiliaryData(t){const s=t?.signal,{skipExtensions:a=[],skipMapInfo:o}=this.ioConfig,i=o||a.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:s}),n=this.datasetFormat,l="JPG"===n?"jgw":"PNG"===n?"pgw":"BMP"===n?"bpw":null,p=l&&a.includes(l)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:s}),f=await v$2([i,p]);if(s?.aborted)throw u$8();const u=S$1(f[0].value?.data);if(!u.transform){const t=f[1].value?f[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;u.transform=6===t?.length?new y$3({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null;}return u}};e$1([y$2({type:String,json:{write:!0}})],h.prototype,"datasetFormat",void 0),h=e$1([a$2("esri.layers.support.rasterDatasets.ImageAuxRaster")],h);const d=h;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let g=class extends K{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null;}async open(e){await this.init();const r=e?.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:r});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const l=a.data;if(this.sourceJSON=l,!l)throw new s("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!l.tileInfo)throw new s("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const m=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=l.cacheType,null==this.tileType&&(m.includes(l.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===l.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=l.name?.slice(l.name.indexOf("/")+1)??"";const u=await this._fetchRasterInfo({signal:r});if(null==u)throw new s("image-server-raster:open","cannot initialize image service");c$5(u,l);const h="Map"===this.tileType?v$1(l.tileInfo,l):z.fromJSON(l.tileInfo);n$6(h);const[p,d]=this._computeMinMaxLOD(u,h),{extent:y,pixelSize:x}=u,g=.5/u.width*x.x,I=Math.max(x.x,x.y),{lods:w}=h;("Map"!==this.tileType&&0!==l.maxScale||Math.abs(x.x-x.y)>g||!w.some((e=>Math.abs(e.resolution-I)<g)))&&(x.x=x.y=p.resolution,u.width=Math.ceil((y.xmax-y.xmin)/x.x-.1),u.height=Math.ceil((y.ymax-y.ymin)/x.y-.1));const j=p.level-d.level,[M,b]=h.size,T=[],_=[];w.forEach(((e,t)=>{e.level>=d.level&&e.level<=p.level&&T.push({x:e.resolution,y:e.resolution}),t<w.length-1&&_.push(Math.round(10*e.resolution/w[t+1].resolution)/10);})),T.sort(((e,t)=>e.x-t.x));const O=this.computeBlockBoundary(y,M,b,h.origin,T,j),R=T.length>1?T.slice(1):null;let z$1;l.transposeInfo&&(z$1={tileSize:[l.transposeInfo.rows,l.transposeInfo.cols],packetSize:u.keyProperties?._yxs.PacketSize??0});const N=_.length<=1||_.length>=3&&_.slice(0,-1).every((e=>e===_[0]))?_[0]??2:Math.round(10/(d.resolution/p.resolution)**(-1/j))/10;if(u.storageInfo=new n$5({blockWidth:h.size[0],blockHeight:h.size[1],pyramidBlockWidth:h.size[0],pyramidBlockHeight:h.size[1],pyramidResolutions:R,pyramidScalingFactor:N,compression:h.format,origin:h.origin,firstPyramidLevel:1,maximumPyramidLevel:j,tileInfo:h,transposeInfo:z$1,blockBoundary:O}),S(u),this._set("rasterInfo",u),l.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:u.storageInfo.tileInfo,parsedUrl:I$2(this.url),url:this.url,tileServers:[]};this._tilemapCache=new j$3({layer:e});}}async fetchRawTile(e,t,i,s={}){const{storageInfo:r,extent:a}=this.rasterInfo,{transposeInfo:l}=r,o=null!=l&&!!s.transposedVariableName;if(this._slices&&!o&&null==s.sliceId)return null;const n=o?0:r.maximumPyramidLevel-e+this._levelOffset,c=`${this.url}/tile/${n}/${t}/${i}`,m=this._slices?o?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:h}=await this.request(c,{query:m,responseType:"array-buffer",signal:s.signal});if(!h)return null;const f=o?l.tileSize:r.tileInfo.size,p=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(null==p)return null;const d=r.blockBoundary[e];if("jpg"!==r.compression||i>d.minCol&&i<d.maxCol&&t>d.minRow&&t<d.maxRow)return p;const{origin:y,blockWidth:x,blockHeight:g}=r,{x:v,y:S}=this.getPyramidPixelSize(e),I=Math.round((a.xmin-y.x)/v)%x,w=Math.round((a.xmax-y.x)/v)%x||x,j=Math.round((y.y-a.ymax)/S)%g,M=Math.round((y.y-a.ymin)/S)%g||g,b=i===d.minCol?I:0,T=t===d.minRow?j:0,_=i===d.maxCol?w:x,O=t===d.maxRow?M:g;return T$1(p,{x:b,y:T},{width:_-b,height:O-T}),p}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));if(!i)return !0;return (Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;})),r[1]?.[0]?.counts?.length||(r[1]=null),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let a=r-s+this._levelOffset;const l=i.srcLocation;for(;a>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(a,i.row,i.col,t))break}catch{}if(a--,s++,i=this.identifyPixelLocation(l,s,t.datumTransformation),null===i)return null}return -1===a||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=f$3.fromJSON(t.spatialReference||e.spatialReference),a=new _$2({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new m$7({width:i,height:s,bandCount:3,extent:w$1.fromJSON(e),spatialReference:r,pixelSize:a,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=f$7(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data?.slices)).catch((()=>null)):null,a=await Promise.all([s,r]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0);}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:r}=t,a=t.lodAt(Math.max.apply(null,r.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,r.map((e=>e.level)))),{tileType:o}=this;if("Map"===o)return this._levelOffset=r[0].level,[a,l];if("Raster"===o){return [r.find((e=>e.resolution===i.x))??a,l]}const{minScale:n,maxScale:c}=this.sourceJSON;let m=a;c>0&&(m=r.find((e=>Math.abs(e.scale-c)<s)),m||(m=r.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??a));let u=l;return n>0&&(u=r.find((e=>Math.abs(e.scale-n)<s))??l,this._levelOffset=u.level-l.level),[m,u]}};function v$1(e,t){if(!e)return null;const{minScale:i,maxScale:s,minLOD:r,maxLOD:a}=t;if(null!=r&&null!=a)return z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=r&&e<=a))});if(0!==i&&0!==s){const t=e=>Math.round(1e4*e)/1e4,r=i?t(i):1/0,a=s?t(s):-1/0;return z.fromJSON({...e,lods:e.lods.filter((e=>{const i=t(e.scale);return i<=r&&i>=a}))})}return z.fromJSON(e)}function S(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new c$6,e.extent=e.transform.forwardTransform(t));}e$1([y$2({type:String,json:{write:!0}})],g.prototype,"datasetFormat",void 0),e$1([y$2()],g.prototype,"tileType",void 0),g=e$1([a$2("esri.layers.support.rasterDatasets.ImageServerRaster")],g);const I$1=g;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const y=new Map;y.set("Int8","s8"),y.set("UInt8","u8"),y.set("Int16","s16"),y.set("UInt16","u16"),y.set("Int32","s32"),y.set("UInt32","u32"),y.set("Float32","f32"),y.set("Float64","f32"),y.set("Double64","f32");const x=new Map;x.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),x.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),x.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),x.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let w=class extends K{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF";}async open(t){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?t.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:s,files:o}=this._parseHeader(r.data),{skipMapInfo:i,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!i){const e=await this._fetchAuxiliaryData(t);null!=e&&(s.statistics=e.statistics??s.statistics,s.histograms=e.histograms,e.histograms&&null==s.statistics&&(s.statistics=g$5(e.histograms)));}i&&this.updateImageSpaceRasterInfo(s),this._set("rasterInfo",s),this._files=o;const n=await this.request(o.index,{responseType:"array-buffer",signal:e});this._storageIndex=I(n.data);const{blockWidth:l,blockHeight:f}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:m,height:p}=this.rasterInfo,u=[],g=this._getBandSegmentCount();let d=0,y=-1;for(;d<this._storageIndex.length;){y++;const t=Math.ceil(m/l/c**y)-1,e=Math.ceil(p/f/c**y)-1;d+=(t+1)*(e+1)*g*4,u.push({maxRow:e,maxCol:t,minCol:0,minRow:0});}this.rasterInfo.storageInfo.blockBoundary=u,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo();}async fetchRawTile(t,e,r,s={}){const{blockWidth:i,blockHeight:a,blockBoundary:n}=this.rasterInfo.storageInfo,l=n[t];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:f,pixelType:c}=this.rasterInfo,{ranges:m,actualTileWidth:p,actualTileHeight:h}=this._getTileLocation(t,e,r);if(!m||0===m.length)return null;if(0===m[0].from&&0===m[0].to){const t=new Uint8Array(i*a);return new g$3({width:i,height:a,pixels:void 0,mask:t,validPixelCount:0})}const{bandIds:u}=this.ioConfig,g=this._getBandSegmentCount(),d=[];let y=0;for(y=0;y<g;y++)u&&!u.includes(y)||d.push(this.request(this._files.data,{range:{from:m[y].from,to:m[y].to},responseType:"array-buffer",signal:s.signal}));const w=await Promise.all(d),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),b=new Uint8Array(I),R=[];let A=0;for(y=0;y<g;y++)R.push(A),b.set(new Uint8Array(w[y].data),A),A+=w[y].data.byteLength;const F=x.get(this.rasterInfo.storageInfo.compression).decoderFormat,S=await this.decodePixelBlock(b.buffer,{width:i,height:a,format:F,planes:u?.length||f,offsets:R,pixelType:c});if(null==S)return null;let{noDataValue:_}=this.rasterInfo;if(null!=_&&"lerc"!==F&&!S.mask&&(_=_[0],null!=_)){const t=S.width*S.height,e=new Uint8Array(t);if(Math.abs(_)>1e24)for(y=0;y<t;y++)Math.abs((S.pixels[0][y]-_)/_)>1e-6&&(e[y]=1);else for(y=0;y<t;y++)S.pixels[0][y]!==_&&(e[y]=1);S.mask=e;}let k=0,M=0;if(p!==i||h!==a){let t=S.mask;if(t)for(y=0;y<a;y++)if(M=y*i,y<h)for(k=p;k<i;k++)t[M+k]=0;else for(k=0;k<i;k++)t[M+k]=0;else for(t=new Uint8Array(i*a),S.mask=t,y=0;y<h;y++)for(M=y*i,k=0;k<p;k++)t[M+k]=1;}return S}_getBandSegmentCount(){return x.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i}=this.rasterInfo.storageInfo,{width:a,height:n}=this.rasterInfo,l=this._getBandSegmentCount();let f,c,m,p=0,h=0;for(m=0;m<t;m++)h=i**m,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=f*c;h=i**t,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=e*f+r,p*=4*l;const u=this._storageIndex.subarray(p,p+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=u[4*x]*2**32+u[4*x+1],d=g+u[4*x+2]*2**32+u[4*x+3],y.push({from:g,to:d});return {ranges:y,actualTileWidth:r<f-1?s:Math.ceil(a/h)-s*(f-1),actualTileHeight:e<c-1?o:Math.ceil(n/h)-o*(c-1)}}_parseHeader(t){const r=e(t,"MRF_META/Raster");if(!r)throw new s("mrf:open","not a valid MRF format");const s$1=e(r,"Size"),o=parseInt(s$1.getAttribute("x"),10),n=parseInt(s$1.getAttribute("y"),10),f=parseInt(s$1.getAttribute("c"),10),p=(t$1(r,"Compression")||"none").toLowerCase();if(!x.has(p))throw new s("mrf:open","currently does not support compression "+p);const h=t$1(r,"DataType")||"UInt8",w=y.get(h);if(null==w)throw new s("mrf:open","currently does not support pixel type "+h);const I=e(r,"PageSize"),b=parseInt(I.getAttribute("x"),10),R=parseInt(I.getAttribute("y"),10),A=e(r,"DataValues");let F,S;A&&(S=A.getAttribute("NoData"),null!=S&&(F=S.trim().split(" ").map((t=>parseFloat(t)))));if(e(t,"MRF_META/CachedSource"))throw new s("mrf:open","currently does not support MRF referencing other data files");const _=e(t,"MRF_META/GeoTags"),k=e(_,"BoundingBox");let M,j=!1;if(null!=k){const t=parseFloat(k.getAttribute("minx")),e=parseFloat(k.getAttribute("miny")),r=parseFloat(k.getAttribute("maxx")),s=parseFloat(k.getAttribute("maxy")),o=t$1(_,"Projection")||"";let i=f$3.WGS84;if("LOCAL_CS[]"!==o)if(o.toLowerCase().startsWith("epsg:")){const t=Number(o.slice(5));isNaN(t)||0===t||(i=new f$3({wkid:t}));}else i=d$1(o)??f$3.WGS84;else j=!0,i=new f$3({wkid:3857});M=new w$1(t,e,r,s),M.spatialReference=i;}else j=!0,M=new w$1({xmin:-.5,ymin:.5-n,xmax:o-.5,ymax:.5,spatialReference:new f$3({wkid:3857})});const C=e(t,"MRF_META/Rsets"),T=parseInt(C?.getAttribute("scale")||"2",10),L=M.spatialReference,U=new n$5({origin:new _$2({x:M.xmin,y:M.ymax,spatialReference:L}),blockWidth:b,blockHeight:R,pyramidBlockWidth:b,pyramidBlockHeight:R,compression:p,pyramidScalingFactor:T}),B=new _$2({x:M.width/o,y:M.height/n,spatialReference:L}),E=new m$7({width:o,height:n,extent:M,isPseudoSpatialReference:j,spatialReference:L,bandCount:f,pixelType:w,pixelSize:B,noDataValue:F,storageInfo:U}),P=t$1(t,"datafile"),W=t$1(t,"IndexFile");return {rasterInfo:E,files:{mrf:this.url,index:W||this.url.replace(".mrf",".idx"),data:P||this.url.replace(".mrf",x.get(p).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return S$1(e)}catch{return null}}};function I(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,s,o,i,a;if(r$3){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o);}else e=new Uint32Array(t);return e}e$1([y$2()],w.prototype,"_files",void 0),e$1([y$2()],w.prototype,"_storageIndex",void 0),e$1([y$2({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0),w=e$1([a$2("esri.layers.support.rasterDatasets.MRFRaster")],w);const b=w;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
function t(e){const t=e.fields,r=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=i.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t});})),{displayFieldName:"",fields:i,features:a}}class r{static get supportedVersions(){return [5]}static parse(r){const n=new DataView(r),i=3&n.getUint8(0);if(3!==i)return {header:{version:i},recordSet:null};const s=n.getUint32(4,!0),a=n.getUint16(8,!0),o=n.getUint16(10,!0),l={version:i,recordCount:s,headerByteCount:a,recordByteCount:o};let p=32;const g=[],u=[];let d;if(3===i){for(;13!==n.getUint8(p);)d=String.fromCharCode(n.getUint8(p+11)).trim(),g.push({name:r$4(new Uint8Array(r,p,11)),type:d,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(d)],length:n.getUint8(p+16)}),p+=32;if(p+=1,g.length>0)for(;u.length<s&&r.byteLength-p>o;){const t=[];32===n.getUint8(p)?(p+=1,g.forEach((n=>{if("C"===n.type)t.push(r$4(new Uint8Array(r,p,n.length)).trim());else if("N"===n.type)t.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim(),10));else if("F"===n.type)t.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim()));else if("D"===n.type){const e=String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim();t.push(new Date(parseInt(e.substring(0,4),10),parseInt(e.substring(4,6),10)-1,parseInt(e.substring(6,8),10)));}p+=n.length;})),u.push(t)):p+=o;}}return {header:l,fields:g,records:u,recordSet:t({fields:g,records:u})}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const _=(e,t)=>e.get(t)?.values,F=(e,t)=>e.get(t)?.values?.[0];let v=class extends K{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF";}async open(e){await this.init();const t=e?e.signal:null,{data:s$1}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!s$1)throw new s("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:a,firstIFDPos:n,isBigTiff:o}=F$1(s$1),f=[];await this._readIFDs(f,s$1,a,n,0,o?8:4,t);const{imageInfo:l,rasterInfo:u}=k(f),p=U$5(f),d=N$1(f);if(this._headerInfo={littleEndian:a,isBigTiff:o,ifds:f,pyramidIFDs:p,maskIFDs:d,...l},this._set("rasterInfo",u),!l.isSupported)throw new s("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new s("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");u.isPseudoSpatialReference&&n$4.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const y=f[0].get("PREDICTOR")?.values?.[0],g=f[0].get("SAMPLEFORMAT")?.values?.[0];if(3===g&&2===y)throw new s("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:x,skipExtensions:T=[]}=this.ioConfig;if(!T.includes("aux.xml")&&!x){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&P(t,u);}T.includes("vat.dbf")||1!==u.bandCount||"u8"!==u.pixelType||x||(u.attributeTable=await this._fetchAuxiliaryTable(e),null!=u.attributeTable&&(u.keyProperties.DataType="thematic")),x&&this.updateImageSpaceRasterInfo(u),this.updateTileInfo();}async fetchRawTile(e,t,r,i={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,r))return null;const s=await this._fetchRawTiffTile(e,t,r,!1,i);if(null!=s&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(e,t,r,!0,i);null!=a&&a.pixels[0]instanceof Uint8Array&&(s.mask=a.pixels[0]);}return s}async _readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=i+s,i=0;}const o=await this._readIFD(t,r,i,s,n$7.tiffTags,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-s,s,a,n);}async _readIFD(e,r,i,s,a=n$7.tiffTags,n=4,o){if(!e)return null;const f=B(e,r,i,s,a,n);if(f.success){const i=[];if(f.ifd?.forEach((e=>{e.values||i.push(e);})),i.length>0){const a=i.map((e=>e.offlineOffsetSize)).filter(O),n=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:t}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:o});e=t,s=n,i.forEach((t=>L$2(e,r,t,s)));}}if(f.ifd?.has("GEOKEYDIRECTORY")){const t=f.ifd.get("GEOKEYDIRECTORY"),i=t?.values;if(i&&i.length>4){const a=i[0]+"."+i[1]+"."+i[2],n=await this._readIFD(e,r,t.valueOffset+6-s,s,n$7.geoKeys,2,o);t.data=n.ifd,t.data&&t.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]});}}return f}if(f.requiredBufferSize&&f.requiredBufferSize!==e.byteLength){const t=await this.request(this.url,{range:{from:s,to:s+f.requiredBufferSize+4},responseType:"array-buffer",signal:o});return (e=t.data).byteLength<f.requiredBufferSize?null:this._readIFD(e,r,0,s,n$7.tiffTags,4,o)}}async _fetchRawTiffTile(e,t,r,i,s={}){const a=this._getTileLocation(e,t,r,i);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:f,ifd:l}=a,u=n.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:s.signal}))),p=await Promise.all(u),c=p.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),h=1===p.length?p[0].data:new ArrayBuffer(c),m=[0],d=[0];if(p.length>1){const e=new Uint8Array(h);for(let t=0,r=0;t<p.length;t++){const i=p[t].data;e.set(new Uint8Array(i),r),m[t]=r,r+=i.byteLength,d[t]=i.byteLength;}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:m,sizes:d},width:y,height:g,planes:null,pixelType:null});if(null==x)return null;let T,w,I;if(o!==y||f!==g){let e=x.mask;if(e)for(T=0;T<g;T++)if(I=T*y,T<f)for(w=o;w<y;w++)e[I+w]=0;else for(w=0;w<y;w++)e[I+w]=0;else for(e=new Uint8Array(y*g),x.mask=e,T=0;T<f;T++)for(I=T*y,w=0;w<o;w++)e[I+w]=1;}return x}_getTileLocation(e,t,r,i=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,n=0===e?0:e-(s-1),{_headerInfo:o}=this;if(!o)return null;const f=i?o.maskIFDs[n]:0===n?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!f)return null;const l=D$4(f,o),u=_(f,"TILEOFFSETS");if(void 0===u)return null;const p=_(f,"TILEBYTECOUNTS"),{minRow:c,minCol:h,maxRow:m,maxCol:d}=a[n];if(t>m||r>d||t<c||r<h)return null;const y=F(f,"IMAGEWIDTH"),x=F(f,"IMAGELENGTH"),T=F(f,"TILEWIDTH"),w=F(f,"TILELENGTH"),I=[];if(l){const{bandCount:e}=this.rasterInfo;for(let i=0;i<e;i++){const e=i*(m+1)*(d+1)+t*(d+1)+r;I[i]={from:u[e],to:u[e]+p[e]-1};}}else {const e=t*(d+1)+r;I.push({from:u[e],to:u[e]+p[e]-1});}for(let g=0;g<I.length;g++)if(null==I[g].from||!I[g].to||I[g].to<0)return null;return {ranges:I,ifd:f,actualTileWidth:r===d&&y%T||T,actualTileHeight:t===m&&x%w||w}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return S$1(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),r$1=r.parse(t);return r$1?.recordSet?d$3.fromJSON(r$1.recordSet):null}catch{return null}}};function k(e){const t=R$1(e),{width:r,height:i,tileWidth:s,tileHeight:a,planes:f,pixelType:l,compression:u,firstPyramidLevel:c,maximumPyramidLevel:h,pyramidBlockWidth:m,pyramidBlockHeight:d,pyramidResolutions:y,tileBoundary:g,affine:T,metadata:w}=t,R=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let v=d$1(R),k=!!t.isPseudoGeographic;null==v&&(k=!0,v=new f$3({wkid:3857}));const P=new w$1({...t.extent,spatialReference:v}),D=new _$2(P?{x:P.xmin,y:P.ymax,spatialReference:v}:{x:0,y:0}),O=new n$5({blockWidth:s,blockHeight:a,pyramidBlockWidth:m,pyramidBlockHeight:d,compression:u,origin:D,firstPyramidLevel:c,maximumPyramidLevel:h,pyramidResolutions:y,blockBoundary:g}),L=new _$2({x:(P.xmax-P.xmin)/r,y:(P.ymax-P.ymin)/i,spatialReference:v}),j=w?{BandProperties:w.bandProperties,DataType:w.dataType}:{};let B=null;const z=F(e[0],"PHOTOMETRICINTERPRETATION"),A=_(e[0],"COLORMAP");if(z<=3&&A?.length>3&&A.length%3==0){B=[];const e=A.length/3;for(let t=0;t<e;t++)B.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8]);}const C=new m$7({width:r,height:i,bandCount:f,pixelType:l,pixelSize:L,storageInfo:O,spatialReference:v,isPseudoSpatialReference:k,keyProperties:j,extent:P,colormap:B,statistics:w?w.statistics:null});if(T?.length&&(C.nativeExtent=new w$1({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:v}),C.transform=new y$3({polynomialOrder:1,forwardCoefficients:[T[2]+T[0]/2,T[5]-T[3]/2,T[0],T[3],-T[1],-T[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new _$2({x:(P.xmax-P.xmin)/r,y:(P.ymax-P.ymin)/i,spatialReference:v}),O.origin.x=-.5,O.origin.y=.5),y){const{x:e,y:t}=C.pixelSize;y.forEach((r=>{r.x*=e,r.y*=t;}));}return {imageInfo:t,rasterInfo:C}}function P(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=g$5(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const r=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new _$2({x:(r.xmax-r.xmin)/t.width,y:(r.ymax-r.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=r;}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference);}e$1([y$2()],v.prototype,"_files",void 0),e$1([y$2()],v.prototype,"_headerInfo",void 0),e$1([y$2()],v.prototype,"_bufferSize",void 0),e$1([y$2({type:String,json:{write:!0}})],v.prototype,"datasetFormat",void 0),v=e$1([a$2("esri.layers.support.rasterDatasets.TIFFRaster")],v);const D=v;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const n=new Map;n.set("MRF",{desc:"Meta Raster Format",constructor:b}),n.set("TIFF",{desc:"GeoTIFF",constructor:D}),n.set("RasterTileServer",{desc:"Raster Tile Server",constructor:I$1}),n.set("JPG",{desc:"JPG Raster Format",constructor:d}),n.set("PNG",{desc:"PNG Raster Format",constructor:d}),n.set("GIF",{desc:"GIF Raster Format",constructor:d}),n.set("BMP",{desc:"BMP Raster Format",constructor:d}),n.set("CovJSON",{desc:"COVJSON Raster Format",constructor:h$1}),n.set("MEMORY",{desc:"In Memory Raster Format",constructor:g$1});class u{static get supportedFormats(){const t=new Set;return n.forEach(((r,e)=>t.add(e))),t}static async open(r){const{url:e,ioConfig:s$1,source:o,sourceJSON:a}=r;let c=r.datasetFormat??s$1?.datasetFormat;null==c&&(e.includes(".")?c=e.slice(e.lastIndexOf(".")+1).toUpperCase():"coverage"===o?.type?.toLowerCase()?c="CovJSON":o?.extent&&o.pixelblocks&&(c="MEMORY")),"OVR"===c||"TIF"===c?c="TIFF":"JPG"===c||"JPEG"===c||"JFIF"===c?c="JPG":"COVJSON"===c&&(c="CovJSON"),e.toLowerCase().includes("/imageserver")&&!e.toLowerCase().includes("/wcsserver")&&(c="RasterTileServer");const u={url:e,source:o,sourceJSON:a,datasetFormat:c,ioConfig:s$1??{bandIds:null,sampling:null}};if(Object.keys(u).forEach((t=>{null==u[t]&&delete u[t];})),c){if(!this.supportedFormats.has(c))throw new s("rasterfactory:open","not a supported format "+c);if("CRF"===c)throw new s("rasterfactory:open",`cannot open raster: ${e}`);const s$1=new(n.get(c).constructor)(u);return await s$1.open({signal:r.signal}),s$1}const i=Array.from(n.keys()).filter((t=>"CovJSON"!==t&&"Memory"!==t));let l=0;const m=()=>{if(c=i[l++],!c)return null;if("CRF"===c)return null;const t=new(n.get(c).constructor)(u);return t.open({signal:r.signal}).then((()=>t)).catch((()=>m()))};return m()}static register(t,r,e){n.has(t.toUpperCase())||n.set(t.toUpperCase(),{desc:r,constructor:e});}}

let C=class extends(l$4(t$3(b$1(j$4(e$2(V(l$5(l$6(f$8(S$3(i$5(f$9)))))))))))){constructor(...e){super(...e),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=k$1((async(e,t,r)=>{const{save:s,saveAs:i}=await __vitePreload(() => import('./imageryUtils-Cudh1xeA.js'),true?__vite__mapDeps([6,7,2,3,4,8,9,10,11,12]):void 0,import.meta.url);switch(e){case A.SAVE:return s(this,t);case A.SAVE_AS:return i(this,r,t)}}));}normalizeCtorArgs(e,t){return "string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(a$4).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const e=[new y$4({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new y$4({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],t=this.raster?.rasterInfo??this.serviceRasterInfo,r=t?.attributeTable,s=null!=r?r.fields:null,i="Raster.";if(s){const t=s.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name=i+e.name,t}));e.push(...t);}const o=t?.dataType,a=t?.multidimensionalInfo;if(("vector-magdir"===o||"vector-uv"===o)&&null!=a){const t=a.variables[0].unit?.trim(),r="Magnitude"+(t?` (${t})`:"");e.push(new y$4({name:"Raster.Magnitude",alias:r,domain:null,editable:!1,type:"double"})),e.push(new y$4({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}));}return e}createPopupTemplate(e){const{rasterFields:t}=this,r=new Set(t.map((({name:e})=>e)).filter((e=>"raster.servicepixelvalue.raw"!==e.toLowerCase())));return p$6({fields:t,title:this.title},{...e,visibleFieldNames:r})}async generateRasterInfo(e,t){if(e=g$2(N,e),await this.load(),!e||"none"===e.functionName?.toLowerCase())return this.serviceRasterInfo;try{const{rasterInfo:r}=await this._openFunctionRaster(e,t);return r}catch(r){if(r instanceof s)throw r;throw new s("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(A.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(A.SAVE_AS,t,e)}write(e,t){const r=this._primaryRasters[0]??this.raster;if(this.loaded?"RasterTileServer"===r.datasetFormat&&("Raster"===r.tileType||"Map"===r.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new s("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}));}return null}async _openRaster(e){let t=!1;if(this.raster)await this._openFromRaster(this.raster,e),t="Function"===this.raster.datasetFormat;else {const{url:t,rasterFunction:r,source:i}=this;if(!t&&!i)throw new s("imagery-tile-layer:open","missing url or source parameter");i?await this._openFromSource(i,e):r?await this._openFromUrlWithRasterFunction(t,r,e):await this._openFromUrl(t,e);}const r=this.raster.rasterInfo;if(!r)throw new s("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",t?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"});}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(d$6((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e);})));}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters="Function"===e.datasetFormat?e.primaryRasters.rasters:[e],this.url||(this.url=this._primaryRasters[0].url);}async _openFromUrlWithRasterFunction(e,t,r){const i=[e];t&&R$2(t.toJSON(),i);const o=await Promise.all(i.map((e=>u.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:r})))),a=o.findIndex((e=>null==e));if(a>-1)throw new s("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);return this._primaryRasters=o,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const r=await u.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==r)throw new s("imagery-tile-layer:open",`cannot open raster: ${e}`);this._primaryRasters=[r],this.raster=r;}async _openFromSource(e,t){const r="the tiled imagery data source is not supported",i="coverage"===e.type?.toLowerCase()?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!i)throw new s("imagery-tile-layer:open",r);"MEMORY"===i&&(e={extent:e.extent,pixelBlocks:[e.pixelBlock]});const o=await u.open({url:"",source:e,datasetFormat:i,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==o)throw new s("imagery-tile-layer:open",r);this._primaryRasters=[o],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=o;}async _openFunctionRaster(e,t){const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>r[e.url]=e));const s=S$2(e.functionDefinition?.toJSON()??e.toJSON(),r),i=new u$4({rasterFunction:s});return await i.open(t),i}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t);}catch(r){r instanceof s&&n$4.getLogger(this).error("imagery-tile-layer:open",r.message),n$4.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0];}}};e$1([y$2({clonable:!1})],C.prototype,"_primaryRasters",void 0),e$1([y$2({type:[N$2],json:{write:{overridePolicy(){return {enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],C.prototype,"bandIds",void 0),e$1([y$2({json:{write:{overridePolicy(){return {enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),o$5(a$5)],C.prototype,"interpolation",void 0),e$1([y$2(y$5)],C.prototype,"legendEnabled",void 0),e$1([y$2({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],C.prototype,"isReference",void 0),e$1([y$2({type:["show","hide"]})],C.prototype,"listMode",void 0),e$1([y$2({json:{read:!0,write:!0}})],C.prototype,"blendMode",void 0),e$1([y$2()],C.prototype,"sourceJSON",void 0),e$1([y$2({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],C.prototype,"version",void 0),e$1([y$2({readOnly:!0,json:{read:!1}})],C.prototype,"type",void 0),e$1([y$2({type:["ArcGISTiledImageServiceLayer"]})],C.prototype,"operationalLayerType",void 0),e$1([y$2({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return {enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,r){t[r]=!e;}}}})],C.prototype,"popupEnabled",void 0),e$1([y$2({type:k$2,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return {enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],C.prototype,"popupTemplate",void 0),e$1([y$2({readOnly:!0})],C.prototype,"defaultPopupTemplate",null),e$1([y$2({readOnly:!0,type:[y$4]})],C.prototype,"fields",void 0),e$1([y$2({readOnly:!0,type:[y$4]})],C.prototype,"rasterFields",null),e$1([y$2({constructOnly:!0})],C.prototype,"source",void 0),C=e$1([a$2("esri.layers.ImageryTileLayer")],C);const M=C;

export { M as default };
