const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./lclayout-rtjlzU52.js","./main-CGBWc59Z.js","./preload-helper-dJJaZANz.js","./main-CY4W0263.css"])))=>i.map(i=>d[i]);
import { fr as n$1, e7 as l$1, eb as t, a0 as V, a_ as w$1, s as s$1, G as n$2, dw as e$2, dn as ot, dN as s$2, cu as r$1, _ as _$1, aY as m, bd as e$3, be as y$1, bf as a, em as f$1 } from './main-CGBWc59Z.js';
import { M, h, a as ae, w, b as b$1, c as T, D, I } from './KnowledgeGraphSublayer-CuWWj004.js';
import { _ as __vitePreload } from './preload-helper-dJJaZANz.js';
import { R } from './knowledgeGraphService-CA031jBE.js';
import './FeatureStore-BEDETHh3.js';
import './BoundsStore-B8jlL01T.js';
import './PooledRBush-CkUzAC4H.js';
import './timeSupport-B8yJYqAw.js';
import './json-DYk0G9qS.js';
import './QueryEngine-xZNZ2wBq.js';
import './WhereClause-3pL4DCSU.js';
import './TimeOnly-BZ2-EQE7.js';
import './QueryEngineCapabilities-wlDphL4g.js';
import './utils-CPQvVcJK.js';
import './utils-Ds0jPQyL.js';
import './utils-_ntP36Td.js';
import './clientSideDefaults-DokujK5o.js';
import './GraphQueryStreaming-Bt6-9TUj.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var e$1;!function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absoluteValue";}(e$1||(e$1={}));

let e,r=null;function n(){return e||(e=__vitePreload(() => import('./lclayout-rtjlzU52.js'),true?__vite__mapDeps([0,1,2,3]):void 0,import.meta.url).then((t=>t.l)).then((({default:e})=>e({locateFile:e=>n$1(`esri/libs/linkchartlayout/${e}`)}))).then((t=>{s(t);})),e)}function s(t){r=t;}var u,o;function l(t,e,a,n,s,u){const o=a.length,l=s.length,y=Float64Array.BYTES_PER_ELEMENT,i=Uint32Array.BYTES_PER_ELEMENT,c=Uint8Array.BYTES_PER_ELEMENT,E=16,f=E+o*(c+2*y)+l*(2*i),p=r._malloc(f);try{const c=p+E-p%E,f=c+o*y,A=f+o*y,_=A+l*i,P=_+l*i,b=()=>[r.HEAPF64.subarray(c>>3,(c>>3)+o),r.HEAPF64.subarray(f>>3,(f>>3)+o),r.HEAPU32.subarray(A>>2,(A>>2)+l),r.HEAPU32.subarray(_>>2,(_>>2)+l),r.HEAPU8.subarray(P,P+o)],[g,H,L,h,d]=b();g.set(a),H.set(n),L.set(s),h.set(u),d.set(e);let C=t(o,P,c,f,l,A,_),F=null,m=null;if(C){const t=r.getLayoutLinksTypes(),e=r.getLayoutLinksVerticesEndIndices(),a=r.getLayoutLinksVertices(),n=r.countLayoutLinksVertices();!l||t&&e?n&&!a?C=!1:(F={types:new Uint8Array(r.HEAPU8.subarray(t,t+l)),vertexEndIndex:new Uint32Array(r.HEAPU32.subarray(e>>2,(e>>2)+l)),vertices:new Float64Array(r.HEAPF64.subarray(a>>3,(a>>3)+2*n))},m=r.getAuxiliaryGraphicElements()):C=!1;}const[R,T,U,B,v]=b();return a.set(R),n.set(T),s.set(U),u.set(B),e.set(v),{success:C,links:F,graphics:m}}finally{r._free(p),r.cleanupLayout();}}!function(t){t[t.None=0]="None",t[t.IsMovable=1]="IsMovable",t[t.IsGeographic=2]="IsGeographic",t[t.IsRoot=4]="IsRoot";}(u||(u={})),function(t){t[t.Regular=0]="Regular",t[t.Orthogonal=1]="Orthogonal",t[t.Curved=2]="Curved",t[t.Recursive=3]="Recursive";}(o||(o={}));const y=2,i=1,c=-1;var E,f,p,A,_,P$1,b,g,H;!function(t){function e(){return r.getMinIdealEdgeLength()}function a(t,e,a,n,s,u=y,o=i,E=c){return l(((t,e,a,n,s,l,y)=>r.applyForceDirectedLayout(t,e,a,n,s,l,y,u,o,E)),t,e,a,n,s)}t.getMinIdealEdgeLength=e,t.apply=a;}(E||(E={})),function(t){function e(t,e,a,n,s,u=y,o=i,E=c){return l(((t,e,a,n,s,l,y)=>r.applyCommunityLayout(t,e,a,n,s,l,y,u,o,E)),t,e,a,n,s)}t.apply=e;}(f||(f={})),function(t){function e(t,e,a,n,s){return l(r.applySimpleLayout,t,e,a,n,s)}t.apply=e;}(p||(p={})),function(t){function e(t,e,a,n,s){return l(r.applyHierarchicalLayout,t,e,a,n,s)}t.apply=e;}(A||(A={})),function(t){function e(t,e,a,n,s){return l(r.applyRadialTreeLayout,t,e,a,n,s)}t.apply=e;}(_||(_={})),function(t){function e(t,e,a,n,s){return l(r.applySmartTreeLayout,t,e,a,n,s)}t.apply=e;}(P$1||(P$1={})),function(t){function e(t,e,a,n,s,u,o,y,i){return l(((t,e,a,u,o,l,c)=>{if(n.length!==t)return !1;if(s.length!==t)return !1;if(y.length!==o)return !1;if(i.length!==o)return !1;const E=Float64Array.BYTES_PER_ELEMENT,f=16,p=r._malloc(f+t*E),A=r._malloc(f+t*E),_=r._malloc(f+o*E),P=r._malloc(f+o*E),b=p+f-p%f,g=A+f-A%f,H=_+f-_%f,L=P+f-P%f;try{return r.HEAPF64.subarray(b>>3,(b>>3)+t).set(n),r.HEAPF64.subarray(g>>3,(g>>3)+t).set(s),r.HEAPF64.subarray(H>>3,(H>>3)+o).set(y),r.HEAPF64.subarray(L>>3,(L>>3)+o).set(i),r.applyChronologicalLayout(t,e,a,u,b,g,o,l,c,H,L)}finally{r._free(p),r._free(A),r._free(_),r._free(P);}}),t,e,a,u,o)}t.apply=e;}(b||(b={})),function(t){t[t.Undirected=0]="Undirected",t[t.Directed=1]="Directed",t[t.Reversed=2]="Reversed";}(g||(g={})),function(t){t[t.ByCC_Raw=0]="ByCC_Raw",t[t.ByCC_NormalizeGlobally=1]="ByCC_NormalizeGlobally",t[t.ByCC_NormalizeByCC=2]="ByCC_NormalizeByCC";}(H||(H={}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let j=class extends(l$1(t(f$1))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new V,this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new w$1({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.sublayerIdsCache=new Map,this.tables=new V,this.type="link-chart",this._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new s$1("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it")}normalizeCtorArgs(e){return {url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2];}const t=new Set;let n=[],s=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new s$1("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e);})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e);})),e.inclusionModeDefinition?.generateAllSublayers?(n=e.knowledgeGraph.dataModel.entityTypes??[],s=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((a,o)=>{const r=this._graphTypeLookup.get(o);if(!r)return n$2.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(o);"relationship"===r.type?t.has(o)||(t.add(o),s.push(r)):"entity"===r.type?t.has(o)||(t.add(o),n.push(r)):(n$2.getLogger(this).warn(`A named type, ${o}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(o));})):(n=e.knowledgeGraph.dataModel.entityTypes??[],s=e.knowledgeGraph.dataModel.relationshipTypes??[]);const o=new M({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=n,this.memberRelationshipTypes=s,this.dataManager=o;}load(e){return this.addResolvingPromise(new Promise((t=>{R(this.url).then((a=>{if(this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0});})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0});}))),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1,e.members?.forEach((e=>{let t;t=e.linkChartLocation instanceof e$2?e.linkChartLocation:e.linkChartLocation?ot(e.linkChartLocation):null,t&&2===t.coords.length&&0===t.lengths.length?this.entityLinkChartDiagramLookup.set(e.id,t):this.relationshipLinkChartDiagramLookup.set(e.id,t);})),this.addResolvingPromise(this._initializeDiagram().then((async()=>{this.layers.forEach((async e=>{await e.refreshCachedQueryEngine();})),this.tables.forEach((async e=>{await e.refreshCachedQueryEngine();}));})));}));else {const t="GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{s$2(e);const t=[],a=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e=>{e.useAllData=!1;}))),await this._initializeDiagram(),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on("layerview-create",(()=>{t(null);}));})));})),this.tables.forEach((e=>{a.push(e.refreshCachedQueryEngine());})),await Promise.all(a);})));}t(null);}));}))),Promise.resolve(this)}async addRecords(e,t){let a=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await h(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));await this._handleNewRecords(i);}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){let i=[];for(const s of e)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(s.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(s.typeName)?.members?.has(s.id)&&i.push(s);if(t){const e=new Set,t=[];for(const a of i)if(this.dataManager.nodeConnectionsLookup.has(a.id))for(const t of this.dataManager.nodeConnectionsLookup.get(a.id))e.add(t);for(const a of e)if(this.dataManager.memberIdTypeLookup.has(a))for(const e of this.dataManager.memberIdTypeLookup.get(a))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:a,typeName:e});i=i.concat(t);}this.dataManager.removeFromLayer(i);for(const s of i)this.sublayerIdsCache.get(s.typeName)?.delete(s.id),this.dataManager.relationshipTypeNames.has(s.typeName)?this.relationshipLinkChartDiagramLookup.delete(s.id):this.entityLinkChartDiagramLookup.delete(s.id);a&&await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode,this._currentLinkChartConfig.layoutOptions);const n=[];return this.layers.forEach((e=>{n.push(e.refreshCachedQueryEngine());})),await Promise.all(n),this._refreshNamedTypes(),i}async expand(e,t){const a=await this.dataManager.getConnectedRecordIds(e,t),i=a.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(a),{records:i}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach((e=>{const t=new ae({objectType:e,parentCompositeLayer:this,graphType:"relationship",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map);})),this.memberEntityTypes.forEach((e=>{const t=new ae({objectType:e,parentCompositeLayer:this,graphType:"entity",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map);})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const a=r$1(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{if(a.add(e.id),e.linkChartLocation)if(e.linkChartLocation instanceof e$2)this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation);else {const a=ot(e.linkChartLocation);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation?a:null):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation?a:null);}}));}));}async calculateLinkChartLayout(e="RADIAL_TREE",t){const n$1=[],s=[],o$1=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{n$1.push({typeName:t,feature:e});})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{s.push({typeName:t,feature:e});}));})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const r=new Map,h=new Map,d=new Map,p$1=new Map,u$1=new Uint8Array(n$1.length),L=new Float64Array(n$1.length),C=new Float64Array(n$1.length),k=new Uint32Array(s.length),M=new Uint32Array(s.length),I$1=[],j="FORCE_DIRECTED",P=new w$1({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let S,O="FORCE_DIRECTED",z=0,U=0;switch(O="GEOGRAPHIC"===e?j:e,O){case"FORCE_DIRECTED":S=E.apply;break;case"COMMUNITY":S=f.apply;break;case"HIERARCHICAL":S=A.apply;break;case"RADIAL_TREE":S=_.apply;break;case"SMART_TREE":S=P$1.apply;break;default:S=p.apply;}n$1.forEach((({typeName:a,feature:i})=>{if(t?.lockedNodeLocations?.has(i.attributes[w])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(a)?u$1[z]=u.IsGeographic:u$1[z]=u.None;const n=t.lockedNodeLocations.get(i.attributes[w]);L[z]=n.x,C[z]=n.y;}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(a)){u$1[z]=u.IsGeographic;let e=null;const t=i.attributes[this.dataManager.geographicLookup.get(a).name],n=this.dataManager.geographicLookup.get(a)?.geometryType;switch(n){case"esriGeometryPoint":L[z]=t?.x,C[z]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(L[z]=e.x,C[z]=e.y):u$1[z]=u.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(L[z]=e.x,C[z]=e.y):u$1[z]=u.IsMovable;break;default:u$1[z]=u.IsMovable;}(null==L[z]||null==C[z]||Number.isNaN(L[z])||Number.isNaN(C[z]))&&(u$1[z]=u.IsMovable,L[z]=0,C[z]=0);}else u$1[z]=u.IsMovable,L[z]=0,C[z]=0;p$1.set(i.attributes[w],z),I$1[z]={feature:i,typeName:a},z++;}));let H=!1;const B=new Map;s.forEach((e=>{const t=e.feature.attributes[b$1],a=e.feature.attributes[T],i=p$1.get(t),n=p$1.get(a);if(void 0!==i&&void 0!==n){const s=t+"-"+a,r=B.get(s),h=r?.has(e.typeName);h||(k[U]=i,M[U]=n,void 0===r?B.set(s,new Map([[e.typeName,U]])):r.set(e.typeName,U),U++),o$1.push(e);}else H=!0,this.relationshipLinkChartDiagramLookup.set(t,null);})),H&&n$2.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const F=this._validateLayoutSettings(e,t),Q=this._convertLayoutSettingsToCalculationSettings(F);await n();const{success:K,links:Y}=S(u$1,L,C,k.subarray(0,U),M.subarray(0,U),Q.computationBudgetTime,Q.idealEdgeLengthMultiplier,Q.repulsionRadiusMultiplier);if(!K)throw new s$1("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let a=0;a<I$1.length;a++){if(C[a]>84.9999?C[a]=84.9999:C[a]<-84.9999&&(C[a]=-84.9999),L[a]>179.9999?L[a]=179.9999:L[a]<-179.9999&&(L[a]=-179.9999),I$1[a].feature.attributes[D]=new _$1(L[a],C[a]),r.has(I$1[a].typeName)){const e=r.get(I$1[a].typeName);e?.set(I$1[a].feature.attributes[w],I$1[a].feature);}else {const e=new Map;e.set(I$1[a].feature.attributes[w],I$1[a].feature),r.set(I$1[a].typeName,e);}d.set(I$1[a].feature.attributes[w],I$1[a].feature);const e=ot(I$1[a].feature.attributes[D]);this.entityLinkChartDiagramLookup.set(I$1[a].feature.attributes[w],I$1[a].feature.attributes[D]?e:null),I$1[a].feature.attributes[D].x<P.xmin&&(P.xmin=I$1[a].feature.attributes[D].x),I$1[a].feature.attributes[D].x>P.xmax&&(P.xmax=I$1[a].feature.attributes[D].x),I$1[a].feature.attributes[D].y<P.ymin&&(P.ymin=I$1[a].feature.attributes[D].y),I$1[a].feature.attributes[D].y>P.ymax&&(P.ymax=I$1[a].feature.attributes[D].y);}if(this.linkChartExtent.xmin=P.xmin,this.linkChartExtent.xmax=P.xmax,this.linkChartExtent.ymin=P.ymin,this.linkChartExtent.ymax=P.ymax,!Y)throw new s$1("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const $=new Map,W=new Map,q=new Map,J=new Set;for(let a=0;a<o$1.length;a++){const e=[],t=o$1[a],n=t.feature.attributes[b$1],s=t.feature.attributes[T],r=n+"-"+s,u=B.get(r).get(t.typeName),f=0===u?0:Y?.vertexEndIndex[u-1];if(!J.has(u)){if(J.add(u),Y.types[u]===o.Recursive){const t=[Y.vertices[2*f],Y.vertices[2*f+1]],a=[Y.vertices[2*(f+1)],Y.vertices[2*(f+1)+1]],i=[.5*(t[0]+a[0]),.5*(t[1]+a[1])],n=[i[0]-t[0],i[1]-t[1]],s=[i[0]+n[1],i[1]-n[0]],o=[i[0]-n[1],i[1]+n[0]];e.push(t),e.push(s),e.push(a),e.push(o),e.push(t);}else {if(Y.types[u]!==o.Regular){n$2.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let t=f;t<Y.vertexEndIndex[u];t++)e.push([Y.vertices[2*t],Y.vertices[2*t+1]]);}const t=I$1[p$1.get(n)]?.feature.attributes[D],a=I$1[p$1.get(s)]?.feature.attributes[D];e[0][0]===t.x&&e[0][1]===t.y||(e[0]=[t.x,t.y]),e[e.length-1][0]===a.x&&e[e.length-1][1]===a.y||(e[e.length-1]=[a.x,a.y]);for(let i=1;i<e.length-1;i++)e[i][1]>85.5?e[i][1]=85.5:e[i][1]<-85.5&&(e[i][1]=-85.5),e[i][0]>179.9999?e[i][0]=179.9999:e[i][0]<-179.9999&&(e[i][0]=-179.9999);$.has(r)?$.get(r).push(e):$.set(r,[e]);}const L=$.get(r);W.has(r)||(W.set(r,new Map),q.set(r,new Map));const C=W.get(r),k=q.get(r);C.has(t.typeName)||(C.set(t.typeName,L.shift()),k.set(t.typeName,0));const M=C.get(t.typeName);k.set(t.typeName,k.get(t.typeName)+1);const w$1=new m({paths:M});if(t.feature.attributes[D]=w$1,h.has(t.typeName)){const e=h.get(t.typeName);e?.set(t.feature.attributes[w],t.feature);}else {const e=new Map;e.set(t.feature.attributes[w],t.feature),h.set(t.typeName,e);}d.set(t.feature.attributes[w],t.feature);const b=ot(t.feature.attributes[D]);this.relationshipLinkChartDiagramLookup.set(t.feature.attributes[w],t.feature.attributes[D]?b:null);}for(const a of o$1)a.feature.attributes[I]=q.get(a.feature.attributes[b$1]+"-"+a.feature.attributes[T])?.get(a.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutOptions:F},{nodes:r,links:h,idMap:d}}async applyNewLinkChartLayout(e="RADIAL_TREE",t){const a=[];await this.calculateLinkChartLayout(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine());})),await Promise.all(a),this._refreshNamedTypes();}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const a=t.linkChartLocation;let i;const n=t.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(n,new _$1({x:i.x,y:i.y})));}));})),e}async synchronizeInclusionListWithCache(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const a=new Set(Array.from(this.dataManager.sublayerCaches.get(t).keys()));Array.from(e.members.keys()).filter((e=>!a.has(e))).forEach((t=>{e.members?.delete(t);}));}})),e();}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine());})),await Promise.all(t),this._refreshNamedTypes();}async connectEntities(e){let t=[];for(const i of this.dataManager.relationshipTypeNames){const e=this.sublayerIdsCache.get(i);e&&(t=t.concat(Array.from(e.keys())));}const a=await this.dataManager.getAttachedRelationships(e,t);return await this._handleNewRecords(a),{records:a}}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const e=this._graphTypeLookup.get(i);if(e){const t=new ae({objectType:e,parentCompositeLayer:this,graphType:e.type,title:i});"entity"===e.type?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.set(i,new Map);}}await this.dataManager.refreshCacheContent(e.map((e=>e.id)));const a=Object.assign({},this._currentLinkChartConfig.layoutOptions);a.lockedNodeLocations=this.getCurrentNodeLocations(),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,a);}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const a=e.linkChartLocation;let i;const n=e.id;if(!a)return;i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};const s=ot(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,s):this.entityLinkChartDiagramLookup.set(n,s),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y);}));})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[b$1]),a=this.relationshipLinkChartDiagramLookup.get(e.attributes[T]);if(t&&a){const i=ot(new m({paths:[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[w],i);}else this.relationshipLinkChartDiagramLookup.set(e.attributes[w],null);}));}))):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.defaultLinkChartConfig.layoutOptions||{}}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()});}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0});}_validateLayoutSettings(e,t){const a=e=>"number"==typeof e&&!isNaN(e),n=e=>a(e)&&e>=1,s=e=>a(e)&&e>=1,o=e=>Object.values(e$1).includes(e),r=e=>a(e)&&e>=0,h=new Set(["FORCE_DIRECTED","COMMUNITY","GEOGRAPHIC"]),l={};if(!h.has(e)||!t)return !h.has(e)&&t&&n$2.getLogger(this).warn("Layout mode options were given for a layout mode that does not utilize them, settings will be ignored"),l;const{computationBudgetTime:d,repulsionRadiusMultiplier:u,idealEdgeLength:c,idealEdgeLengthType:y}=t;s(d)?l.computationBudgetTime=d:void 0!==d&&n$2.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),n(u)?l.repulsionRadiusMultiplier=u:void 0!==u&&n$2.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting");const g=void 0!==c||void 0!==y;return "GEOGRAPHIC"!==e&&g?n$2.getLogger(this).warn("Ideal edge length settings were specified for an incompatible layout mode, and will be ignored"):"GEOGRAPHIC"===e&&g&&(o(y)?l.idealEdgeLengthType=y:void 0!==y&&n$2.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),r(c)?l.idealEdgeLength=c:void 0!==c&&n$2.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),l}_convertLayoutSettingsToCalculationSettings(e){let t=e.idealEdgeLength;return e.idealEdgeLengthType===e$1.ABSOLUTE&&(void 0===t?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier,idealEdgeLengthMultiplier:t}}};e$3([y$1()],j.prototype,"dataPreloadedInLocalCache",void 0),e$3([y$1()],j.prototype,"defaultLinkChartConfig",void 0),e$3([y$1()],j.prototype,"dataManager",void 0),e$3([y$1()],j.prototype,"knowledgeGraph",void 0),e$3([y$1()],j.prototype,"layers",void 0),e$3([y$1()],j.prototype,"entityLinkChartDiagramLookup",void 0),e$3([y$1()],j.prototype,"relationshipLinkChartDiagramLookup",void 0),e$3([y$1()],j.prototype,"linkChartExtent",void 0),e$3([y$1()],j.prototype,"memberEntityTypes",void 0),e$3([y$1()],j.prototype,"memberRelationshipTypes",void 0),e$3([y$1()],j.prototype,"sublayerIdsCache",void 0),e$3([y$1()],j.prototype,"tables",void 0),e$3([y$1({json:{read:!1}})],j.prototype,"type",void 0),j=e$3([a("esri.layers.LinkChartLayer")],j);const P=j;

export { P as default };
