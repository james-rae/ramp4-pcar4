import { m8 as i$2, bZ as i$3, a1 as d$1, bd as e$1, be as y$2, aY as m$3, bm as k$1, m9 as j$3, bf as a$2, b_ as f$2, ed as o$2, _ as _$1, eL as r$2, aX as j$4, e0 as o$3 } from './main-CGBWc59Z.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
const i$1={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},r$1=i$2()(i$1);i$2()({...i$1,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"});i$2()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"});const a$1=i$2()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"});i$2()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"});const o$1=i$2()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),l=i$2()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),c$3=i$2()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});i$2()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const m$2=i$2()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});i$2()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"});i$2()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const A=i$2()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),p=i$2()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),v=i$2()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),T$2=i$2()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),N=i$2()({1:"right",2:"left"},{useNumericKeys:!0}),g=i$2()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),k=i$2()({0:"permit",1:"restrict"},{useNumericKeys:!0}),S$3=i$2()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),f$1=i$2()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),U=i$2()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),y$1=i$2()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),D=i$2()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),w$1=i$2()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),M=i$2()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),R=i$2()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),b$3=i$2()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),q=i$2()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),P=i$2()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var u;let m$1=u=class extends(i$3(f$2)){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line";}static fromGraphic(e){return new u({directionLineType:f$1.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionLineType:null!=this.directionLineType?f$1.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return null!=this.fromLevel&&(e.FromLevel=this.fromLevel),null!=this.toLevel&&(e.ToLevel=this.toLevel),new d$1({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};m$1.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger"},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger"},{name:"FromLevel",alias:"From Level",type:"esriFieldTypeInteger"},{name:"Meters",alias:"Meters",type:"esriFieldTypeDouble"},{name:"Minutes",alias:"Minutes",type:"esriFieldTypeDouble"},{name:"ToLevel",alias:"To Level",type:"esriFieldTypeInteger"}],e$1([y$2({type:f$1.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:f$1.read}}})],m$1.prototype,"directionLineType",void 0),e$1([y$2({json:{read:{source:"attributes.DirectionPointID"}}})],m$1.prototype,"directionPointId",void 0),e$1([y$2({json:{read:{source:"attributes.Meters"}}})],m$1.prototype,"distance",void 0),e$1([y$2({json:{read:{source:"attributes.Minutes"}}})],m$1.prototype,"duration",void 0),e$1([y$2({json:{read:{source:"attributes.FromLevel"}}})],m$1.prototype,"fromLevel",void 0),e$1([y$2({type:m$3})],m$1.prototype,"geometry",void 0),e$1([y$2({json:{read:{source:"attributes.ObjectID"}}})],m$1.prototype,"objectId",void 0),e$1([y$2({type:k$1})],m$1.prototype,"popupTemplate",void 0),e$1([y$2({types:j$3})],m$1.prototype,"symbol",void 0),e$1([y$2({json:{read:{source:"attributes.ToLevel"}}})],m$1.prototype,"toLevel",void 0),e$1([y$2({readOnly:!0,json:{read:!1}})],m$1.prototype,"type",void 0),m$1=u=e$1([a$2("esri.rest.support.DirectionLine")],m$1);const c$2=m$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var m;let c$1=m=class extends(i$3(f$2)){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null;}readArrivalTime(e,t){return null!=t.attributes.ArrivalTime?new Date(t.attributes.ArrivalTime):null}static fromGraphic(e){return new m({alternateName:e.attributes.AlternateName??null,arrivalTime:null!=e.attributes.ArrivalTime?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:S$3.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){const e={ObjectID:this.objectId,DirectionPointType:null!=this.directionPointType?S$3.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return null!=this.alternateName&&(e.AlternateName=this.alternateName),null!=this.arrivalTime&&(e.ArrivalTime=this.arrivalTime.getTime()),null!=this.arrivalTimeOffset&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),null!=this.azimuth&&(e.Azimuth=this.azimuth),null!=this.branchName&&(e.BranchName=this.branchName),null!=this.displayText&&(e.DisplayText=this.displayText),null!=this.exitName&&(e.ExitName=this.exitName),null!=this.intersectingName&&(e.IntersectingName=this.intersectingName),null!=this.level&&(e.Level=this.level),null!=this.name&&(e.Name=this.name),null!=this.shortVoiceInstruction&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),null!=this.towardName&&(e.TowardName=this.towardName),null!=this.voiceInstruction&&(e.VoiceInstruction=this.voiceInstruction),new d$1({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};c$1.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AlternateName",alias:"Alternative Name",type:"esriFieldTypeString"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time Offset",type:"esriFieldTypeInteger"},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble"},{name:"BranchName",alias:"Branch Name",type:"esriFieldTypeString"},{name:"DirectionPointType",alias:"Directions Point Type",type:"esriFieldTypeInteger"},{name:"DisplayText",alias:"Display Text",type:"esriFieldTypeString"},{name:"ExitName",alias:"Exit Name",type:"esriFieldTypeString"},{name:"IntersectingName",alias:"Intersecting Name",type:"esriFieldTypeString"},{name:"Level",alias:"Level",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ShortVoiceInstruction",alias:"Short Voice Instruction",type:"esriFieldTypeString"},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger"},{name:"TowardName",alias:"Toward Name",type:"esriFieldTypeString"},{name:"VoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString"}],e$1([y$2({json:{read:{source:"attributes.AlternateName"}}})],c$1.prototype,"alternateName",void 0),e$1([y$2()],c$1.prototype,"arrivalTime",void 0),e$1([o$2("arrivalTime",["attributes.ArrivalTime"])],c$1.prototype,"readArrivalTime",null),e$1([y$2({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],c$1.prototype,"arrivalTimeOffset",void 0),e$1([y$2({json:{read:{source:"attributes.Azimuth"}}})],c$1.prototype,"azimuth",void 0),e$1([y$2({json:{read:{source:"attributes.BranchName"}}})],c$1.prototype,"branchName",void 0),e$1([y$2({type:S$3.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:S$3.read}}})],c$1.prototype,"directionPointType",void 0),e$1([y$2({json:{read:{source:"attributes.DisplayText"}}})],c$1.prototype,"displayText",void 0),e$1([y$2({json:{read:{source:"attributes.ExitName"}}})],c$1.prototype,"exitName",void 0),e$1([y$2({type:_$1})],c$1.prototype,"geometry",void 0),e$1([y$2({json:{read:{source:"attributes.IntersectingName"}}})],c$1.prototype,"intersectingName",void 0),e$1([y$2()],c$1.prototype,"level",void 0),e$1([y$2({json:{read:{source:"attributes.Name"}}})],c$1.prototype,"name",void 0),e$1([y$2({json:{read:{source:"attributes.ObjectID"}}})],c$1.prototype,"objectId",void 0),e$1([y$2({type:k$1})],c$1.prototype,"popupTemplate",void 0),e$1([y$2({json:{read:{source:"attributes.Sequence"}}})],c$1.prototype,"sequence",void 0),e$1([y$2({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],c$1.prototype,"shortVoiceInstruction",void 0),e$1([y$2({json:{read:{source:"attributes.StopID"}}})],c$1.prototype,"stopId",void 0),e$1([y$2({types:j$3})],c$1.prototype,"symbol",void 0),e$1([y$2({json:{read:{source:"attributes.TowardName"}}})],c$1.prototype,"towardName",void 0),e$1([y$2({readOnly:!0,json:{read:!1}})],c$1.prototype,"type",void 0),e$1([y$2({json:{read:{source:"attributes.VoiceInstruction"}}})],c$1.prototype,"voiceInstruction",void 0),c$1=m=e$1([a$2("esri.rest.support.DirectionPoint")],c$1);const y=c$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
function r(r,i){if(null==r)return null;const e={},s=new RegExp(`^${i}`,"i");for(const n of Object.keys(r))if(s.test(n)){const s=n.substring(i.length);e[w$1.fromJSON(s)]=r[n];}return e}function i(r,i,e){if(null!=r){i.attributes||(i.attributes={});for(const s in r){const n=w$1.toJSON(s);i.attributes[`${e}${n}`]=r[s];}}}function e(r){const i={};for(const e of Object.keys(r)){const s=e;i[w$1.fromJSON(s)]=r[e];}return i}function s(r){const i={};for(const e of Object.keys(r)){const s=e;i[w$1.toJSON(s)]=r[e];}return i}function n(t,r){return null==t||null==r?null:Math.round((t-r)/6e4)}function o(t){const r=t.toJSON(),i=r;return i.accumulateAttributeNames&&=r.accumulateAttributeNames?.join(),i.attributeParameterValues&&=JSON.stringify(r.attributeParameterValues),i.barriers&&=JSON.stringify(r.barriers),i.outSR&&=r.outSR?.wkid,i.overrides&&=JSON.stringify(r.overrides),i.polygonBarriers&&=JSON.stringify(r.polygonBarriers),i.polylineBarriers&&=JSON.stringify(r.polylineBarriers),i.restrictionAttributeNames&&=r.restrictionAttributeNames?.join(),i.stops&&=JSON.stringify(r.stops),i.travelMode&&=JSON.stringify(r.travelMode),i}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var S$2;let T$1=S$2=class extends(i$3(f$2)){constructor(t){super(t),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier";}readCosts(t,e){return r(e.attributes,"Attr_")}writeCosts(t,e){i(t,e,"Attr_");}static fromGraphic(t){return new S$2({addedCost:t.attributes.AddedCost??null,barrierType:null!=t.attributes.BarrierType?g.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?e(JSON.parse(t.attributes.Costs)):null,curbApproach:null!=t.attributes.CurbApproach?p.fromJSON(t.attributes.CurbApproach):null,fullEdge:null!=t.attributes.FullEdge?k.fromJSON(t.attributes.FullEdge):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,status:null!=t.attributes.Status?T$2.fromJSON(t.attributes.Status):null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?g.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(s(this.costs)):null,CurbApproach:null!=this.curbApproach?p.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?k.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?T$2.toJSON(this.status):null};return new d$1({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};T$1.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}],e$1([y$2()],T$1.prototype,"addedCost",void 0),e$1([y$2({type:g.apiValues,json:{name:"attributes.BarrierType",read:{reader:g.read},write:{writer:g.write}}})],T$1.prototype,"barrierType",void 0),e$1([y$2()],T$1.prototype,"costs",void 0),e$1([o$2("costs",["attributes"])],T$1.prototype,"readCosts",null),e$1([r$2("costs")],T$1.prototype,"writeCosts",null),e$1([y$2({constructOnly:!0,type:p.apiValues,json:{read:{source:"attributes.CurbApproach",reader:p.read}}})],T$1.prototype,"curbApproach",void 0),e$1([y$2({type:k.apiValues,json:{name:"attributes.FullEdge",read:{reader:k.read},write:{writer:k.write}}})],T$1.prototype,"fullEdge",void 0),e$1([y$2({type:_$1,json:{write:!0}})],T$1.prototype,"geometry",void 0),e$1([y$2({json:{name:"attributes.Name"}})],T$1.prototype,"name",void 0),e$1([y$2({json:{name:"attributes.ObjectID"}})],T$1.prototype,"objectId",void 0),e$1([y$2({type:k$1})],T$1.prototype,"popupTemplate",void 0),e$1([y$2({type:N.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:N.read}}})],T$1.prototype,"sideOfEdge",void 0),e$1([y$2({json:{read:{source:"attributes.SourceID"}}})],T$1.prototype,"sourceId",void 0),e$1([y$2({json:{read:{source:"attributes.SourceOID"}}})],T$1.prototype,"sourceOid",void 0),e$1([y$2({type:T$2.apiValues,json:{read:{source:"attributes.Status",reader:T$2.read}}})],T$1.prototype,"status",void 0),e$1([y$2({types:j$3})],T$1.prototype,"symbol",void 0),e$1([y$2({readOnly:!0,json:{read:!1}})],T$1.prototype,"type",void 0),T$1=S$2=e$1([a$2("esri.rest.support.PointBarrier")],T$1);const C$1=T$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var j$2;let h=j$2=class extends(i$3(f$2)){constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier";}readCosts(t,e){return r(e.attributes,"Attr_")}writeCosts(t,e){i(t,e,"Attr_");}static fromGraphic(t){return new j$2({barrierType:null!=t.attributes.BarrierType?g.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?e(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:t.attributes.ScaleFactor??null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,BarrierType:null!=this.barrierType?g.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(s(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new d$1({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};h.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],e$1([y$2({type:g.apiValues,json:{name:"attributes.BarrierType",read:{reader:g.read},write:{writer:g.write}}})],h.prototype,"barrierType",void 0),e$1([y$2()],h.prototype,"costs",void 0),e$1([o$2("costs",["attributes"])],h.prototype,"readCosts",null),e$1([r$2("costs")],h.prototype,"writeCosts",null),e$1([y$2({type:j$4,json:{write:!0}})],h.prototype,"geometry",void 0),e$1([y$2({json:{name:"attributes.Name"}})],h.prototype,"name",void 0),e$1([y$2({json:{name:"attributes.ObjectID"}})],h.prototype,"objectId",void 0),e$1([y$2({type:k$1})],h.prototype,"popupTemplate",void 0),e$1([y$2()],h.prototype,"scaleFactor",void 0),e$1([y$2({types:j$3})],h.prototype,"symbol",void 0),e$1([y$2({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=j$2=e$1([a$2("esri.rest.support.PolygonBarrier")],h);const T=h;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var b$2;let d=b$2=class extends(i$3(f$2)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier";}readCosts(e,t){return r(t.attributes,"Attr_")}static fromGraphic(e$1){return new b$2({barrierType:null!=e$1.attributes.BarrierType?g.fromJSON(e$1.attributes.BarrierType):null,costs:null!=e$1.attributes.Costs?e(JSON.parse(e$1.attributes.Costs)):null,geometry:e$1.geometry,name:e$1.attributes.Name??null,objectId:e$1.attributes.ObjectID??e$1.attributes.__OBJECTID,popupTemplate:e$1.popupTemplate,scaleFactor:e$1.attributes.ScaleFactor??null,symbol:e$1.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:null!=this.barrierType?g.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(s(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new d$1({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};d.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],e$1([y$2({type:g.apiValues,json:{read:{source:"attributes.BarrierType",reader:g.read}}})],d.prototype,"barrierType",void 0),e$1([y$2()],d.prototype,"costs",void 0),e$1([o$2("costs",["attributes"])],d.prototype,"readCosts",null),e$1([y$2({type:m$3,json:{write:!0}})],d.prototype,"geometry",void 0),e$1([y$2({json:{name:"attributes.Name"}})],d.prototype,"name",void 0),e$1([y$2({json:{name:"attributes.ObjectID"}})],d.prototype,"objectId",void 0),e$1([y$2({type:k$1})],d.prototype,"popupTemplate",void 0),e$1([y$2()],d.prototype,"scaleFactor",void 0),e$1([y$2({types:j$3})],d.prototype,"symbol",void 0),e$1([y$2({readOnly:!0,json:{read:!1}})],d.prototype,"type",void 0),d=b$2=e$1([a$2("esri.rest.support.PolylineBarrier")],d);const j$1=d;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let b$1=class b extends(i$3(f$2)){constructor(t){super(t),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null;}readId(t,r){return r.id??r.itemId??null}readRestrictionAttributes(t,r){const{restrictionAttributeNames:e}=r;return null==e?null:e.map((t=>M.fromJSON(t)))}writeRestrictionAttributes(t,r,e){null!=t&&(r[e]=t.map((t=>M.toJSON(t))));}};e$1([y$2({type:[Object],json:{write:!0}})],b$1.prototype,"attributeParameterValues",void 0),e$1([y$2({type:String,json:{write:!0}})],b$1.prototype,"description",void 0),e$1([o$3(y$1,{ignoreUnknown:!1})],b$1.prototype,"distanceAttributeName",void 0),e$1([y$2({type:String,json:{write:!0}})],b$1.prototype,"id",void 0),e$1([o$2("id",["id","itemId"])],b$1.prototype,"readId",null),e$1([o$3(w$1,{ignoreUnknown:!1})],b$1.prototype,"impedanceAttributeName",void 0),e$1([y$2({type:String,json:{write:!0}})],b$1.prototype,"name",void 0),e$1([y$2({type:[String],json:{write:!0}})],b$1.prototype,"restrictionAttributeNames",void 0),e$1([o$2("restrictionAttributeNames")],b$1.prototype,"readRestrictionAttributes",null),e$1([r$2("restrictionAttributeNames")],b$1.prototype,"writeRestrictionAttributes",null),e$1([y$2({type:Number,json:{write:{allowNull:!0}}})],b$1.prototype,"simplificationTolerance",void 0),e$1([o$3(r$1)],b$1.prototype,"simplificationToleranceUnits",void 0),e$1([o$3(D,{ignoreUnknown:!1})],b$1.prototype,"timeAttributeName",void 0),e$1([o$3(A)],b$1.prototype,"type",void 0),e$1([y$2({type:Boolean,json:{write:!0}})],b$1.prototype,"useHierarchy",void 0),e$1([o$3(m$2)],b$1.prototype,"uturnAtJunctions",void 0),b$1=e$1([a$2("esri.rest.support.TravelMode")],b$1);const j=b$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let a=class extends f$2{constructor(t){super(t),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null;}readAccumulateAttributes(t){return null==t?null:t.map((t=>w$1.fromJSON(t)))}writeAccumulateAttributes(t,e,r){t?.length&&(e[r]=t.map((t=>w$1.toJSON(t))));}};e$1([y$2({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],a.prototype,"accumulateAttributes",void 0),e$1([o$2("accumulateAttributes")],a.prototype,"readAccumulateAttributes",null),e$1([r$2("accumulateAttributes")],a.prototype,"writeAccumulateAttributes",null),e$1([y$2({type:String,json:{write:!0}})],a.prototype,"directionsLanguage",void 0),e$1([y$2({type:Boolean,json:{write:!0}})],a.prototype,"findBestSequence",void 0),e$1([y$2({type:Boolean,json:{write:!0}})],a.prototype,"preserveFirstStop",void 0),e$1([y$2({type:Boolean,json:{write:!0}})],a.prototype,"preserveLastStop",void 0),e$1([y$2({type:Boolean,json:{write:!0}})],a.prototype,"startTimeIsUTC",void 0),e$1([y$2({type:Boolean,json:{write:!0}})],a.prototype,"timeWindowsAreUTC",void 0),e$1([y$2({type:j,json:{write:!0}})],a.prototype,"travelMode",void 0),a=e$1([a$2("esri.rest.support.RouteSettings")],a);const c=a;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var b;let f=b=class extends(i$3(f$2)){constructor(t){super(t),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0";}readEndTime(t,e){return null!=e.attributes.EndTimeUTC?new Date(e.attributes.EndTimeUTC):null}readEndTimeOffset(t,e){return n(e.attributes.EndTime,e.attributes.EndTimeUTC)}readStartTime(t,e){return null!=e.attributes.StartTimeUTC?new Date(e.attributes.StartTimeUTC):null}readStartTimeOffset(t,e){return n(e.attributes.StartTime,e.attributes.StartTimeUTC)}readTotalCosts(t,e){return r(e.attributes,"Total_")}readTotalViolations(t,e){return r(e.attributes,"TotalViolation_")}readTotalWait(t,e){return r(e.attributes,"TotalWait_")}static fromGraphic(t){return new b({analysisSettings:null!=t.attributes.AnalysisSettings?c.fromJSON(JSON.parse(t.attributes.AnalysisSettings)):null,endTime:null!=t.attributes.EndTime?new Date(t.attributes.EndTime):null,endTimeOffset:t.attributes.EndUTCOffset??null,geometry:t.geometry,messages:null!=t.attributes.Messages?JSON.parse(t.attributes.Messages):null,name:t.attributes.RouteName,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,startTime:null!=t.attributes.StartTime?new Date(t.attributes.StartTime):null,startTimeOffset:t.attributes.StartUTCOffset??null,symbol:t.symbol,totalCosts:null!=t.attributes.TotalCosts?e(JSON.parse(t.attributes.TotalCosts)):null,totalDistance:t.attributes.TotalMeters??null,totalDuration:t.attributes.TotalMinutes??null,totalLateDuration:t.attributes.TotalLateMinutes??null,totalWaitDuration:t.attributes.TotalWaitMinutes??null,version:t.attributes.Version})}toGraphic(){const t={ObjectID:this.objectId,AnalysisSettings:null!=this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:null!=this.endTime?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:null!=this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:null!=this.startTime?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:null!=this.totalCosts?JSON.stringify(s(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new d$1({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};f.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}],e$1([y$2()],f.prototype,"analysisSettings",void 0),e$1([y$2()],f.prototype,"endTime",void 0),e$1([o$2("endTime",["attributes.EndTimeUTC"])],f.prototype,"readEndTime",null),e$1([y$2()],f.prototype,"endTimeOffset",void 0),e$1([o$2("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],f.prototype,"readEndTimeOffset",null),e$1([y$2({json:{read:{source:"attributes.FirstStopID"}}})],f.prototype,"firstStopId",void 0),e$1([y$2({type:m$3})],f.prototype,"geometry",void 0),e$1([y$2({json:{read:{source:"attributes.LastStopID"}}})],f.prototype,"lastStopId",void 0),e$1([y$2()],f.prototype,"messages",void 0),e$1([y$2({json:{read:{source:"attributes.Name"}}})],f.prototype,"name",void 0),e$1([y$2({json:{read:{source:"attributes.ObjectID"}}})],f.prototype,"objectId",void 0),e$1([y$2({type:k$1})],f.prototype,"popupTemplate",void 0),e$1([y$2()],f.prototype,"startTime",void 0),e$1([o$2("startTime",["attributes.StartTimeUTC"])],f.prototype,"readStartTime",null),e$1([y$2()],f.prototype,"startTimeOffset",void 0),e$1([o$2("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],f.prototype,"readStartTimeOffset",null),e$1([y$2({json:{read:{source:"attributes.StopCount"}}})],f.prototype,"stopCount",void 0),e$1([y$2({types:j$3})],f.prototype,"symbol",void 0),e$1([y$2()],f.prototype,"totalCosts",void 0),e$1([o$2("totalCosts",["attributes"])],f.prototype,"readTotalCosts",null),e$1([y$2()],f.prototype,"totalDistance",void 0),e$1([y$2()],f.prototype,"totalDuration",void 0),e$1([y$2()],f.prototype,"totalLateDuration",void 0),e$1([y$2()],f.prototype,"totalViolations",void 0),e$1([o$2("totalViolations",["attributes"])],f.prototype,"readTotalViolations",null),e$1([y$2()],f.prototype,"totalWait",void 0),e$1([o$2("totalWait",["attributes"])],f.prototype,"readTotalWait",null),e$1([y$2()],f.prototype,"totalWaitDuration",void 0),e$1([y$2({readOnly:!0,json:{read:!1}})],f.prototype,"type",void 0),e$1([y$2()],f.prototype,"version",void 0),f=b=e$1([a$2("esri.rest.support.RouteInfo")],f);const S$1=f;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
var C;let S=C=class extends(i$3(f$2)){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null;}readArriveTimeOffset(e,t){return n(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return r(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return n(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return r(t.attributes,"Attr_")}writeServiceCosts(e,t){i(e,t,"Attr_");}writeTimeWindowEnd(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime());}writeTimeWindowStart(e,t){null!=e&&(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime());}readViolations(e,t){return r(t.attributes,"Violation_")}readWait(e,t){return r(t.attributes,"Wait_")}static fromGraphic(e$1){return new C({arriveCurbApproach:null!=e$1.attributes.ArrivalCurbApproach?p.fromJSON(e$1.attributes.ArrivalCurbApproach):null,arriveTime:null!=e$1.attributes.ArrivalTime?new Date(e$1.attributes.ArrivalTime):null,arriveTimeOffset:e$1.attributes.ArrivalUTCOffset,cumulativeCosts:null!=e$1.attributes.CumulativeCosts?e(JSON.parse(e$1.attributes.CumulativeCosts)):null,cumulativeDistance:e$1.attributes.CumulativeMeters??null,cumulativeDuration:e$1.attributes.CumulativeMinutes??null,curbApproach:null!=e$1.attributes.CurbApproach?p.fromJSON(e$1.attributes.CurbApproach):null,departCurbApproach:null!=e$1.attributes.DepartureCurbApproach?p.fromJSON(e$1.attributes.DepartureCurbApproach):null,departTime:null!=e$1.attributes.DepartureTime?new Date(e$1.attributes.DepartureTime):null,departTimeOffset:e$1.attributes.DepartureUTCOffset??null,geometry:e$1.geometry,lateDuration:e$1.attributes.LateMinutes??null,locationType:null!=e$1.attributes.LocationType?v.fromJSON(e$1.attributes.LocationType):null,name:e$1.attributes.Name,objectId:e$1.attributes.ObjectID??e$1.attributes.__OBJECTID,popupTemplate:e$1.popupTemplate,routeName:e$1.attributes.RouteName,sequence:e$1.attributes.Sequence??null,serviceCosts:null!=e$1.attributes.ServiceCosts?e(JSON.parse(e$1.attributes.ServiceCosts)):null,serviceDistance:e$1.attributes.ServiceMeters??null,serviceDuration:e$1.attributes.ServiceMinutes??null,status:null!=e$1.attributes.Status?T$2.fromJSON(e$1.attributes.Status):null,symbol:e$1.symbol,timeWindowEnd:null!=e$1.attributes.TimeWindowEnd?new Date(e$1.attributes.TimeWindowEnd):null,timeWindowEndOffset:e$1.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:null!=e$1.attributes.TimeWindowStart?new Date(e$1.attributes.TimeWindowStart):null,timeWindowStartOffset:e$1.attributes.TimeWindowStartUTCOffset??null,waitDuration:e$1.attributes.WaitMinutes??null})}toGraphic(){const e={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?p.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify(s(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?p.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?p.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?v.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify(s(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?T$2.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new d$1({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};S.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time",type:"esriFieldTypeInteger"},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString"},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble"},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger"},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate"},{name:"DepartureUTCOffset",alias:"Departure Time",type:"esriFieldTypeInteger"},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble"},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString"},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble"},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate"},{name:"TimeWindowEndUTCOffset",alias:"Time Window End Offset",type:"esriFieldTypeInteger"},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate"},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start Offset",type:"esriFieldTypeInteger"},{name:"WaitMinutes",alias:"Minutes Wait",type:"esriFieldTypeDouble"}],e$1([y$2({type:p.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:p.read}}})],S.prototype,"arriveCurbApproach",void 0),e$1([y$2({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],S.prototype,"arriveTime",void 0),e$1([y$2()],S.prototype,"arriveTimeOffset",void 0),e$1([o$2("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],S.prototype,"readArriveTimeOffset",null),e$1([y$2({json:{name:"attributes.Bearing",read:!1,write:!0}})],S.prototype,"bearing",void 0),e$1([y$2({json:{name:"attributes.BearingTol",read:!1,write:!0}})],S.prototype,"bearingTol",void 0),e$1([y$2()],S.prototype,"cumulativeCosts",void 0),e$1([o$2("cumulativeCosts",["attributes"])],S.prototype,"readCumulativeCosts",null),e$1([y$2()],S.prototype,"cumulativeDistance",void 0),e$1([y$2()],S.prototype,"cumulativeDuration",void 0),e$1([y$2({type:p.apiValues,json:{name:"attributes.CurbApproach",read:{reader:p.read},write:{writer:p.write}}})],S.prototype,"curbApproach",void 0),e$1([y$2({type:p.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:p.read}}})],S.prototype,"departCurbApproach",void 0),e$1([y$2({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],S.prototype,"departTime",void 0),e$1([y$2()],S.prototype,"departTimeOffset",void 0),e$1([o$2("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],S.prototype,"readDepartTimeOffset",null),e$1([y$2({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],S.prototype,"distanceToNetworkInMeters",void 0),e$1([y$2({type:_$1,json:{write:!0}})],S.prototype,"geometry",void 0),e$1([y$2()],S.prototype,"lateDuration",void 0),e$1([y$2({type:v.apiValues,json:{name:"attributes.LocationType",read:{reader:v.read},write:{writer:v.write}}})],S.prototype,"locationType",void 0),e$1([y$2({json:{name:"attributes.Name"}})],S.prototype,"name",void 0),e$1([y$2({json:{name:"attributes.NavLatency",read:!1,write:!0}})],S.prototype,"navLatency",void 0),e$1([y$2({json:{name:"attributes.ObjectID"}})],S.prototype,"objectId",void 0),e$1([y$2({type:k$1})],S.prototype,"popupTemplate",void 0),e$1([y$2({json:{read:{source:"attributes.PosAlong"}}})],S.prototype,"posAlong",void 0),e$1([y$2({json:{name:"attributes.RouteName"}})],S.prototype,"routeName",void 0),e$1([y$2()],S.prototype,"serviceCosts",void 0),e$1([o$2("serviceCosts",["attributes"])],S.prototype,"readServiceCosts",null),e$1([r$2("serviceCosts")],S.prototype,"writeServiceCosts",null),e$1([y$2()],S.prototype,"serviceDistance",void 0),e$1([y$2()],S.prototype,"serviceDuration",void 0),e$1([y$2({json:{name:"attributes.Sequence"}})],S.prototype,"sequence",void 0),e$1([y$2({type:N.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:N.read}}})],S.prototype,"sideOfEdge",void 0),e$1([y$2({json:{read:{source:"attributes.SnapX"}}})],S.prototype,"snapX",void 0),e$1([y$2({json:{read:{source:"attributes.SnapY"}}})],S.prototype,"snapY",void 0),e$1([y$2({json:{read:{source:"attributes.SnapZ"}}})],S.prototype,"snapZ",void 0),e$1([y$2({json:{read:{source:"attributes.SourceID"}}})],S.prototype,"sourceId",void 0),e$1([y$2({json:{read:{source:"attributes.SourceOID"}}})],S.prototype,"sourceOid",void 0),e$1([y$2({type:T$2.apiValues,json:{read:{source:"attributes.Status",reader:T$2.read}}})],S.prototype,"status",void 0),e$1([y$2({types:j$3})],S.prototype,"symbol",void 0),e$1([y$2({type:Date,json:{name:"attributes.TimeWindowEnd"}})],S.prototype,"timeWindowEnd",void 0),e$1([r$2("timeWindowEnd")],S.prototype,"writeTimeWindowEnd",null),e$1([y$2()],S.prototype,"timeWindowEndOffset",void 0),e$1([y$2({type:Date,json:{name:"attributes.TimeWindowStart"}})],S.prototype,"timeWindowStart",void 0),e$1([r$2("timeWindowStart")],S.prototype,"writeTimeWindowStart",null),e$1([y$2()],S.prototype,"timeWindowStartOffset",void 0),e$1([y$2({readOnly:!0,json:{read:!1}})],S.prototype,"type",void 0),e$1([y$2()],S.prototype,"violations",void 0),e$1([o$2("violations",["attributes"])],S.prototype,"readViolations",null),e$1([y$2()],S.prototype,"waitDuration",void 0),e$1([y$2()],S.prototype,"wait",void 0),e$1([o$2("wait",["attributes"])],S.prototype,"readWait",null),S=C=e$1([a$2("esri.rest.support.Stop")],S);const w=S;

export { C$1 as C, D, M, P, R, S$1 as S, T, U, w$1 as a, a$1 as b, c$2 as c, j as d, o as e, b$3 as f, c$3 as g, c as h, j$1 as j, l, m$2 as m, n, o$1 as o, q, r$1 as r, w, y };
