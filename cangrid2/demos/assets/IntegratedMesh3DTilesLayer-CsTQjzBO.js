import { en as l, e9 as b, ea as j, eb as t, ec as S, eo as e, ep as i, bA as f$1, a_ as w$1, eq as M, aq as r$1, dJ as e$1, dM as u, er as O$1, dI as r, cz as n, cP as u$1, es as m, et as b$1, eu as K, s, A as a, U, G as n$1, bd as e$2, be as y, ev as d, eg as p, bf as a$1, em as f, ap as n$2 } from './main-CGBWc59Z.js';
import { $, Z, w } from './elevationInfoUtils-DMrqpNRa.js';
import './preload-helper-dJJaZANz.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.30/esri/copyright.txt for details.
*/
let D=class extends(l(b(j(t(S(e(i(f)))))))){constructor(e){super(e),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new f$1({wkid:4326,vcsWkid:115700}),this.fullExtent=new w$1(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0;}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo();}_verifyArray(e,t){if(!Array.isArray(e)||e.length<t)return !1;for(const r of e)if("number"!=typeof r)return !1;return !0}_initFullExtent(e){const t=e.root?.boundingVolume;if(!t)return;if(t.box){const e=t?.box;if(e[3]>7972671&&e[7]>7972671&&e[11]>7945940)return}const r$2=e.root?.transform,i=n$2();if(t.region&&this._verifyArray(t.region,6)){const e=t.region,r=M(e[0]),i=M(e[1]),s=e[4],a=M(e[2]),n=M(e[3]),m=e[5];this.fullExtent=new w$1({xmin:r,ymin:i,zmin:s,xmax:a,ymax:n,zmax:m,spatialReference:this.spatialReference});}else if(t.sphere&&this._verifyArray(t.sphere,4)){const e=t.sphere,o=r$1(e[0],e[1],e[2]),s=e[3]/Math.sqrt(3),a=n$2();e$1(a,o,r$1(s,s,s));const n$1=n$2();if(u(n$1,o,r$1(s,s,s)),r$2&&this._verifyArray(r$2,16)){const e=r$2;O$1(i,a,e),r(a,i),O$1(i,n$1,e),r(n$1,i);}n(a,u$1,0,a,f$1.WGS84,0,1),n(n$1,u$1,0,n$1,f$1.WGS84,0,1);const m$1=n$2(),u$2=n$2();m(m$1,a,n$1),b$1(u$2,a,n$1),this.fullExtent=new w$1({xmin:m$1[0],ymin:m$1[1],zmin:m$1[2],xmax:u$2[0],ymax:u$2[1],zmax:u$2[2],spatialReference:this.spatialReference});}else if(t.box&&this._verifyArray(t.box,12)){const e=t.box,i=r$1(e[0],e[1],e[2]),o=r$1(e[3],e[4],e[5]),s=r$1(e[6],e[7],e[8]),a=r$1(e[9],e[10],e[11]),n$1=[];for(let t=0;t<8;++t)n$1.push(n$2());if(u(n$1[0],i,o),u(n$1[0],n$1[0],s),u(n$1[0],n$1[0],a),K(n$1[1],i,o),u(n$1[1],n$1[1],s),u(n$1[1],n$1[1],a),u(n$1[2],i,o),K(n$1[2],n$1[2],s),u(n$1[2],n$1[2],a),K(n$1[3],i,o),K(n$1[3],n$1[3],s),u(n$1[3],n$1[3],a),u(n$1[4],i,o),u(n$1[4],n$1[4],s),K(n$1[4],n$1[4],a),K(n$1[5],i,o),u(n$1[5],n$1[5],s),K(n$1[5],n$1[5],a),u(n$1[6],i,o),K(n$1[6],n$1[6],s),K(n$1[6],n$1[6],a),K(n$1[7],i,o),K(n$1[7],n$1[7],s),K(n$1[7],n$1[7],a),r$2&&this._verifyArray(r$2,16)){const e=r$2;for(let t=0;t<8;++t)O$1(n$1[t],n$1[t],e);}const m$1=r$1(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),p=r$1(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let t=0;t<8;++t)n(n$1[t],u$1,0,n$1[t],f$1.WGS84,0,1),m(p,p,n$1[t]),b$1(m$1,m$1,n$1[t]);this.fullExtent=new w$1({xmin:p[0],ymin:p[1],zmin:p[2],xmax:m$1[0],ymax:m$1[1],zmax:m$1[2],spatialReference:this.spatialReference});}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const i=null!=e?e.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:e=>{if(e.typeKeywords?.includes("IntegratedMesh"))return !0;throw new s("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},e);}catch(o){a(o);}if(this.url){const e=U(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:i}).then((e=>{this._initFullExtent(e.data);}),(e=>{a(e);}));await e;}}async fetchAttributionData(){return this.load().then((()=>({})))}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh 3d tiles layers";$(n$1.getLogger(this),Z(t,"absolute-height",e)),$(n$1.getLogger(this),w(t,e));}};e$2([y({type:["IntegratedMesh3DTilesLayer"]})],D.prototype,"operationalLayerType",void 0),e$2([y({type:f$1})],D.prototype,"spatialReference",void 0),e$2([y({type:w$1})],D.prototype,"fullExtent",void 0),e$2([y(d)],D.prototype,"elevationInfo",null),e$2([y({type:["show","hide"]})],D.prototype,"listMode",void 0),e$2([y(p)],D.prototype,"url",void 0),e$2([y({readOnly:!0})],D.prototype,"type",void 0),e$2([y({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],D.prototype,"path",void 0),e$2([y({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],D.prototype,"minScale",void 0),e$2([y({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],D.prototype,"maxScale",void 0),D=e$2([a$1("esri.layers.IntegratedMesh3DTilesLayer")],D);const z=D;

export { z as default };
