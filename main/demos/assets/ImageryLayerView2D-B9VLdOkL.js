import{j as $,O as b,i as _,bx as P,q as a,v as n,x as v,b_ as z,c1 as B,ad as f,eb as T,$ as U,c0 as I,s as A,N as H,c4 as E,ag as S,V as q,a3 as V,br as C,aq as O}from"./main-k8tKZnmb.js";import{c as L}from"./GraphicsCollection-CKuL-c8X.js";import{d as G,f as M,h as N}from"./RasterVFDisplayObject-DxYBHTCu.js";import{S as j}from"./LayerView2D-YoNtM_-0.js";import{O as J}from"./GraphicsView2D-B2tSVXMp.js";import{a as W}from"./HighlightGraphicContainer-pRt7xvjN.js";import{U as Q,m as K}from"./dataUtils-B4MbYYsh.js";import{r as X}from"./BitmapContainer-Dd-w8j2H.js";import{n as Y}from"./Container-B8SsxJG4.js";import{l as Z}from"./BitmapTechnique-C0xzX-9_.js";import{M as tt}from"./ExportStrategy-PlUn17Qm.js";import{Q as et,O as it,v as rt}from"./rasterProjectionHelper-DkhnE9CV.js";import{E as D}from"./enums-CYA9bPPo.js";import{n as st}from"./WGLContainer-B5I5DaWh.js";import{i as at}from"./timeSupport-C3y62dSG.js";import{R as ot}from"./Query-DhjRt9T2.js";import{p as nt}from"./popupUtils-BPRFrlgh.js";import{u as lt}from"./LayerView-Bb9A-g7c.js";import{i as pt}from"./RefreshableLayerView-BBBTAI5B.js";import{c as ht}from"./utils-4iSImE8N.js";import"./preload-helper-B76NpbEU.js";import"./mat3-CruJiiUv.js";import"./common-DQOJ18NT.js";import"./MapView-B3viiXHw.js";import"./Cyclical-DApsoXUX.js";import"./CollectionFlattener-CEyLY-gI.js";import"./workers-D5nzg_qR.js";import"./Queue-C89snT1g.js";import"./intl-RjT9zNQm.js";import"./projectionUtils-DIS7PC4A.js";import"./TileInfo-Cgg3olE6.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-Ua3BOprA.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-BCLFXPsO.js";import"./asyncUtils-D0EMTWm1.js";import"./Map-zwp6Tlo7.js";import"./Basemap-4P26dkXC.js";import"./loadAll-Cxr_Tk8y.js";import"./PortalItem-CYuvzu9i.js";import"./writeUtils-C7HIMvCx.js";import"./persistable-CoSCx_Zl.js";import"./MD5-MtSiOt06.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-Bxg6zm5w.js";import"./PolygonCollection-C3D0YHu_.js";import"./editableLayers-BVWT-MIW.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-BAfIq2QH.js";import"./TablesMixin-DIHHjC8_.js";import"./Layer-D8DDahaf.js";import"./TimeExtent-D6pCjbMu.js";import"./HeightModelInfo-CLiUZYJY.js";import"./timeZoneUtils-ky29T8ln.js";import"./ReactiveMap-BVp67DiA.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-CH-gvrN5.js";import"./a11yUtils-BOcrwCVQ.js";import"./projectionUtils-DUI3_StO.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-DaIorkvk.js";import"./normalizeUtilsCommon-BWyMqclx.js";import"./utils-nKLuUXi2.js";import"./utils-Nx2AyMpl.js";import"./mat2df32-Dpt2CT5P.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-Cwi4gh8e.js";import"./debugFlags-CTi8LP6B.js";import"./vec32-zWZ2UyKY.js";import"./unitBezier-B1N-tmtC.js";import"./TileKey-RkMamIuh.js";import"./definitions-CASyCajO.js";import"./enums-UBzvFP7O.js";import"./Texture-D4hDUUnZ.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./imageUtils-XUnZEdLq.js";import"./capabilities-Bi6C4OG6.js";import"./modeUtils-1fSvrGRf.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./ColorBackground-D8XChhwc.js";import"./VertexArrayObject-kxTZ7rqR.js";import"./memoryEstimations-CZ51G4hw.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Utils-CHR2SqvR.js";import"./BoundingBox-BSOANoLO.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-R-fpY5l5.js";import"./FieldsIndex-DAzXbx6Z.js";import"./UnknownTimeZone-CpqFNwpB.js";import"./CIMSymbolHelper-rEQOND71.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CXByxOsj.js";import"./OptimizedGeometry-DNfcmlS2.js";import"./GeometryUtils-B0cujf_5.js";import"./enums-_AFKM9Yk.js";import"./utils-BV7DBUkI.js";import"./defaultCIMValues-CQAn2izL.js";import"./rasterizingUtils-BdstbTuy.js";import"./floatRGBA-CK1VYSlm.js";import"./Rect-CUzevAry.js";import"./OverrideHelper-DC0F2XHG.js";import"./colorUtils-CZ-IPTbQ.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./ArcadeExpression-Bvob0Gfz.js";import"./TimeOnly-dibSUpm0.js";import"./enum-OZiVVS0w.js";import"./callExpressionWithFeature-CtrReD22.js";import"./quantizationUtils-Cgf554Hg.js";import"./AttributeStore-CrP_65Bl.js";import"./UpdateTracking2D-DkLjg-2x.js";import"./labelUtils-CGyxyV31.js";import"./diffUtils-0GlP_MNw.js";import"./constants-BFLErLYb.js";import"./queryUtils-D-MMvOPg.js";import"./json-Wa8cmqdu.js";import"./timeSupport-Cm0S4HK2.js";import"./featureConversionUtils-gZP9czlS.js";import"./OptimizedFeature-CbZ7bgx-.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-Bgt_OadJ.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-BMPDF0to.js";import"./FramebufferObject-C0dCMKxo.js";import"./ProgramTemplate-CRSdf7Kn.js";import"./ShaderBuilder-llCBvZkx.js";import"./BindType-BBwFZqyN.js";import"./utils-DnL75I-j.js";import"./lengthUtils-Dg4onrdA.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CJyDyx3p.js";import"./normalizeUtilsSync-eN2v4kOb.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-BN6BikUz.js";import"./Field-Clg3ZxG8.js";import"./fieldType-mqNBNOeO.js";import"./AGraphicContainer-ioF__u8h.js";import"./TechniqueInstance-CIhJrwnN.js";import"./TileContainer-7W_9qRZ_.js";import"./vec3f32-WCVSSNPR.js";import"./pixelRangeUtils-BvOub3JO.js";import"./EffectView-BQ7snyGZ.js";import"./parser-Zx2wAts1.js";import"./bitmapUtils-CAtKo4Ia.js";import"./quickselect-QQC62dOK.js";import"./StyleDefinition-CQkO14Uj.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./Version-Bshojf6J.js";let h=class extends ${constructor(){super(...arguments),this.attached=!1,this.container=new Y,this.updateRequested=!1,this.type="imagery",this._bitmapView=new X}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch(i=>{b(i)||_.getLogger(this).error(i)})}hitTest(e){return new P({attributes:{},geometry:e.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const e=this.layer.version>=10,i=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,o=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new tt({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:i,imageMaxWidth:o,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async e=>{const{source:i}=e;if(!i||i instanceof ImageBitmap)return;const o=await this.layer.applyRenderer({extent:i.extent,pixelBlock:i.originalPixelBlock??i.pixelBlock});i.filter=s=>this.layer.pixelFilter?this.layer.applyFilter(s):{...o,extent:i.extent}}).catch(e=>{b(e)||_.getLogger(this).error(e)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(e.length===1&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const i=this.view.extent,o=e.map(r=>r.source).filter(r=>r.extent&&r.extent.intersects(i)).map(r=>({extent:r.extent,pixelBlock:r.originalPixelBlock})),s=Q(o,i);return s!=null?{extent:s.extent,pixelBlock:s.pixelBlock}:null}return null}async _fetchImage(e,i,o,s){(s=s||{}).timeExtent=this.timeExtent,s.requestAsImageElement=!0,s.returnImageBitmap=!0;const r=await this.layer.internalFetchImage(e,i,o,s);if(r.imageBitmap)return r.imageBitmap;const l=await this.layer.applyRenderer(r.pixelData,{signal:s.signal}),p=new Z(l.pixelBlock,l.extent?.clone(),r.pixelData.pixelBlock);return p.filter=m=>this.layer.applyFilter(m),p}};a([n()],h.prototype,"attached",void 0),a([n()],h.prototype,"container",void 0),a([n()],h.prototype,"layer",void 0),a([n()],h.prototype,"strategy",void 0),a([n()],h.prototype,"timeExtent",void 0),a([n()],h.prototype,"view",void 0),a([n()],h.prototype,"updateRequested",void 0),a([n()],h.prototype,"updating",null),a([n()],h.prototype,"type",void 0),h=a([v("esri.views.2d.layers.imagery.ImageryView2D")],h);class mt extends st{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[G],target:()=>this.children,drawPhase:D.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===D.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let u=class extends ${constructor(t){super(t),this._loading=null,this.update=z((e,i)=>this._update(e,i).catch(o=>{b(o)||_.getLogger(this).error(o)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:o,spatialReference:s}=t.state,r=new B({xmin:o.xmin,ymin:o.ymin,xmax:o.xmax,ymax:o.ymax,spatialReference:s}),[l,p]=t.state.size;this._loading=this.fetchPixels(r,l,p,i);const m=await this._loading;this._addToDisplay(m,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(l=>l.destroy()),void this.container.removeAllChildren();const{extent:o,pixelBlock:s}=t,r=new M(s);r.offset=[0,0],r.symbolizerParameters=e,r.rawPixelData=t,r.invalidateVAO(),r.x=o.xmin,r.y=o.ymax,r.pixelRatio=i.pixelRatio,r.rotation=i.rotation,r.resolution=i.resolution,r.width=s.width*e.symbolTileSize,r.height=s.height*e.symbolTileSize,this.container.children.forEach(l=>l.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(r)}};a([n()],u.prototype,"fetchPixels",void 0),a([n()],u.prototype,"container",void 0),a([n()],u.prototype,"_loading",void 0),a([n()],u.prototype,"updating",null),u=a([v("esri.views.2d.layers.imagery.ImageryVFStrategy")],u);let c=class extends ${constructor(){super(...arguments),this.attached=!1,this.container=new mt,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,o)=>{const s=await this._projectFullExtentPromise,{layer:r}=this,{symbolTileSize:l}=r.renderer,{extent:p,width:m,height:y}=K(t,e,i,l,s);if(s!=null&&!s.intersects(t))return{extent:p,pixelBlock:null};const g={bbox:`${p.xmin}, ${p.ymin}, ${p.xmax}, ${p.ymax}`,exportParametersVersion:r.exportImageServiceParameters.version,symbolTileSize:l,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(g)){const d=this.getPixelData();if(d!=null&&`${d.extent.xmin}, ${d.extent.ymin}, ${d.extent.xmax}, ${d.extent.ymax}`===g.bbox)return d}const{pixelBlock:x}=await r.fetchPixels(p,m,y,{timeExtent:this.timeExtent,interpolation:r.interpolation,signal:o});if(this._dataParameters=g,x==null)return{extent:p,pixelBlock:null};const{dataType:R}=r.rasterInfo;return{extent:p,pixelBlock:R==="vector-uv"&&x?await r.convertVectorFieldData(x,"vector-uv",{signal:o}):x}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new u({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(f(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),T),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){const t=this.container.children[0]?.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new P({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{b(e)||_.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,o=this._dataParameters.symbolTileSize===t.symbolTileSize,s=this._dataParameters.bbox===t.bbox;return e&&i&&o&&s}async _getProjectedFullExtent(t){try{return et(this.layer.fullExtent,t)}catch{try{const i=(await U(this.layer.url,{query:{option:"footprints",outSR:I(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?B.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t?.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([n()],c.prototype,"attached",void 0),a([n()],c.prototype,"container",void 0),a([n()],c.prototype,"layer",void 0),a([n()],c.prototype,"timeExtent",void 0),a([n()],c.prototype,"type",void 0),a([n()],c.prototype,"view",void 0),a([n()],c.prototype,"updating",null),c=a([v("esri.views.2d.layers.imagery.VectorFieldView2D")],c);const ct=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}get timeExtent(){return at(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(i,o){const{layer:s}=this;if(!i)throw new A("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:r}=s,l=nt(s,o);if(!r||l==null)return[];const p=await l.getRequiredFields();H(o);const m=new ot;m.timeExtent=this.timeExtent,m.geometry=i,m.outFields=p,m.outSpatialReference=i.spatialReference;const{resolution:y,spatialReference:g}=this.view,x=this.view.type==="2d"?new E(y,y,g):new E(.5*y,.5*y,g),{returnTopmostRaster:R,showNoDataRecords:d}=l.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},k={returnDomainValues:!0,returnTopmostRaster:R,pixelSize:x,showNoDataRecords:d,signal:o?.signal};return s.queryVisibleRasters(m,k).then(F=>F)}async getSourceScale(){return await rt(),await this.layer.load(),it(this.layer.serviceRasterInfo,this.view.spatialReference)}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return a([n()],e.prototype,"layer",void 0),a([n()],e.prototype,"suspended",void 0),a([n({readOnly:!0})],e.prototype,"timeExtent",null),a([n()],e.prototype,"view",void 0),e=a([v("esri.views.layers.ImageryLayerView")],e),e};let w=class extends ct(pt(j(lt))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new L,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){this.subview?.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new J({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new W(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([f(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},S),f(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},S),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),f(()=>this.layer.renderer,()=>this._setSubView())])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null,this._highlightView?.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:q.isCollection(t)?t.at(0):t)instanceof P))return V();let i=[];if(Array.isArray(t)||q.isCollection(t)?i=t.map(r=>r.clone()):t instanceof P&&(i=[t.clone()]),!i?.filter(C)?.length)return V();const s=e?.name??ht;return this._addHighlightGraphics(i,s),V(()=>!this.destroyed&&this._removeHighlightGraphics(i,s))}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map(i=>i.uid),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(i=>i.uid),e)}async doRefresh(){this.requestUpdate()}isUpdating(){const t=!this.subview||this.subview.updating||!!this._highlightView?.updating;return O("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${this._highlightView?.updating}
`),t}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_setSubView(){if(!this.view)return;const t=this.layer.renderer?.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:i}=this.subview;if(i===e)return this._attachSubview(this.subview),void(i==="flow"?this.subview.redrawOrRefetch():i==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),this.subview?.destroy()}this.subview=e==="imagery"?new h({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new c({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new N({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([n()],w.prototype,"pixelData",null),a([n()],w.prototype,"subview",void 0),w=a([v("esri.views.2d.layers.ImageryLayerView2D")],w);const ar=w;export{ar as default};
