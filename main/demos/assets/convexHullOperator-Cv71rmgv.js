import{w as n,_ as p,D as s}from"./operatorConvexHull-BJMMdMPJ.js";import{fromGeometry as f,toGeometry as r,fromGeometries as c,fromGeometryToGXGeometry as u}from"./jsonConverter-C6S1qoXH.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Point2D-yI-uny1B.js";import"./ProjectionTransformation-M4n5JikL.js";import"./Envelope2D-N58wWtPO.js";import"./Transformation2D-CZuEM6rU.js";import"./main-k8tKZnmb.js";import"./preload-helper-B76NpbEU.js";import"./OperatorDefinitions-DP7_WWTp.js";function D(e){const o=f(e);return r(n(o.getGeometry()),o.getSpatialReference())}function P(e,o={}){const{merge:t=!1}=o,[m,i]=c(e);return p(m,t).map(a=>r(a,i))}function R(e){return s(u(e))}export{D as execute,P as executeMany,R as isConvex};
