import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-Di-yv68k.js";import{j as n,y as l}from"./LayerView-DXFIL_Fd.js";import"./preload-helper-ExcqyqRp.js";import"./Container-Cqlz-mbA.js";import"./MapView-CqP-Pe8W.js";import"./Cyclical-DG3WnzjN.js";import"./CollectionFlattener-BPwcoMJm.js";import"./workers-B-3l2v1Q.js";import"./projection-CYLKhgpd.js";import"./projectBuffer-3mYoUKUF.js";import"./TileInfo-BFL9y0OI.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-CO1Ae7vD.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-BjRQGvMV.js";import"./signal-VGlfR4Ca.js";import"./Map-5bZukfVD.js";import"./Basemap-CWy04dS9.js";import"./loadAll-DxfLEJdD.js";import"./PortalItem-C0wt6854.js";import"./writeUtils-CE4mn-WU.js";import"./compilerUtils-DvVWfSTH.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-VhU6idD3.js";import"./common-DQOJ18NT.js";import"./TablesMixin-Bc9o4POZ.js";import"./Layer-Lf0NR8Y2.js";import"./TimeExtent-BuwqwsNz.js";import"./GraphicsCollection-CxhW6Cez.js";import"./HeightModelInfo-o60UN0OS.js";import"./ReactiveMap-_r6XfeKU.js";import"./Query-CNJoIC0c.js";import"./Field-CdNux_Nu.js";import"./fieldType-DHh5MaW3.js";import"./arcgisLayerUrl-DycqnCy7.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-pHhKkPKV.js";import"./TileKey-BQB9a93j.js";import"./QueueProcessor-BwALueiD.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-5syqU7Xm.js";import"./normalizeUtilsCommon-BlsSL0El.js";import"./utils-Cuy3r-Ev.js";import"./utils-Ci78jMpc.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CgoZzrFK.js";import"./vec32-ZrCxljfK.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BvWxdaDi.js";import"./imageUtils-LNQsIgFc.js";import"./capabilities-A2uoe7dc.js";import"./Version-DVVbAD23.js";import"./ColorBackground-oFbxnaci.js";import"./parser-CInzATcp.js";import"./layerViewUtils-CmF6_rTD.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
