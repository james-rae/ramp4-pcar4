import{q as r,u as o,C as a,V as m}from"./main-BxgY9rsH.js";import{j as s,y as n}from"./LayerView-Bw68QYVv.js";import"./preload-helper-ExcqyqRp.js";import"./Container-2hSRG92w.js";import"./MapView-BohDHr0W.js";import"./Cyclical-BvcqjTWD.js";import"./CollectionFlattener-DzqMCXq2.js";import"./workers-C9VYj679.js";import"./projection-DMFhF-YC.js";import"./projectBuffer-DIzlXyWh.js";import"./TileInfo-DPusQr9p.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-DvMDXlLe.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-DRhJAX50.js";import"./signal-B6wOy_zH.js";import"./Map-CSyp66kr.js";import"./Basemap-O2VPJrn-.js";import"./loadAll-DkjYt7dC.js";import"./PortalItem-BsyR8trZ.js";import"./writeUtils-BVRKOWQ5.js";import"./compilerUtils-PTx1wDU2.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-D41khPIZ.js";import"./common-DQOJ18NT.js";import"./TablesMixin-D4h75GOY.js";import"./Layer-BarL0RL3.js";import"./TimeExtent-nXn1Yp-A.js";import"./GraphicsCollection-8L9-6PSr.js";import"./HeightModelInfo-C0vtfeQ9.js";import"./ReactiveMap-OpmgYpPj.js";import"./Query-BUGEVyQ0.js";import"./Field-BV6jxk4Y.js";import"./fieldType-CDehaUIf.js";import"./arcgisLayerUrl-ChGKuGlS.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-zig49yPv.js";import"./TileKey-Bo0G4b0o.js";import"./QueueProcessor-fPk1-H7O.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CDWFGYLp.js";import"./normalizeUtilsCommon-fjqoXs3F.js";import"./utils-BcXZRZfk.js";import"./utils-Bg1Av-fZ.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-BoT-lf2m.js";import"./vec32-BAamZCaj.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-DgvjBmYt.js";import"./imageUtils-CmYYmnLj.js";import"./capabilities-A2uoe7dc.js";import"./Version-FQ_QE7bS.js";import"./ColorBackground-8la_yifM.js";import"./parser-BUu-fTBs.js";import"./layerViewUtils-BOKP2LiI.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
